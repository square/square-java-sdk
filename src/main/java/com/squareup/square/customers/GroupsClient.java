/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.customers;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.SyncPagingIterable;
import com.squareup.square.customers.types.AddGroupsRequest;
import com.squareup.square.customers.types.CreateCustomerGroupRequest;
import com.squareup.square.customers.types.DeleteGroupsRequest;
import com.squareup.square.customers.types.GetGroupsRequest;
import com.squareup.square.customers.types.ListGroupsRequest;
import com.squareup.square.customers.types.RemoveGroupsRequest;
import com.squareup.square.customers.types.UpdateCustomerGroupRequest;
import com.squareup.square.types.AddGroupToCustomerResponse;
import com.squareup.square.types.CreateCustomerGroupResponse;
import com.squareup.square.types.CustomerGroup;
import com.squareup.square.types.DeleteCustomerGroupResponse;
import com.squareup.square.types.GetCustomerGroupResponse;
import com.squareup.square.types.RemoveGroupFromCustomerResponse;
import com.squareup.square.types.UpdateCustomerGroupResponse;

public class GroupsClient {
    protected final ClientOptions clientOptions;

    private final RawGroupsClient rawClient;

    public GroupsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawGroupsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawGroupsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Retrieves the list of customer groups of a business.
     */
    public SyncPagingIterable<CustomerGroup> list() {
        return this.rawClient.list().body();
    }

    /**
     * Retrieves the list of customer groups of a business.
     */
    public SyncPagingIterable<CustomerGroup> list(ListGroupsRequest request) {
        return this.rawClient.list(request).body();
    }

    /**
     * Retrieves the list of customer groups of a business.
     */
    public SyncPagingIterable<CustomerGroup> list(ListGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).body();
    }

    /**
     * Creates a new customer group for a business.
     * <p>The request must include the <code>name</code> value of the group.</p>
     */
    public CreateCustomerGroupResponse create(CreateCustomerGroupRequest request) {
        return this.rawClient.create(request).body();
    }

    /**
     * Creates a new customer group for a business.
     * <p>The request must include the <code>name</code> value of the group.</p>
     */
    public CreateCustomerGroupResponse create(CreateCustomerGroupRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).body();
    }

    /**
     * Retrieves a specific customer group as identified by the <code>group_id</code> value.
     */
    public GetCustomerGroupResponse get(GetGroupsRequest request) {
        return this.rawClient.get(request).body();
    }

    /**
     * Retrieves a specific customer group as identified by the <code>group_id</code> value.
     */
    public GetCustomerGroupResponse get(GetGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).body();
    }

    /**
     * Updates a customer group as identified by the <code>group_id</code> value.
     */
    public UpdateCustomerGroupResponse update(UpdateCustomerGroupRequest request) {
        return this.rawClient.update(request).body();
    }

    /**
     * Updates a customer group as identified by the <code>group_id</code> value.
     */
    public UpdateCustomerGroupResponse update(UpdateCustomerGroupRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(request, requestOptions).body();
    }

    /**
     * Deletes a customer group as identified by the <code>group_id</code> value.
     */
    public DeleteCustomerGroupResponse delete(DeleteGroupsRequest request) {
        return this.rawClient.delete(request).body();
    }

    /**
     * Deletes a customer group as identified by the <code>group_id</code> value.
     */
    public DeleteCustomerGroupResponse delete(DeleteGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.delete(request, requestOptions).body();
    }

    /**
     * Adds a group membership to a customer.
     * <p>The customer is identified by the <code>customer_id</code> value
     * and the customer group is identified by the <code>group_id</code> value.</p>
     */
    public AddGroupToCustomerResponse add(AddGroupsRequest request) {
        return this.rawClient.add(request).body();
    }

    /**
     * Adds a group membership to a customer.
     * <p>The customer is identified by the <code>customer_id</code> value
     * and the customer group is identified by the <code>group_id</code> value.</p>
     */
    public AddGroupToCustomerResponse add(AddGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.add(request, requestOptions).body();
    }

    /**
     * Removes a group membership from a customer.
     * <p>The customer is identified by the <code>customer_id</code> value
     * and the customer group is identified by the <code>group_id</code> value.</p>
     */
    public RemoveGroupFromCustomerResponse remove(RemoveGroupsRequest request) {
        return this.rawClient.remove(request).body();
    }

    /**
     * Removes a group membership from a customer.
     * <p>The customer is identified by the <code>customer_id</code> value
     * and the customer group is identified by the <code>group_id</code> value.</p>
     */
    public RemoveGroupFromCustomerResponse remove(RemoveGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.remove(request, requestOptions).body();
    }
}
