/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.customers.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.CustomerGroup;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateCustomerGroupRequest.Builder.class)
public final class CreateCustomerGroupRequest {
    private final Optional<String> idempotencyKey;

    private final CustomerGroup group;

    private final Map<String, Object> additionalProperties;

    private CreateCustomerGroupRequest(
            Optional<String> idempotencyKey, CustomerGroup group, Map<String, Object> additionalProperties) {
        this.idempotencyKey = idempotencyKey;
        this.group = group;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The idempotency key for the request. For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.
     */
    @JsonProperty("idempotency_key")
    public Optional<String> getIdempotencyKey() {
        return idempotencyKey;
    }

    /**
     * @return The customer group to create.
     */
    @JsonProperty("group")
    public CustomerGroup getGroup() {
        return group;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateCustomerGroupRequest && equalTo((CreateCustomerGroupRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateCustomerGroupRequest other) {
        return idempotencyKey.equals(other.idempotencyKey) && group.equals(other.group);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.idempotencyKey, this.group);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static GroupStage builder() {
        return new Builder();
    }

    public interface GroupStage {
        _FinalStage group(@NotNull CustomerGroup group);

        Builder from(CreateCustomerGroupRequest other);
    }

    public interface _FinalStage {
        CreateCustomerGroupRequest build();

        _FinalStage idempotencyKey(Optional<String> idempotencyKey);

        _FinalStage idempotencyKey(String idempotencyKey);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements GroupStage, _FinalStage {
        private CustomerGroup group;

        private Optional<String> idempotencyKey = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateCustomerGroupRequest other) {
            idempotencyKey(other.getIdempotencyKey());
            group(other.getGroup());
            return this;
        }

        /**
         * <p>The customer group to create.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("group")
        public _FinalStage group(@NotNull CustomerGroup group) {
            this.group = Objects.requireNonNull(group, "group must not be null");
            return this;
        }

        /**
         * <p>The idempotency key for the request. For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage idempotencyKey(String idempotencyKey) {
            this.idempotencyKey = Optional.ofNullable(idempotencyKey);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "idempotency_key", nulls = Nulls.SKIP)
        public _FinalStage idempotencyKey(Optional<String> idempotencyKey) {
            this.idempotencyKey = idempotencyKey;
            return this;
        }

        @java.lang.Override
        public CreateCustomerGroupRequest build() {
            return new CreateCustomerGroupRequest(idempotencyKey, group, additionalProperties);
        }
    }
}
