/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.customers;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.MediaTypes;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.core.QueryStringMapper;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.SquareApiException;
import com.squareup.square.core.SquareException;
import com.squareup.square.core.SyncPagingIterable;
import com.squareup.square.customers.types.BatchUpsertCustomerCustomAttributesRequest;
import com.squareup.square.customers.types.CreateCustomerCustomAttributeDefinitionRequest;
import com.squareup.square.customers.types.DeleteCustomAttributeDefinitionsRequest;
import com.squareup.square.customers.types.GetCustomAttributeDefinitionsRequest;
import com.squareup.square.customers.types.ListCustomAttributeDefinitionsRequest;
import com.squareup.square.customers.types.UpdateCustomerCustomAttributeDefinitionRequest;
import com.squareup.square.types.BatchUpsertCustomerCustomAttributesResponse;
import com.squareup.square.types.CreateCustomerCustomAttributeDefinitionResponse;
import com.squareup.square.types.CustomAttributeDefinition;
import com.squareup.square.types.DeleteCustomerCustomAttributeDefinitionResponse;
import com.squareup.square.types.GetCustomerCustomAttributeDefinitionResponse;
import com.squareup.square.types.ListCustomerCustomAttributeDefinitionsResponse;
import com.squareup.square.types.UpdateCustomerCustomAttributeDefinitionResponse;
import java.io.IOException;
import java.util.Collections;
import java.util.List;
import java.util.Optional;
import okhttp3.Headers;
import okhttp3.HttpUrl;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import okhttp3.ResponseBody;

public class CustomAttributeDefinitionsClient {
    protected final ClientOptions clientOptions;

    public CustomAttributeDefinitionsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
    }

    /**
     * Lists the customer-related <a href="entity:CustomAttributeDefinition">custom attribute definitions</a> that belong to a Square seller account.
     * <p>When all response pages are retrieved, the results include all custom attribute definitions
     * that are visible to the requesting application, including those that are created by other
     * applications and set to <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that
     * seller-defined custom attributes (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public SyncPagingIterable<CustomAttributeDefinition> list() {
        return list(ListCustomAttributeDefinitionsRequest.builder().build());
    }

    /**
     * Lists the customer-related <a href="entity:CustomAttributeDefinition">custom attribute definitions</a> that belong to a Square seller account.
     * <p>When all response pages are retrieved, the results include all custom attribute definitions
     * that are visible to the requesting application, including those that are created by other
     * applications and set to <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that
     * seller-defined custom attributes (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public SyncPagingIterable<CustomAttributeDefinition> list(ListCustomAttributeDefinitionsRequest request) {
        return list(request, null);
    }

    /**
     * Lists the customer-related <a href="entity:CustomAttributeDefinition">custom attribute definitions</a> that belong to a Square seller account.
     * <p>When all response pages are retrieved, the results include all custom attribute definitions
     * that are visible to the requesting application, including those that are created by other
     * applications and set to <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that
     * seller-defined custom attributes (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public SyncPagingIterable<CustomAttributeDefinition> list(
            ListCustomAttributeDefinitionsRequest request, RequestOptions requestOptions) {
        HttpUrl.Builder httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .addPathSegments("v2/customers/custom-attribute-definitions");
        if (request.getLimit().isPresent()) {
            QueryStringMapper.addQueryParameter(
                    httpUrl, "limit", request.getLimit().get().toString(), false);
        }
        if (request.getCursor().isPresent()) {
            QueryStringMapper.addQueryParameter(
                    httpUrl, "cursor", request.getCursor().get(), false);
        }
        Request.Builder _requestBuilder = new Request.Builder()
                .url(httpUrl.build())
                .method("GET", null)
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Content-Type", "application/json")
                .addHeader("Accept", "application/json");
        Request okhttpRequest = _requestBuilder.build();
        OkHttpClient client = clientOptions.httpClient();
        if (requestOptions != null && requestOptions.getTimeout().isPresent()) {
            client = clientOptions.httpClientWithTimeout(requestOptions);
        }
        try (Response response = client.newCall(okhttpRequest).execute()) {
            ResponseBody responseBody = response.body();
            if (response.isSuccessful()) {
                ListCustomerCustomAttributeDefinitionsResponse parsedResponse = ObjectMappers.JSON_MAPPER.readValue(
                        responseBody.string(), ListCustomerCustomAttributeDefinitionsResponse.class);
                Optional<String> startingAfter = parsedResponse.getCursor();
                ListCustomAttributeDefinitionsRequest nextRequest = ListCustomAttributeDefinitionsRequest.builder()
                        .from(request)
                        .cursor(startingAfter)
                        .build();
                List<CustomAttributeDefinition> result =
                        parsedResponse.getCustomAttributeDefinitions().orElse(Collections.emptyList());
                return new SyncPagingIterable<CustomAttributeDefinition>(
                        startingAfter.isPresent(), result, () -> list(nextRequest, requestOptions));
            }
            String responseBodyString = responseBody != null ? responseBody.string() : "{}";
            throw new SquareApiException(
                    "Error with status code " + response.code(),
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(responseBodyString, Object.class));
        } catch (IOException e) {
            throw new SquareException("Network error executing HTTP request", e);
        }
    }

    /**
     * Creates a customer-related <a href="entity:CustomAttributeDefinition">custom attribute definition</a> for a Square seller account.
     * Use this endpoint to define a custom attribute that can be associated with customer profiles.
     * <p>A custom attribute definition specifies the <code>key</code>, <code>visibility</code>, <code>schema</code>, and other properties
     * for a custom attribute. After the definition is created, you can call
     * <a href="api-endpoint:CustomerCustomAttributes-UpsertCustomerCustomAttribute">UpsertCustomerCustomAttribute</a> or
     * <a href="api-endpoint:CustomerCustomAttributes-BulkUpsertCustomerCustomAttributes">BulkUpsertCustomerCustomAttributes</a>
     * to set the custom attribute for customer profiles in the seller's Customer Directory.</p>
     * <p>Sellers can view all custom attributes in exported customer data, including those set to
     * <code>VISIBILITY_HIDDEN</code>.</p>
     */
    public CreateCustomerCustomAttributeDefinitionResponse create(
            CreateCustomerCustomAttributeDefinitionRequest request) {
        return create(request, null);
    }

    /**
     * Creates a customer-related <a href="entity:CustomAttributeDefinition">custom attribute definition</a> for a Square seller account.
     * Use this endpoint to define a custom attribute that can be associated with customer profiles.
     * <p>A custom attribute definition specifies the <code>key</code>, <code>visibility</code>, <code>schema</code>, and other properties
     * for a custom attribute. After the definition is created, you can call
     * <a href="api-endpoint:CustomerCustomAttributes-UpsertCustomerCustomAttribute">UpsertCustomerCustomAttribute</a> or
     * <a href="api-endpoint:CustomerCustomAttributes-BulkUpsertCustomerCustomAttributes">BulkUpsertCustomerCustomAttributes</a>
     * to set the custom attribute for customer profiles in the seller's Customer Directory.</p>
     * <p>Sellers can view all custom attributes in exported customer data, including those set to
     * <code>VISIBILITY_HIDDEN</code>.</p>
     */
    public CreateCustomerCustomAttributeDefinitionResponse create(
            CreateCustomerCustomAttributeDefinitionRequest request, RequestOptions requestOptions) {
        HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .addPathSegments("v2/customers/custom-attribute-definitions")
                .build();
        RequestBody body;
        try {
            body = RequestBody.create(
                    ObjectMappers.JSON_MAPPER.writeValueAsBytes(request), MediaTypes.APPLICATION_JSON);
        } catch (JsonProcessingException e) {
            throw new SquareException("Failed to serialize request", e);
        }
        Request okhttpRequest = new Request.Builder()
                .url(httpUrl)
                .method("POST", body)
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Content-Type", "application/json")
                .addHeader("Accept", "application/json")
                .build();
        OkHttpClient client = clientOptions.httpClient();
        if (requestOptions != null && requestOptions.getTimeout().isPresent()) {
            client = clientOptions.httpClientWithTimeout(requestOptions);
        }
        try (Response response = client.newCall(okhttpRequest).execute()) {
            ResponseBody responseBody = response.body();
            if (response.isSuccessful()) {
                return ObjectMappers.JSON_MAPPER.readValue(
                        responseBody.string(), CreateCustomerCustomAttributeDefinitionResponse.class);
            }
            String responseBodyString = responseBody != null ? responseBody.string() : "{}";
            throw new SquareApiException(
                    "Error with status code " + response.code(),
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(responseBodyString, Object.class));
        } catch (IOException e) {
            throw new SquareException("Network error executing HTTP request", e);
        }
    }

    /**
     * Retrieves a customer-related <a href="entity:CustomAttributeDefinition">custom attribute definition</a> from a Square seller account.
     * <p>To retrieve a custom attribute definition created by another application, the <code>visibility</code>
     * setting must be <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public GetCustomerCustomAttributeDefinitionResponse get(GetCustomAttributeDefinitionsRequest request) {
        return get(request, null);
    }

    /**
     * Retrieves a customer-related <a href="entity:CustomAttributeDefinition">custom attribute definition</a> from a Square seller account.
     * <p>To retrieve a custom attribute definition created by another application, the <code>visibility</code>
     * setting must be <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public GetCustomerCustomAttributeDefinitionResponse get(
            GetCustomAttributeDefinitionsRequest request, RequestOptions requestOptions) {
        HttpUrl.Builder httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .addPathSegments("v2/customers/custom-attribute-definitions")
                .addPathSegment(request.getKey());
        if (request.getVersion().isPresent()) {
            QueryStringMapper.addQueryParameter(
                    httpUrl, "version", request.getVersion().get().toString(), false);
        }
        Request.Builder _requestBuilder = new Request.Builder()
                .url(httpUrl.build())
                .method("GET", null)
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Content-Type", "application/json")
                .addHeader("Accept", "application/json");
        Request okhttpRequest = _requestBuilder.build();
        OkHttpClient client = clientOptions.httpClient();
        if (requestOptions != null && requestOptions.getTimeout().isPresent()) {
            client = clientOptions.httpClientWithTimeout(requestOptions);
        }
        try (Response response = client.newCall(okhttpRequest).execute()) {
            ResponseBody responseBody = response.body();
            if (response.isSuccessful()) {
                return ObjectMappers.JSON_MAPPER.readValue(
                        responseBody.string(), GetCustomerCustomAttributeDefinitionResponse.class);
            }
            String responseBodyString = responseBody != null ? responseBody.string() : "{}";
            throw new SquareApiException(
                    "Error with status code " + response.code(),
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(responseBodyString, Object.class));
        } catch (IOException e) {
            throw new SquareException("Network error executing HTTP request", e);
        }
    }

    /**
     * Updates a customer-related <a href="entity:CustomAttributeDefinition">custom attribute definition</a> for a Square seller account.
     * <p>Use this endpoint to update the following fields: <code>name</code>, <code>description</code>, <code>visibility</code>, or the
     * <code>schema</code> for a <code>Selection</code> data type.</p>
     * <p>Only the definition owner can update a custom attribute definition. Note that sellers can view
     * all custom attributes in exported customer data, including those set to <code>VISIBILITY_HIDDEN</code>.</p>
     */
    public UpdateCustomerCustomAttributeDefinitionResponse update(
            UpdateCustomerCustomAttributeDefinitionRequest request) {
        return update(request, null);
    }

    /**
     * Updates a customer-related <a href="entity:CustomAttributeDefinition">custom attribute definition</a> for a Square seller account.
     * <p>Use this endpoint to update the following fields: <code>name</code>, <code>description</code>, <code>visibility</code>, or the
     * <code>schema</code> for a <code>Selection</code> data type.</p>
     * <p>Only the definition owner can update a custom attribute definition. Note that sellers can view
     * all custom attributes in exported customer data, including those set to <code>VISIBILITY_HIDDEN</code>.</p>
     */
    public UpdateCustomerCustomAttributeDefinitionResponse update(
            UpdateCustomerCustomAttributeDefinitionRequest request, RequestOptions requestOptions) {
        HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .addPathSegments("v2/customers/custom-attribute-definitions")
                .addPathSegment(request.getKey())
                .build();
        RequestBody body;
        try {
            body = RequestBody.create(
                    ObjectMappers.JSON_MAPPER.writeValueAsBytes(request), MediaTypes.APPLICATION_JSON);
        } catch (JsonProcessingException e) {
            throw new SquareException("Failed to serialize request", e);
        }
        Request okhttpRequest = new Request.Builder()
                .url(httpUrl)
                .method("PUT", body)
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Content-Type", "application/json")
                .addHeader("Accept", "application/json")
                .build();
        OkHttpClient client = clientOptions.httpClient();
        if (requestOptions != null && requestOptions.getTimeout().isPresent()) {
            client = clientOptions.httpClientWithTimeout(requestOptions);
        }
        try (Response response = client.newCall(okhttpRequest).execute()) {
            ResponseBody responseBody = response.body();
            if (response.isSuccessful()) {
                return ObjectMappers.JSON_MAPPER.readValue(
                        responseBody.string(), UpdateCustomerCustomAttributeDefinitionResponse.class);
            }
            String responseBodyString = responseBody != null ? responseBody.string() : "{}";
            throw new SquareApiException(
                    "Error with status code " + response.code(),
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(responseBodyString, Object.class));
        } catch (IOException e) {
            throw new SquareException("Network error executing HTTP request", e);
        }
    }

    /**
     * Deletes a customer-related <a href="entity:CustomAttributeDefinition">custom attribute definition</a> from a Square seller account.
     * <p>Deleting a custom attribute definition also deletes the corresponding custom attribute from
     * all customer profiles in the seller's Customer Directory.</p>
     * <p>Only the definition owner can delete a custom attribute definition.</p>
     */
    public DeleteCustomerCustomAttributeDefinitionResponse delete(DeleteCustomAttributeDefinitionsRequest request) {
        return delete(request, null);
    }

    /**
     * Deletes a customer-related <a href="entity:CustomAttributeDefinition">custom attribute definition</a> from a Square seller account.
     * <p>Deleting a custom attribute definition also deletes the corresponding custom attribute from
     * all customer profiles in the seller's Customer Directory.</p>
     * <p>Only the definition owner can delete a custom attribute definition.</p>
     */
    public DeleteCustomerCustomAttributeDefinitionResponse delete(
            DeleteCustomAttributeDefinitionsRequest request, RequestOptions requestOptions) {
        HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .addPathSegments("v2/customers/custom-attribute-definitions")
                .addPathSegment(request.getKey())
                .build();
        Request.Builder _requestBuilder = new Request.Builder()
                .url(httpUrl)
                .method("DELETE", null)
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Content-Type", "application/json")
                .addHeader("Accept", "application/json");
        Request okhttpRequest = _requestBuilder.build();
        OkHttpClient client = clientOptions.httpClient();
        if (requestOptions != null && requestOptions.getTimeout().isPresent()) {
            client = clientOptions.httpClientWithTimeout(requestOptions);
        }
        try (Response response = client.newCall(okhttpRequest).execute()) {
            ResponseBody responseBody = response.body();
            if (response.isSuccessful()) {
                return ObjectMappers.JSON_MAPPER.readValue(
                        responseBody.string(), DeleteCustomerCustomAttributeDefinitionResponse.class);
            }
            String responseBodyString = responseBody != null ? responseBody.string() : "{}";
            throw new SquareApiException(
                    "Error with status code " + response.code(),
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(responseBodyString, Object.class));
        } catch (IOException e) {
            throw new SquareException("Network error executing HTTP request", e);
        }
    }

    /**
     * Creates or updates <a href="entity:CustomAttribute">custom attributes</a> for customer profiles as a bulk operation.
     * <p>Use this endpoint to set the value of one or more custom attributes for one or more customer profiles.
     * A custom attribute is based on a custom attribute definition in a Square seller account, which is
     * created using the <a href="api-endpoint:CustomerCustomAttributes-CreateCustomerCustomAttributeDefinition">CreateCustomerCustomAttributeDefinition</a> endpoint.</p>
     * <p>This <code>BulkUpsertCustomerCustomAttributes</code> endpoint accepts a map of 1 to 25 individual upsert
     * requests and returns a map of individual upsert responses. Each upsert request has a unique ID
     * and provides a customer ID and custom attribute. Each upsert response is returned with the ID
     * of the corresponding request.</p>
     * <p>To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public BatchUpsertCustomerCustomAttributesResponse batchUpsert(BatchUpsertCustomerCustomAttributesRequest request) {
        return batchUpsert(request, null);
    }

    /**
     * Creates or updates <a href="entity:CustomAttribute">custom attributes</a> for customer profiles as a bulk operation.
     * <p>Use this endpoint to set the value of one or more custom attributes for one or more customer profiles.
     * A custom attribute is based on a custom attribute definition in a Square seller account, which is
     * created using the <a href="api-endpoint:CustomerCustomAttributes-CreateCustomerCustomAttributeDefinition">CreateCustomerCustomAttributeDefinition</a> endpoint.</p>
     * <p>This <code>BulkUpsertCustomerCustomAttributes</code> endpoint accepts a map of 1 to 25 individual upsert
     * requests and returns a map of individual upsert responses. Each upsert request has a unique ID
     * and provides a customer ID and custom attribute. Each upsert response is returned with the ID
     * of the corresponding request.</p>
     * <p>To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public BatchUpsertCustomerCustomAttributesResponse batchUpsert(
            BatchUpsertCustomerCustomAttributesRequest request, RequestOptions requestOptions) {
        HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .addPathSegments("v2/customers/custom-attributes/bulk-upsert")
                .build();
        RequestBody body;
        try {
            body = RequestBody.create(
                    ObjectMappers.JSON_MAPPER.writeValueAsBytes(request), MediaTypes.APPLICATION_JSON);
        } catch (JsonProcessingException e) {
            throw new SquareException("Failed to serialize request", e);
        }
        Request okhttpRequest = new Request.Builder()
                .url(httpUrl)
                .method("POST", body)
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Content-Type", "application/json")
                .addHeader("Accept", "application/json")
                .build();
        OkHttpClient client = clientOptions.httpClient();
        if (requestOptions != null && requestOptions.getTimeout().isPresent()) {
            client = clientOptions.httpClientWithTimeout(requestOptions);
        }
        try (Response response = client.newCall(okhttpRequest).execute()) {
            ResponseBody responseBody = response.body();
            if (response.isSuccessful()) {
                return ObjectMappers.JSON_MAPPER.readValue(
                        responseBody.string(), BatchUpsertCustomerCustomAttributesResponse.class);
            }
            String responseBodyString = responseBody != null ? responseBody.string() : "{}";
            throw new SquareApiException(
                    "Error with status code " + response.code(),
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(responseBodyString, Object.class));
        } catch (IOException e) {
            throw new SquareException("Network error executing HTTP request", e);
        }
    }
}
