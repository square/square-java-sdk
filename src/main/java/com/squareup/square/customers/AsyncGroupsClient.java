/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.customers;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.SyncPagingIterable;
import com.squareup.square.customers.types.AddGroupsRequest;
import com.squareup.square.customers.types.CreateCustomerGroupRequest;
import com.squareup.square.customers.types.DeleteGroupsRequest;
import com.squareup.square.customers.types.GetGroupsRequest;
import com.squareup.square.customers.types.ListGroupsRequest;
import com.squareup.square.customers.types.RemoveGroupsRequest;
import com.squareup.square.customers.types.UpdateCustomerGroupRequest;
import com.squareup.square.types.AddGroupToCustomerResponse;
import com.squareup.square.types.CreateCustomerGroupResponse;
import com.squareup.square.types.CustomerGroup;
import com.squareup.square.types.DeleteCustomerGroupResponse;
import com.squareup.square.types.GetCustomerGroupResponse;
import com.squareup.square.types.RemoveGroupFromCustomerResponse;
import com.squareup.square.types.UpdateCustomerGroupResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncGroupsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawGroupsClient rawClient;

    public AsyncGroupsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawGroupsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawGroupsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Retrieves the list of customer groups of a business.
     */
    public CompletableFuture<SyncPagingIterable<CustomerGroup>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Retrieves the list of customer groups of a business.
     */
    public CompletableFuture<SyncPagingIterable<CustomerGroup>> list(ListGroupsRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Retrieves the list of customer groups of a business.
     */
    public CompletableFuture<SyncPagingIterable<CustomerGroup>> list(
            ListGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates a new customer group for a business.
     * <p>The request must include the <code>name</code> value of the group.</p>
     */
    public CompletableFuture<CreateCustomerGroupResponse> create(CreateCustomerGroupRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Creates a new customer group for a business.
     * <p>The request must include the <code>name</code> value of the group.</p>
     */
    public CompletableFuture<CreateCustomerGroupResponse> create(
            CreateCustomerGroupRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a specific customer group as identified by the <code>group_id</code> value.
     */
    public CompletableFuture<GetCustomerGroupResponse> get(GetGroupsRequest request) {
        return this.rawClient.get(request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a specific customer group as identified by the <code>group_id</code> value.
     */
    public CompletableFuture<GetCustomerGroupResponse> get(GetGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates a customer group as identified by the <code>group_id</code> value.
     */
    public CompletableFuture<UpdateCustomerGroupResponse> update(UpdateCustomerGroupRequest request) {
        return this.rawClient.update(request).thenApply(response -> response.body());
    }

    /**
     * Updates a customer group as identified by the <code>group_id</code> value.
     */
    public CompletableFuture<UpdateCustomerGroupResponse> update(
            UpdateCustomerGroupRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Deletes a customer group as identified by the <code>group_id</code> value.
     */
    public CompletableFuture<DeleteCustomerGroupResponse> delete(DeleteGroupsRequest request) {
        return this.rawClient.delete(request).thenApply(response -> response.body());
    }

    /**
     * Deletes a customer group as identified by the <code>group_id</code> value.
     */
    public CompletableFuture<DeleteCustomerGroupResponse> delete(
            DeleteGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.delete(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Adds a group membership to a customer.
     * <p>The customer is identified by the <code>customer_id</code> value
     * and the customer group is identified by the <code>group_id</code> value.</p>
     */
    public CompletableFuture<AddGroupToCustomerResponse> add(AddGroupsRequest request) {
        return this.rawClient.add(request).thenApply(response -> response.body());
    }

    /**
     * Adds a group membership to a customer.
     * <p>The customer is identified by the <code>customer_id</code> value
     * and the customer group is identified by the <code>group_id</code> value.</p>
     */
    public CompletableFuture<AddGroupToCustomerResponse> add(AddGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.add(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Removes a group membership from a customer.
     * <p>The customer is identified by the <code>customer_id</code> value
     * and the customer group is identified by the <code>group_id</code> value.</p>
     */
    public CompletableFuture<RemoveGroupFromCustomerResponse> remove(RemoveGroupsRequest request) {
        return this.rawClient.remove(request).thenApply(response -> response.body());
    }

    /**
     * Removes a group membership from a customer.
     * <p>The customer is identified by the <code>customer_id</code> value
     * and the customer group is identified by the <code>group_id</code> value.</p>
     */
    public CompletableFuture<RemoveGroupFromCustomerResponse> remove(
            RemoveGroupsRequest request, RequestOptions requestOptions) {
        return this.rawClient.remove(request, requestOptions).thenApply(response -> response.body());
    }
}
