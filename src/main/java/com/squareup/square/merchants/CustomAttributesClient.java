/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.merchants;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.SyncPagingIterable;
import com.squareup.square.merchants.types.BulkDeleteMerchantCustomAttributesRequest;
import com.squareup.square.merchants.types.BulkUpsertMerchantCustomAttributesRequest;
import com.squareup.square.merchants.types.DeleteCustomAttributesRequest;
import com.squareup.square.merchants.types.GetCustomAttributesRequest;
import com.squareup.square.merchants.types.ListCustomAttributesRequest;
import com.squareup.square.merchants.types.UpsertMerchantCustomAttributeRequest;
import com.squareup.square.types.BulkDeleteMerchantCustomAttributesResponse;
import com.squareup.square.types.BulkUpsertMerchantCustomAttributesResponse;
import com.squareup.square.types.CustomAttribute;
import com.squareup.square.types.DeleteMerchantCustomAttributeResponse;
import com.squareup.square.types.RetrieveMerchantCustomAttributeResponse;
import com.squareup.square.types.UpsertMerchantCustomAttributeResponse;

public class CustomAttributesClient {
    protected final ClientOptions clientOptions;

    private final RawCustomAttributesClient rawClient;

    public CustomAttributesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawCustomAttributesClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawCustomAttributesClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Deletes <a href="entity:CustomAttribute">custom attributes</a> for a merchant as a bulk operation.
     * To delete a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public BulkDeleteMerchantCustomAttributesResponse batchDelete(BulkDeleteMerchantCustomAttributesRequest request) {
        return this.rawClient.batchDelete(request).body();
    }

    /**
     * Deletes <a href="entity:CustomAttribute">custom attributes</a> for a merchant as a bulk operation.
     * To delete a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public BulkDeleteMerchantCustomAttributesResponse batchDelete(
            BulkDeleteMerchantCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.batchDelete(request, requestOptions).body();
    }

    /**
     * Creates or updates <a href="entity:CustomAttribute">custom attributes</a> for a merchant as a bulk operation.
     * Use this endpoint to set the value of one or more custom attributes for a merchant.
     * A custom attribute is based on a custom attribute definition in a Square seller account, which is
     * created using the <a href="api-endpoint:MerchantCustomAttributes-CreateMerchantCustomAttributeDefinition">CreateMerchantCustomAttributeDefinition</a> endpoint.
     * This <code>BulkUpsertMerchantCustomAttributes</code> endpoint accepts a map of 1 to 25 individual upsert
     * requests and returns a map of individual upsert responses. Each upsert request has a unique ID
     * and provides a merchant ID and custom attribute. Each upsert response is returned with the ID
     * of the corresponding request.
     * To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public BulkUpsertMerchantCustomAttributesResponse batchUpsert(BulkUpsertMerchantCustomAttributesRequest request) {
        return this.rawClient.batchUpsert(request).body();
    }

    /**
     * Creates or updates <a href="entity:CustomAttribute">custom attributes</a> for a merchant as a bulk operation.
     * Use this endpoint to set the value of one or more custom attributes for a merchant.
     * A custom attribute is based on a custom attribute definition in a Square seller account, which is
     * created using the <a href="api-endpoint:MerchantCustomAttributes-CreateMerchantCustomAttributeDefinition">CreateMerchantCustomAttributeDefinition</a> endpoint.
     * This <code>BulkUpsertMerchantCustomAttributes</code> endpoint accepts a map of 1 to 25 individual upsert
     * requests and returns a map of individual upsert responses. Each upsert request has a unique ID
     * and provides a merchant ID and custom attribute. Each upsert response is returned with the ID
     * of the corresponding request.
     * To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public BulkUpsertMerchantCustomAttributesResponse batchUpsert(
            BulkUpsertMerchantCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.batchUpsert(request, requestOptions).body();
    }

    /**
     * Lists the <a href="entity:CustomAttribute">custom attributes</a> associated with a merchant.
     * You can use the <code>with_definitions</code> query parameter to also retrieve custom attribute definitions
     * in the same call.
     * When all response pages are retrieved, the results include all custom attributes that are
     * visible to the requesting application, including those that are owned by other applications
     * and set to <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public SyncPagingIterable<CustomAttribute> list(ListCustomAttributesRequest request) {
        return this.rawClient.list(request).body();
    }

    /**
     * Lists the <a href="entity:CustomAttribute">custom attributes</a> associated with a merchant.
     * You can use the <code>with_definitions</code> query parameter to also retrieve custom attribute definitions
     * in the same call.
     * When all response pages are retrieved, the results include all custom attributes that are
     * visible to the requesting application, including those that are owned by other applications
     * and set to <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public SyncPagingIterable<CustomAttribute> list(
            ListCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).body();
    }

    /**
     * Retrieves a <a href="entity:CustomAttribute">custom attribute</a> associated with a merchant.
     * You can use the <code>with_definition</code> query parameter to also retrieve the custom attribute definition
     * in the same call.
     * To retrieve a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public RetrieveMerchantCustomAttributeResponse get(GetCustomAttributesRequest request) {
        return this.rawClient.get(request).body();
    }

    /**
     * Retrieves a <a href="entity:CustomAttribute">custom attribute</a> associated with a merchant.
     * You can use the <code>with_definition</code> query parameter to also retrieve the custom attribute definition
     * in the same call.
     * To retrieve a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public RetrieveMerchantCustomAttributeResponse get(
            GetCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).body();
    }

    /**
     * Creates or updates a <a href="entity:CustomAttribute">custom attribute</a> for a merchant.
     * Use this endpoint to set the value of a custom attribute for a specified merchant.
     * A custom attribute is based on a custom attribute definition in a Square seller account, which
     * is created using the <a href="api-endpoint:MerchantCustomAttributes-CreateMerchantCustomAttributeDefinition">CreateMerchantCustomAttributeDefinition</a> endpoint.
     * To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public UpsertMerchantCustomAttributeResponse upsert(UpsertMerchantCustomAttributeRequest request) {
        return this.rawClient.upsert(request).body();
    }

    /**
     * Creates or updates a <a href="entity:CustomAttribute">custom attribute</a> for a merchant.
     * Use this endpoint to set the value of a custom attribute for a specified merchant.
     * A custom attribute is based on a custom attribute definition in a Square seller account, which
     * is created using the <a href="api-endpoint:MerchantCustomAttributes-CreateMerchantCustomAttributeDefinition">CreateMerchantCustomAttributeDefinition</a> endpoint.
     * To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public UpsertMerchantCustomAttributeResponse upsert(
            UpsertMerchantCustomAttributeRequest request, RequestOptions requestOptions) {
        return this.rawClient.upsert(request, requestOptions).body();
    }

    /**
     * Deletes a <a href="entity:CustomAttribute">custom attribute</a> associated with a merchant.
     * To delete a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public DeleteMerchantCustomAttributeResponse delete(DeleteCustomAttributesRequest request) {
        return this.rawClient.delete(request).body();
    }

    /**
     * Deletes a <a href="entity:CustomAttribute">custom attribute</a> associated with a merchant.
     * To delete a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_WRITE_VALUES</code>.
     */
    public DeleteMerchantCustomAttributeResponse delete(
            DeleteCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.delete(request, requestOptions).body();
    }
}
