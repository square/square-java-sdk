/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.loyalty.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = DeleteRewardsRequest.Builder.class)
public final class DeleteRewardsRequest {
    private final String rewardId;

    private final Map<String, Object> additionalProperties;

    private DeleteRewardsRequest(String rewardId, Map<String, Object> additionalProperties) {
        this.rewardId = rewardId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the <a href="entity:LoyaltyReward">loyalty reward</a> to delete.
     */
    @JsonProperty("reward_id")
    public String getRewardId() {
        return rewardId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof DeleteRewardsRequest && equalTo((DeleteRewardsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(DeleteRewardsRequest other) {
        return rewardId.equals(other.rewardId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.rewardId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static RewardIdStage builder() {
        return new Builder();
    }

    public interface RewardIdStage {
        /**
         * <p>The ID of the <a href="entity:LoyaltyReward">loyalty reward</a> to delete.</p>
         */
        _FinalStage rewardId(@NotNull String rewardId);

        Builder from(DeleteRewardsRequest other);
    }

    public interface _FinalStage {
        DeleteRewardsRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements RewardIdStage, _FinalStage {
        private String rewardId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(DeleteRewardsRequest other) {
            rewardId(other.getRewardId());
            return this;
        }

        /**
         * <p>The ID of the <a href="entity:LoyaltyReward">loyalty reward</a> to delete.</p>
         * <p>The ID of the <a href="entity:LoyaltyReward">loyalty reward</a> to delete.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("reward_id")
        public _FinalStage rewardId(@NotNull String rewardId) {
            this.rewardId = Objects.requireNonNull(rewardId, "rewardId must not be null");
            return this;
        }

        @java.lang.Override
        public DeleteRewardsRequest build() {
            return new DeleteRewardsRequest(rewardId, additionalProperties);
        }
    }
}
