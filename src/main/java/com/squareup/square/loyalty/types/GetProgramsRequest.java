/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.loyalty.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetProgramsRequest.Builder.class)
public final class GetProgramsRequest {
    private final String programId;

    private final Map<String, Object> additionalProperties;

    private GetProgramsRequest(String programId, Map<String, Object> additionalProperties) {
        this.programId = programId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the loyalty program or the keyword <code>main</code>. Either value can be used to retrieve the single loyalty program that belongs to the seller.
     */
    @JsonProperty("program_id")
    public String getProgramId() {
        return programId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetProgramsRequest && equalTo((GetProgramsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetProgramsRequest other) {
        return programId.equals(other.programId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.programId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ProgramIdStage builder() {
        return new Builder();
    }

    public interface ProgramIdStage {
        _FinalStage programId(@NotNull String programId);

        Builder from(GetProgramsRequest other);
    }

    public interface _FinalStage {
        GetProgramsRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ProgramIdStage, _FinalStage {
        private String programId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetProgramsRequest other) {
            programId(other.getProgramId());
            return this;
        }

        /**
         * <p>The ID of the loyalty program or the keyword <code>main</code>. Either value can be used to retrieve the single loyalty program that belongs to the seller.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("program_id")
        public _FinalStage programId(@NotNull String programId) {
            this.programId = Objects.requireNonNull(programId, "programId must not be null");
            return this;
        }

        @java.lang.Override
        public GetProgramsRequest build() {
            return new GetProgramsRequest(programId, additionalProperties);
        }
    }
}
