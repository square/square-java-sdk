/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.loyalty.programs.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.LoyaltyPromotion;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateLoyaltyPromotionRequest.Builder.class)
public final class CreateLoyaltyPromotionRequest {
    private final String programId;

    private final LoyaltyPromotion loyaltyPromotion;

    private final String idempotencyKey;

    private final Map<String, Object> additionalProperties;

    private CreateLoyaltyPromotionRequest(
            String programId,
            LoyaltyPromotion loyaltyPromotion,
            String idempotencyKey,
            Map<String, Object> additionalProperties) {
        this.programId = programId;
        this.loyaltyPromotion = loyaltyPromotion;
        this.idempotencyKey = idempotencyKey;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the <a href="entity:LoyaltyProgram">loyalty program</a> to associate with the promotion.
     * To get the program ID, call <a href="api-endpoint:Loyalty-RetrieveLoyaltyProgram">RetrieveLoyaltyProgram</a>
     * using the <code>main</code> keyword.
     */
    @JsonProperty("program_id")
    public String getProgramId() {
        return programId;
    }

    /**
     * @return The loyalty promotion to create.
     */
    @JsonProperty("loyalty_promotion")
    public LoyaltyPromotion getLoyaltyPromotion() {
        return loyaltyPromotion;
    }

    /**
     * @return A unique identifier for this request, which is used to ensure idempotency. For more information,
     * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.
     */
    @JsonProperty("idempotency_key")
    public String getIdempotencyKey() {
        return idempotencyKey;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateLoyaltyPromotionRequest && equalTo((CreateLoyaltyPromotionRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateLoyaltyPromotionRequest other) {
        return programId.equals(other.programId)
                && loyaltyPromotion.equals(other.loyaltyPromotion)
                && idempotencyKey.equals(other.idempotencyKey);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.programId, this.loyaltyPromotion, this.idempotencyKey);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ProgramIdStage builder() {
        return new Builder();
    }

    public interface ProgramIdStage {
        /**
         * <p>The ID of the <a href="entity:LoyaltyProgram">loyalty program</a> to associate with the promotion.
         * To get the program ID, call <a href="api-endpoint:Loyalty-RetrieveLoyaltyProgram">RetrieveLoyaltyProgram</a>
         * using the <code>main</code> keyword.</p>
         */
        LoyaltyPromotionStage programId(@NotNull String programId);

        Builder from(CreateLoyaltyPromotionRequest other);
    }

    public interface LoyaltyPromotionStage {
        /**
         * <p>The loyalty promotion to create.</p>
         */
        IdempotencyKeyStage loyaltyPromotion(@NotNull LoyaltyPromotion loyaltyPromotion);
    }

    public interface IdempotencyKeyStage {
        /**
         * <p>A unique identifier for this request, which is used to ensure idempotency. For more information,
         * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         */
        _FinalStage idempotencyKey(@NotNull String idempotencyKey);
    }

    public interface _FinalStage {
        CreateLoyaltyPromotionRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ProgramIdStage, LoyaltyPromotionStage, IdempotencyKeyStage, _FinalStage {
        private String programId;

        private LoyaltyPromotion loyaltyPromotion;

        private String idempotencyKey;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateLoyaltyPromotionRequest other) {
            programId(other.getProgramId());
            loyaltyPromotion(other.getLoyaltyPromotion());
            idempotencyKey(other.getIdempotencyKey());
            return this;
        }

        /**
         * <p>The ID of the <a href="entity:LoyaltyProgram">loyalty program</a> to associate with the promotion.
         * To get the program ID, call <a href="api-endpoint:Loyalty-RetrieveLoyaltyProgram">RetrieveLoyaltyProgram</a>
         * using the <code>main</code> keyword.</p>
         * <p>The ID of the <a href="entity:LoyaltyProgram">loyalty program</a> to associate with the promotion.
         * To get the program ID, call <a href="api-endpoint:Loyalty-RetrieveLoyaltyProgram">RetrieveLoyaltyProgram</a>
         * using the <code>main</code> keyword.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("program_id")
        public LoyaltyPromotionStage programId(@NotNull String programId) {
            this.programId = Objects.requireNonNull(programId, "programId must not be null");
            return this;
        }

        /**
         * <p>The loyalty promotion to create.</p>
         * <p>The loyalty promotion to create.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("loyalty_promotion")
        public IdempotencyKeyStage loyaltyPromotion(@NotNull LoyaltyPromotion loyaltyPromotion) {
            this.loyaltyPromotion = Objects.requireNonNull(loyaltyPromotion, "loyaltyPromotion must not be null");
            return this;
        }

        /**
         * <p>A unique identifier for this request, which is used to ensure idempotency. For more information,
         * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         * <p>A unique identifier for this request, which is used to ensure idempotency. For more information,
         * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("idempotency_key")
        public _FinalStage idempotencyKey(@NotNull String idempotencyKey) {
            this.idempotencyKey = Objects.requireNonNull(idempotencyKey, "idempotencyKey must not be null");
            return this;
        }

        @java.lang.Override
        public CreateLoyaltyPromotionRequest build() {
            return new CreateLoyaltyPromotionRequest(programId, loyaltyPromotion, idempotencyKey, additionalProperties);
        }
    }
}
