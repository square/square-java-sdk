/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.loyalty.programs.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetPromotionsRequest.Builder.class)
public final class GetPromotionsRequest {
    private final String promotionId;

    private final String programId;

    private final Map<String, Object> additionalProperties;

    private GetPromotionsRequest(String promotionId, String programId, Map<String, Object> additionalProperties) {
        this.promotionId = promotionId;
        this.programId = programId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the <a href="entity:LoyaltyPromotion">loyalty promotion</a> to retrieve.
     */
    @JsonProperty("promotion_id")
    public String getPromotionId() {
        return promotionId;
    }

    /**
     * @return The ID of the base <a href="entity:LoyaltyProgram">loyalty program</a>. To get the program ID,
     * call <a href="api-endpoint:Loyalty-RetrieveLoyaltyProgram">RetrieveLoyaltyProgram</a> using the <code>main</code> keyword.
     */
    @JsonProperty("program_id")
    public String getProgramId() {
        return programId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetPromotionsRequest && equalTo((GetPromotionsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetPromotionsRequest other) {
        return promotionId.equals(other.promotionId) && programId.equals(other.programId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.promotionId, this.programId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PromotionIdStage builder() {
        return new Builder();
    }

    public interface PromotionIdStage {
        ProgramIdStage promotionId(@NotNull String promotionId);

        Builder from(GetPromotionsRequest other);
    }

    public interface ProgramIdStage {
        _FinalStage programId(@NotNull String programId);
    }

    public interface _FinalStage {
        GetPromotionsRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PromotionIdStage, ProgramIdStage, _FinalStage {
        private String promotionId;

        private String programId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetPromotionsRequest other) {
            promotionId(other.getPromotionId());
            programId(other.getProgramId());
            return this;
        }

        /**
         * <p>The ID of the <a href="entity:LoyaltyPromotion">loyalty promotion</a> to retrieve.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("promotion_id")
        public ProgramIdStage promotionId(@NotNull String promotionId) {
            this.promotionId = Objects.requireNonNull(promotionId, "promotionId must not be null");
            return this;
        }

        /**
         * <p>The ID of the base <a href="entity:LoyaltyProgram">loyalty program</a>. To get the program ID,
         * call <a href="api-endpoint:Loyalty-RetrieveLoyaltyProgram">RetrieveLoyaltyProgram</a> using the <code>main</code> keyword.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("program_id")
        public _FinalStage programId(@NotNull String programId) {
            this.programId = Objects.requireNonNull(programId, "programId must not be null");
            return this;
        }

        @java.lang.Override
        public GetPromotionsRequest build() {
            return new GetPromotionsRequest(promotionId, programId, additionalProperties);
        }
    }
}
