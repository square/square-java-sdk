/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.webhooks.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.WebhookSubscription;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateWebhookSubscriptionRequest.Builder.class)
public final class UpdateWebhookSubscriptionRequest {
    private final String subscriptionId;

    private final Optional<WebhookSubscription> subscription;

    private final Map<String, Object> additionalProperties;

    private UpdateWebhookSubscriptionRequest(
            String subscriptionId,
            Optional<WebhookSubscription> subscription,
            Map<String, Object> additionalProperties) {
        this.subscriptionId = subscriptionId;
        this.subscription = subscription;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return [REQUIRED] The ID of the <a href="entity:WebhookSubscription">Subscription</a> to update.
     */
    @JsonProperty("subscription_id")
    public String getSubscriptionId() {
        return subscriptionId;
    }

    /**
     * @return The <a href="entity:WebhookSubscription">Subscription</a> to update.
     */
    @JsonProperty("subscription")
    public Optional<WebhookSubscription> getSubscription() {
        return subscription;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateWebhookSubscriptionRequest && equalTo((UpdateWebhookSubscriptionRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateWebhookSubscriptionRequest other) {
        return subscriptionId.equals(other.subscriptionId) && subscription.equals(other.subscription);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.subscriptionId, this.subscription);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SubscriptionIdStage builder() {
        return new Builder();
    }

    public interface SubscriptionIdStage {
        /**
         * <p>[REQUIRED] The ID of the <a href="entity:WebhookSubscription">Subscription</a> to update.</p>
         */
        _FinalStage subscriptionId(@NotNull String subscriptionId);

        Builder from(UpdateWebhookSubscriptionRequest other);
    }

    public interface _FinalStage {
        UpdateWebhookSubscriptionRequest build();

        /**
         * <p>The <a href="entity:WebhookSubscription">Subscription</a> to update.</p>
         */
        _FinalStage subscription(Optional<WebhookSubscription> subscription);

        _FinalStage subscription(WebhookSubscription subscription);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SubscriptionIdStage, _FinalStage {
        private String subscriptionId;

        private Optional<WebhookSubscription> subscription = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UpdateWebhookSubscriptionRequest other) {
            subscriptionId(other.getSubscriptionId());
            subscription(other.getSubscription());
            return this;
        }

        /**
         * <p>[REQUIRED] The ID of the <a href="entity:WebhookSubscription">Subscription</a> to update.</p>
         * <p>[REQUIRED] The ID of the <a href="entity:WebhookSubscription">Subscription</a> to update.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("subscription_id")
        public _FinalStage subscriptionId(@NotNull String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId, "subscriptionId must not be null");
            return this;
        }

        /**
         * <p>The <a href="entity:WebhookSubscription">Subscription</a> to update.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage subscription(WebhookSubscription subscription) {
            this.subscription = Optional.ofNullable(subscription);
            return this;
        }

        /**
         * <p>The <a href="entity:WebhookSubscription">Subscription</a> to update.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "subscription", nulls = Nulls.SKIP)
        public _FinalStage subscription(Optional<WebhookSubscription> subscription) {
            this.subscription = subscription;
            return this;
        }

        @java.lang.Override
        public UpdateWebhookSubscriptionRequest build() {
            return new UpdateWebhookSubscriptionRequest(subscriptionId, subscription, additionalProperties);
        }
    }
}
