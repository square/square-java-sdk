/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.webhooks.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetSubscriptionsRequest.Builder.class)
public final class GetSubscriptionsRequest {
    private final String subscriptionId;

    private final Map<String, Object> additionalProperties;

    private GetSubscriptionsRequest(String subscriptionId, Map<String, Object> additionalProperties) {
        this.subscriptionId = subscriptionId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return [REQUIRED] The ID of the <a href="entity:WebhookSubscription">Subscription</a> to retrieve.
     */
    @JsonProperty("subscription_id")
    public String getSubscriptionId() {
        return subscriptionId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetSubscriptionsRequest && equalTo((GetSubscriptionsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetSubscriptionsRequest other) {
        return subscriptionId.equals(other.subscriptionId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.subscriptionId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SubscriptionIdStage builder() {
        return new Builder();
    }

    public interface SubscriptionIdStage {
        _FinalStage subscriptionId(@NotNull String subscriptionId);

        Builder from(GetSubscriptionsRequest other);
    }

    public interface _FinalStage {
        GetSubscriptionsRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SubscriptionIdStage, _FinalStage {
        private String subscriptionId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetSubscriptionsRequest other) {
            subscriptionId(other.getSubscriptionId());
            return this;
        }

        /**
         * <p>[REQUIRED] The ID of the <a href="entity:WebhookSubscription">Subscription</a> to retrieve.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("subscription_id")
        public _FinalStage subscriptionId(@NotNull String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId, "subscriptionId must not be null");
            return this;
        }

        @java.lang.Override
        public GetSubscriptionsRequest build() {
            return new GetSubscriptionsRequest(subscriptionId, additionalProperties);
        }
    }
}
