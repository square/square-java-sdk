/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class TeamMemberAssignedLocationsAssignmentType {
    public static final TeamMemberAssignedLocationsAssignmentType ALL_CURRENT_AND_FUTURE_LOCATIONS =
            new TeamMemberAssignedLocationsAssignmentType(
                    Value.ALL_CURRENT_AND_FUTURE_LOCATIONS, "ALL_CURRENT_AND_FUTURE_LOCATIONS");

    public static final TeamMemberAssignedLocationsAssignmentType EXPLICIT_LOCATIONS =
            new TeamMemberAssignedLocationsAssignmentType(Value.EXPLICIT_LOCATIONS, "EXPLICIT_LOCATIONS");

    private final Value value;

    private final String string;

    TeamMemberAssignedLocationsAssignmentType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof TeamMemberAssignedLocationsAssignmentType
                        && this.string.equals(((TeamMemberAssignedLocationsAssignmentType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case ALL_CURRENT_AND_FUTURE_LOCATIONS:
                return visitor.visitAllCurrentAndFutureLocations();
            case EXPLICIT_LOCATIONS:
                return visitor.visitExplicitLocations();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static TeamMemberAssignedLocationsAssignmentType valueOf(String value) {
        switch (value) {
            case "ALL_CURRENT_AND_FUTURE_LOCATIONS":
                return ALL_CURRENT_AND_FUTURE_LOCATIONS;
            case "EXPLICIT_LOCATIONS":
                return EXPLICIT_LOCATIONS;
            default:
                return new TeamMemberAssignedLocationsAssignmentType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ALL_CURRENT_AND_FUTURE_LOCATIONS,

        EXPLICIT_LOCATIONS,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitAllCurrentAndFutureLocations();

        T visitExplicitLocations();

        T visitUnknown(String unknownType);
    }
}
