/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute.Builder.class)
public final class BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute {
    private final Optional<String> key;

    private final String orderId;

    private final Map<String, Object> additionalProperties;

    private BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute(
            Optional<String> key, String orderId, Map<String, Object> additionalProperties) {
        this.key = key;
        this.orderId = orderId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The key of the custom attribute to delete.  This key must match the key
     * of an existing custom attribute definition.
     */
    @JsonProperty("key")
    public Optional<String> getKey() {
        return key;
    }

    /**
     * @return The ID of the target <a href="entity:Order">order</a>.
     */
    @JsonProperty("order_id")
    public String getOrderId() {
        return orderId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute
                && equalTo((BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute other) {
        return key.equals(other.key) && orderId.equals(other.orderId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.key, this.orderId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static OrderIdStage builder() {
        return new Builder();
    }

    public interface OrderIdStage {
        /**
         * <p>The ID of the target <a href="entity:Order">order</a>.</p>
         */
        _FinalStage orderId(@NotNull String orderId);

        Builder from(BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute other);
    }

    public interface _FinalStage {
        BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute build();

        /**
         * <p>The key of the custom attribute to delete.  This key must match the key
         * of an existing custom attribute definition.</p>
         */
        _FinalStage key(Optional<String> key);

        _FinalStage key(String key);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements OrderIdStage, _FinalStage {
        private String orderId;

        private Optional<String> key = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute other) {
            key(other.getKey());
            orderId(other.getOrderId());
            return this;
        }

        /**
         * <p>The ID of the target <a href="entity:Order">order</a>.</p>
         * <p>The ID of the target <a href="entity:Order">order</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("order_id")
        public _FinalStage orderId(@NotNull String orderId) {
            this.orderId = Objects.requireNonNull(orderId, "orderId must not be null");
            return this;
        }

        /**
         * <p>The key of the custom attribute to delete.  This key must match the key
         * of an existing custom attribute definition.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage key(String key) {
            this.key = Optional.ofNullable(key);
            return this;
        }

        /**
         * <p>The key of the custom attribute to delete.  This key must match the key
         * of an existing custom attribute definition.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "key", nulls = Nulls.SKIP)
        public _FinalStage key(Optional<String> key) {
            this.key = key;
            return this;
        }

        @java.lang.Override
        public BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute build() {
            return new BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute(key, orderId, additionalProperties);
        }
    }
}
