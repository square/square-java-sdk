/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SearchLoyaltyEventsResponse.Builder.class)
public final class SearchLoyaltyEventsResponse {
    private final Optional<List<Error>> errors;

    private final Optional<List<LoyaltyEvent>> events;

    private final Optional<String> cursor;

    private final Map<String, Object> additionalProperties;

    private SearchLoyaltyEventsResponse(
            Optional<List<Error>> errors,
            Optional<List<LoyaltyEvent>> events,
            Optional<String> cursor,
            Map<String, Object> additionalProperties) {
        this.errors = errors;
        this.events = events;
        this.cursor = cursor;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Any errors that occurred during the request.
     */
    @JsonProperty("errors")
    public Optional<List<Error>> getErrors() {
        return errors;
    }

    /**
     * @return The loyalty events that satisfy the search criteria.
     */
    @JsonProperty("events")
    public Optional<List<LoyaltyEvent>> getEvents() {
        return events;
    }

    /**
     * @return The pagination cursor to be used in a subsequent
     * request. If empty, this is the final response.
     * For more information,
     * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.
     */
    @JsonProperty("cursor")
    public Optional<String> getCursor() {
        return cursor;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SearchLoyaltyEventsResponse && equalTo((SearchLoyaltyEventsResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SearchLoyaltyEventsResponse other) {
        return errors.equals(other.errors) && events.equals(other.events) && cursor.equals(other.cursor);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.errors, this.events, this.cursor);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<Error>> errors = Optional.empty();

        private Optional<List<LoyaltyEvent>> events = Optional.empty();

        private Optional<String> cursor = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(SearchLoyaltyEventsResponse other) {
            errors(other.getErrors());
            events(other.getEvents());
            cursor(other.getCursor());
            return this;
        }

        @JsonSetter(value = "errors", nulls = Nulls.SKIP)
        public Builder errors(Optional<List<Error>> errors) {
            this.errors = errors;
            return this;
        }

        public Builder errors(List<Error> errors) {
            this.errors = Optional.ofNullable(errors);
            return this;
        }

        @JsonSetter(value = "events", nulls = Nulls.SKIP)
        public Builder events(Optional<List<LoyaltyEvent>> events) {
            this.events = events;
            return this;
        }

        public Builder events(List<LoyaltyEvent> events) {
            this.events = Optional.ofNullable(events);
            return this;
        }

        @JsonSetter(value = "cursor", nulls = Nulls.SKIP)
        public Builder cursor(Optional<String> cursor) {
            this.cursor = cursor;
            return this;
        }

        public Builder cursor(String cursor) {
            this.cursor = Optional.ofNullable(cursor);
            return this;
        }

        public SearchLoyaltyEventsResponse build() {
            return new SearchLoyaltyEventsResponse(errors, events, cursor, additionalProperties);
        }
    }
}
