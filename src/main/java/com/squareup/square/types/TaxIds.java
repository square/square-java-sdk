/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TaxIds.Builder.class)
public final class TaxIds {
    private final Optional<String> euVat;

    private final Optional<String> frSiret;

    private final Optional<String> frNaf;

    private final Optional<String> esNif;

    private final Optional<String> jpQii;

    private final Map<String, Object> additionalProperties;

    private TaxIds(
            Optional<String> euVat,
            Optional<String> frSiret,
            Optional<String> frNaf,
            Optional<String> esNif,
            Optional<String> jpQii,
            Map<String, Object> additionalProperties) {
        this.euVat = euVat;
        this.frSiret = frSiret;
        this.frNaf = frNaf;
        this.esNif = esNif;
        this.jpQii = jpQii;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The EU VAT number for this location. For example, <code>IE3426675K</code>.
     * If the EU VAT number is present, it is well-formed and has been
     * validated with VIES, the VAT Information Exchange System.
     */
    @JsonProperty("eu_vat")
    public Optional<String> getEuVat() {
        return euVat;
    }

    /**
     * @return The SIRET (Système d'Identification du Répertoire des Entreprises et de leurs Etablissements)
     * number is a 14-digit code issued by the French INSEE. For example, <code>39922799000021</code>.
     */
    @JsonProperty("fr_siret")
    public Optional<String> getFrSiret() {
        return frSiret;
    }

    /**
     * @return The French government uses the NAF (Nomenclature des Activités Françaises) to display and
     * track economic statistical data. This is also called the APE (Activite Principale de l’Entreprise) code.
     * For example, <code>6910Z</code>.
     */
    @JsonProperty("fr_naf")
    public Optional<String> getFrNaf() {
        return frNaf;
    }

    /**
     * @return The NIF (Numero de Identificacion Fiscal) number is a nine-character tax identifier used in Spain.
     * If it is present, it has been validated. For example, <code>73628495A</code>.
     */
    @JsonProperty("es_nif")
    public Optional<String> getEsNif() {
        return esNif;
    }

    /**
     * @return The QII (Qualified Invoice Issuer) number is a 14-character tax identifier used in Japan.
     * For example, <code>T1234567890123</code>.
     */
    @JsonProperty("jp_qii")
    public Optional<String> getJpQii() {
        return jpQii;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TaxIds && equalTo((TaxIds) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TaxIds other) {
        return euVat.equals(other.euVat)
                && frSiret.equals(other.frSiret)
                && frNaf.equals(other.frNaf)
                && esNif.equals(other.esNif)
                && jpQii.equals(other.jpQii);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.euVat, this.frSiret, this.frNaf, this.esNif, this.jpQii);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> euVat = Optional.empty();

        private Optional<String> frSiret = Optional.empty();

        private Optional<String> frNaf = Optional.empty();

        private Optional<String> esNif = Optional.empty();

        private Optional<String> jpQii = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(TaxIds other) {
            euVat(other.getEuVat());
            frSiret(other.getFrSiret());
            frNaf(other.getFrNaf());
            esNif(other.getEsNif());
            jpQii(other.getJpQii());
            return this;
        }

        /**
         * <p>The EU VAT number for this location. For example, <code>IE3426675K</code>.
         * If the EU VAT number is present, it is well-formed and has been
         * validated with VIES, the VAT Information Exchange System.</p>
         */
        @JsonSetter(value = "eu_vat", nulls = Nulls.SKIP)
        public Builder euVat(Optional<String> euVat) {
            this.euVat = euVat;
            return this;
        }

        public Builder euVat(String euVat) {
            this.euVat = Optional.ofNullable(euVat);
            return this;
        }

        /**
         * <p>The SIRET (Système d'Identification du Répertoire des Entreprises et de leurs Etablissements)
         * number is a 14-digit code issued by the French INSEE. For example, <code>39922799000021</code>.</p>
         */
        @JsonSetter(value = "fr_siret", nulls = Nulls.SKIP)
        public Builder frSiret(Optional<String> frSiret) {
            this.frSiret = frSiret;
            return this;
        }

        public Builder frSiret(String frSiret) {
            this.frSiret = Optional.ofNullable(frSiret);
            return this;
        }

        /**
         * <p>The French government uses the NAF (Nomenclature des Activités Françaises) to display and
         * track economic statistical data. This is also called the APE (Activite Principale de l’Entreprise) code.
         * For example, <code>6910Z</code>.</p>
         */
        @JsonSetter(value = "fr_naf", nulls = Nulls.SKIP)
        public Builder frNaf(Optional<String> frNaf) {
            this.frNaf = frNaf;
            return this;
        }

        public Builder frNaf(String frNaf) {
            this.frNaf = Optional.ofNullable(frNaf);
            return this;
        }

        /**
         * <p>The NIF (Numero de Identificacion Fiscal) number is a nine-character tax identifier used in Spain.
         * If it is present, it has been validated. For example, <code>73628495A</code>.</p>
         */
        @JsonSetter(value = "es_nif", nulls = Nulls.SKIP)
        public Builder esNif(Optional<String> esNif) {
            this.esNif = esNif;
            return this;
        }

        public Builder esNif(String esNif) {
            this.esNif = Optional.ofNullable(esNif);
            return this;
        }

        /**
         * <p>The QII (Qualified Invoice Issuer) number is a 14-character tax identifier used in Japan.
         * For example, <code>T1234567890123</code>.</p>
         */
        @JsonSetter(value = "jp_qii", nulls = Nulls.SKIP)
        public Builder jpQii(Optional<String> jpQii) {
            this.jpQii = jpQii;
            return this;
        }

        public Builder jpQii(String jpQii) {
            this.jpQii = Optional.ofNullable(jpQii);
            return this;
        }

        public TaxIds build() {
            return new TaxIds(euVat, frSiret, frNaf, esNif, jpQii, additionalProperties);
        }
    }
}
