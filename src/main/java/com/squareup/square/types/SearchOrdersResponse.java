/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SearchOrdersResponse.Builder.class)
public final class SearchOrdersResponse {
    private final Optional<List<OrderEntry>> orderEntries;

    private final Optional<List<Order>> orders;

    private final Optional<String> cursor;

    private final Optional<List<Error>> errors;

    private final Map<String, Object> additionalProperties;

    private SearchOrdersResponse(
            Optional<List<OrderEntry>> orderEntries,
            Optional<List<Order>> orders,
            Optional<String> cursor,
            Optional<List<Error>> errors,
            Map<String, Object> additionalProperties) {
        this.orderEntries = orderEntries;
        this.orders = orders;
        this.cursor = cursor;
        this.errors = errors;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A list of <a href="entity:OrderEntry">OrderEntries</a> that fit the query
     * conditions. The list is populated only if <code>return_entries</code> is set to <code>true</code> in the request.
     */
    @JsonProperty("order_entries")
    public Optional<List<OrderEntry>> getOrderEntries() {
        return orderEntries;
    }

    /**
     * @return A list of
     * <a href="entity:Order">Order</a> objects that match the query conditions. The list is populated only if
     * <code>return_entries</code> is set to <code>false</code> in the request.
     */
    @JsonProperty("orders")
    public Optional<List<Order>> getOrders() {
        return orders;
    }

    /**
     * @return The pagination cursor to be used in a subsequent request. If unset,
     * this is the final response.
     * For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.
     */
    @JsonProperty("cursor")
    public Optional<String> getCursor() {
        return cursor;
    }

    /**
     * @return <a href="entity:Error">Errors</a> encountered during the search.
     */
    @JsonProperty("errors")
    public Optional<List<Error>> getErrors() {
        return errors;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SearchOrdersResponse && equalTo((SearchOrdersResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SearchOrdersResponse other) {
        return orderEntries.equals(other.orderEntries)
                && orders.equals(other.orders)
                && cursor.equals(other.cursor)
                && errors.equals(other.errors);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.orderEntries, this.orders, this.cursor, this.errors);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<OrderEntry>> orderEntries = Optional.empty();

        private Optional<List<Order>> orders = Optional.empty();

        private Optional<String> cursor = Optional.empty();

        private Optional<List<Error>> errors = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(SearchOrdersResponse other) {
            orderEntries(other.getOrderEntries());
            orders(other.getOrders());
            cursor(other.getCursor());
            errors(other.getErrors());
            return this;
        }

        /**
         * <p>A list of <a href="entity:OrderEntry">OrderEntries</a> that fit the query
         * conditions. The list is populated only if <code>return_entries</code> is set to <code>true</code> in the request.</p>
         */
        @JsonSetter(value = "order_entries", nulls = Nulls.SKIP)
        public Builder orderEntries(Optional<List<OrderEntry>> orderEntries) {
            this.orderEntries = orderEntries;
            return this;
        }

        public Builder orderEntries(List<OrderEntry> orderEntries) {
            this.orderEntries = Optional.ofNullable(orderEntries);
            return this;
        }

        /**
         * <p>A list of
         * <a href="entity:Order">Order</a> objects that match the query conditions. The list is populated only if
         * <code>return_entries</code> is set to <code>false</code> in the request.</p>
         */
        @JsonSetter(value = "orders", nulls = Nulls.SKIP)
        public Builder orders(Optional<List<Order>> orders) {
            this.orders = orders;
            return this;
        }

        public Builder orders(List<Order> orders) {
            this.orders = Optional.ofNullable(orders);
            return this;
        }

        /**
         * <p>The pagination cursor to be used in a subsequent request. If unset,
         * this is the final response.
         * For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
         */
        @JsonSetter(value = "cursor", nulls = Nulls.SKIP)
        public Builder cursor(Optional<String> cursor) {
            this.cursor = cursor;
            return this;
        }

        public Builder cursor(String cursor) {
            this.cursor = Optional.ofNullable(cursor);
            return this;
        }

        /**
         * <p><a href="entity:Error">Errors</a> encountered during the search.</p>
         */
        @JsonSetter(value = "errors", nulls = Nulls.SKIP)
        public Builder errors(Optional<List<Error>> errors) {
            this.errors = errors;
            return this;
        }

        public Builder errors(List<Error> errors) {
            this.errors = Optional.ofNullable(errors);
            return this;
        }

        public SearchOrdersResponse build() {
            return new SearchOrdersResponse(orderEntries, orders, cursor, errors, additionalProperties);
        }
    }
}
