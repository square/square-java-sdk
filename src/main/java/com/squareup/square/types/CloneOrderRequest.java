/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CloneOrderRequest.Builder.class)
public final class CloneOrderRequest {
    private final String orderId;

    private final Optional<Integer> version;

    private final Optional<String> idempotencyKey;

    private final Map<String, Object> additionalProperties;

    private CloneOrderRequest(
            String orderId,
            Optional<Integer> version,
            Optional<String> idempotencyKey,
            Map<String, Object> additionalProperties) {
        this.orderId = orderId;
        this.version = version;
        this.idempotencyKey = idempotencyKey;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the order to clone.
     */
    @JsonProperty("order_id")
    public String getOrderId() {
        return orderId;
    }

    /**
     * @return An optional order version for concurrency protection.
     * <p>If a version is provided, it must match the latest stored version of the order to clone.
     * If a version is not provided, the API clones the latest version.</p>
     */
    @JsonProperty("version")
    public Optional<Integer> getVersion() {
        return version;
    }

    /**
     * @return A value you specify that uniquely identifies this clone request.
     * <p>If you are unsure whether a particular order was cloned successfully,
     * you can reattempt the call with the same idempotency key without
     * worrying about creating duplicate cloned orders.
     * The originally cloned order is returned.</p>
     * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
     */
    @JsonIgnore
    public Optional<String> getIdempotencyKey() {
        if (idempotencyKey == null) {
            return Optional.empty();
        }
        return idempotencyKey;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("idempotency_key")
    private Optional<String> _getIdempotencyKey() {
        return idempotencyKey;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CloneOrderRequest && equalTo((CloneOrderRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CloneOrderRequest other) {
        return orderId.equals(other.orderId)
                && version.equals(other.version)
                && idempotencyKey.equals(other.idempotencyKey);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.orderId, this.version, this.idempotencyKey);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static OrderIdStage builder() {
        return new Builder();
    }

    public interface OrderIdStage {
        /**
         * <p>The ID of the order to clone.</p>
         */
        _FinalStage orderId(@NotNull String orderId);

        Builder from(CloneOrderRequest other);
    }

    public interface _FinalStage {
        CloneOrderRequest build();

        /**
         * <p>An optional order version for concurrency protection.</p>
         * <p>If a version is provided, it must match the latest stored version of the order to clone.
         * If a version is not provided, the API clones the latest version.</p>
         */
        _FinalStage version(Optional<Integer> version);

        _FinalStage version(Integer version);

        /**
         * <p>A value you specify that uniquely identifies this clone request.</p>
         * <p>If you are unsure whether a particular order was cloned successfully,
         * you can reattempt the call with the same idempotency key without
         * worrying about creating duplicate cloned orders.
         * The originally cloned order is returned.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         */
        _FinalStage idempotencyKey(Optional<String> idempotencyKey);

        _FinalStage idempotencyKey(String idempotencyKey);

        _FinalStage idempotencyKey(Nullable<String> idempotencyKey);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements OrderIdStage, _FinalStage {
        private String orderId;

        private Optional<String> idempotencyKey = Optional.empty();

        private Optional<Integer> version = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CloneOrderRequest other) {
            orderId(other.getOrderId());
            version(other.getVersion());
            idempotencyKey(other.getIdempotencyKey());
            return this;
        }

        /**
         * <p>The ID of the order to clone.</p>
         * <p>The ID of the order to clone.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("order_id")
        public _FinalStage orderId(@NotNull String orderId) {
            this.orderId = Objects.requireNonNull(orderId, "orderId must not be null");
            return this;
        }

        /**
         * <p>A value you specify that uniquely identifies this clone request.</p>
         * <p>If you are unsure whether a particular order was cloned successfully,
         * you can reattempt the call with the same idempotency key without
         * worrying about creating duplicate cloned orders.
         * The originally cloned order is returned.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage idempotencyKey(Nullable<String> idempotencyKey) {
            if (idempotencyKey.isNull()) {
                this.idempotencyKey = null;
            } else if (idempotencyKey.isEmpty()) {
                this.idempotencyKey = Optional.empty();
            } else {
                this.idempotencyKey = Optional.of(idempotencyKey.get());
            }
            return this;
        }

        /**
         * <p>A value you specify that uniquely identifies this clone request.</p>
         * <p>If you are unsure whether a particular order was cloned successfully,
         * you can reattempt the call with the same idempotency key without
         * worrying about creating duplicate cloned orders.
         * The originally cloned order is returned.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage idempotencyKey(String idempotencyKey) {
            this.idempotencyKey = Optional.ofNullable(idempotencyKey);
            return this;
        }

        /**
         * <p>A value you specify that uniquely identifies this clone request.</p>
         * <p>If you are unsure whether a particular order was cloned successfully,
         * you can reattempt the call with the same idempotency key without
         * worrying about creating duplicate cloned orders.
         * The originally cloned order is returned.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "idempotency_key", nulls = Nulls.SKIP)
        public _FinalStage idempotencyKey(Optional<String> idempotencyKey) {
            this.idempotencyKey = idempotencyKey;
            return this;
        }

        /**
         * <p>An optional order version for concurrency protection.</p>
         * <p>If a version is provided, it must match the latest stored version of the order to clone.
         * If a version is not provided, the API clones the latest version.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage version(Integer version) {
            this.version = Optional.ofNullable(version);
            return this;
        }

        /**
         * <p>An optional order version for concurrency protection.</p>
         * <p>If a version is provided, it must match the latest stored version of the order to clone.
         * If a version is not provided, the API clones the latest version.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "version", nulls = Nulls.SKIP)
        public _FinalStage version(Optional<Integer> version) {
            this.version = version;
            return this;
        }

        @java.lang.Override
        public CloneOrderRequest build() {
            return new CloneOrderRequest(orderId, version, idempotencyKey, additionalProperties);
        }
    }
}
