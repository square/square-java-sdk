/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class TaxCalculationPhase {
    public static final TaxCalculationPhase TAX_TOTAL_PHASE =
            new TaxCalculationPhase(Value.TAX_TOTAL_PHASE, "TAX_TOTAL_PHASE");

    public static final TaxCalculationPhase TAX_SUBTOTAL_PHASE =
            new TaxCalculationPhase(Value.TAX_SUBTOTAL_PHASE, "TAX_SUBTOTAL_PHASE");

    private final Value value;

    private final String string;

    TaxCalculationPhase(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof TaxCalculationPhase && this.string.equals(((TaxCalculationPhase) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case TAX_TOTAL_PHASE:
                return visitor.visitTaxTotalPhase();
            case TAX_SUBTOTAL_PHASE:
                return visitor.visitTaxSubtotalPhase();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static TaxCalculationPhase valueOf(String value) {
        switch (value) {
            case "TAX_TOTAL_PHASE":
                return TAX_TOTAL_PHASE;
            case "TAX_SUBTOTAL_PHASE":
                return TAX_SUBTOTAL_PHASE;
            default:
                return new TaxCalculationPhase(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        TAX_SUBTOTAL_PHASE,

        TAX_TOTAL_PHASE,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitTaxSubtotalPhase();

        T visitTaxTotalPhase();

        T visitUnknown(String unknownType);
    }
}
