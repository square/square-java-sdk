/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class InventoryChangeType {
    public static final InventoryChangeType TRANSFER = new InventoryChangeType(Value.TRANSFER, "TRANSFER");

    public static final InventoryChangeType PHYSICAL_COUNT =
            new InventoryChangeType(Value.PHYSICAL_COUNT, "PHYSICAL_COUNT");

    public static final InventoryChangeType ADJUSTMENT = new InventoryChangeType(Value.ADJUSTMENT, "ADJUSTMENT");

    private final Value value;

    private final String string;

    InventoryChangeType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof InventoryChangeType && this.string.equals(((InventoryChangeType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case TRANSFER:
                return visitor.visitTransfer();
            case PHYSICAL_COUNT:
                return visitor.visitPhysicalCount();
            case ADJUSTMENT:
                return visitor.visitAdjustment();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static InventoryChangeType valueOf(String value) {
        switch (value) {
            case "TRANSFER":
                return TRANSFER;
            case "PHYSICAL_COUNT":
                return PHYSICAL_COUNT;
            case "ADJUSTMENT":
                return ADJUSTMENT;
            default:
                return new InventoryChangeType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        PHYSICAL_COUNT,

        ADJUSTMENT,

        TRANSFER,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitPhysicalCount();

        T visitAdjustment();

        T visitTransfer();

        T visitUnknown(String unknownType);
    }
}
