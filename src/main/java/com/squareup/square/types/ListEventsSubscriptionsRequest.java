/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ListEventsSubscriptionsRequest.Builder.class)
public final class ListEventsSubscriptionsRequest {
    private final String subscriptionId;

    private final Optional<String> cursor;

    private final Optional<Integer> limit;

    private final Map<String, Object> additionalProperties;

    private ListEventsSubscriptionsRequest(
            String subscriptionId,
            Optional<String> cursor,
            Optional<Integer> limit,
            Map<String, Object> additionalProperties) {
        this.subscriptionId = subscriptionId;
        this.cursor = cursor;
        this.limit = limit;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the subscription to retrieve the events for.
     */
    @JsonProperty("subscription_id")
    public String getSubscriptionId() {
        return subscriptionId;
    }

    /**
     * @return When the total number of resulting subscription events exceeds the limit of a paged response,
     * specify the cursor returned from a preceding response here to fetch the next set of results.
     * If the cursor is unset, the response contains the last page of the results.
     * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
     */
    @JsonIgnore
    public Optional<String> getCursor() {
        if (cursor == null) {
            return Optional.empty();
        }
        return cursor;
    }

    /**
     * @return The upper limit on the number of subscription events to return
     * in a paged response.
     */
    @JsonIgnore
    public Optional<Integer> getLimit() {
        if (limit == null) {
            return Optional.empty();
        }
        return limit;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("cursor")
    private Optional<String> _getCursor() {
        return cursor;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("limit")
    private Optional<Integer> _getLimit() {
        return limit;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ListEventsSubscriptionsRequest && equalTo((ListEventsSubscriptionsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ListEventsSubscriptionsRequest other) {
        return subscriptionId.equals(other.subscriptionId) && cursor.equals(other.cursor) && limit.equals(other.limit);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.subscriptionId, this.cursor, this.limit);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SubscriptionIdStage builder() {
        return new Builder();
    }

    public interface SubscriptionIdStage {
        /**
         * <p>The ID of the subscription to retrieve the events for.</p>
         */
        _FinalStage subscriptionId(@NotNull String subscriptionId);

        Builder from(ListEventsSubscriptionsRequest other);
    }

    public interface _FinalStage {
        ListEventsSubscriptionsRequest build();

        /**
         * <p>When the total number of resulting subscription events exceeds the limit of a paged response,
         * specify the cursor returned from a preceding response here to fetch the next set of results.
         * If the cursor is unset, the response contains the last page of the results.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
         */
        _FinalStage cursor(Optional<String> cursor);

        _FinalStage cursor(String cursor);

        _FinalStage cursor(Nullable<String> cursor);

        /**
         * <p>The upper limit on the number of subscription events to return
         * in a paged response.</p>
         */
        _FinalStage limit(Optional<Integer> limit);

        _FinalStage limit(Integer limit);

        _FinalStage limit(Nullable<Integer> limit);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SubscriptionIdStage, _FinalStage {
        private String subscriptionId;

        private Optional<Integer> limit = Optional.empty();

        private Optional<String> cursor = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ListEventsSubscriptionsRequest other) {
            subscriptionId(other.getSubscriptionId());
            cursor(other.getCursor());
            limit(other.getLimit());
            return this;
        }

        /**
         * <p>The ID of the subscription to retrieve the events for.</p>
         * <p>The ID of the subscription to retrieve the events for.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("subscription_id")
        public _FinalStage subscriptionId(@NotNull String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId, "subscriptionId must not be null");
            return this;
        }

        /**
         * <p>The upper limit on the number of subscription events to return
         * in a paged response.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage limit(Nullable<Integer> limit) {
            if (limit.isNull()) {
                this.limit = null;
            } else if (limit.isEmpty()) {
                this.limit = Optional.empty();
            } else {
                this.limit = Optional.of(limit.get());
            }
            return this;
        }

        /**
         * <p>The upper limit on the number of subscription events to return
         * in a paged response.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage limit(Integer limit) {
            this.limit = Optional.ofNullable(limit);
            return this;
        }

        /**
         * <p>The upper limit on the number of subscription events to return
         * in a paged response.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "limit", nulls = Nulls.SKIP)
        public _FinalStage limit(Optional<Integer> limit) {
            this.limit = limit;
            return this;
        }

        /**
         * <p>When the total number of resulting subscription events exceeds the limit of a paged response,
         * specify the cursor returned from a preceding response here to fetch the next set of results.
         * If the cursor is unset, the response contains the last page of the results.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage cursor(Nullable<String> cursor) {
            if (cursor.isNull()) {
                this.cursor = null;
            } else if (cursor.isEmpty()) {
                this.cursor = Optional.empty();
            } else {
                this.cursor = Optional.of(cursor.get());
            }
            return this;
        }

        /**
         * <p>When the total number of resulting subscription events exceeds the limit of a paged response,
         * specify the cursor returned from a preceding response here to fetch the next set of results.
         * If the cursor is unset, the response contains the last page of the results.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage cursor(String cursor) {
            this.cursor = Optional.ofNullable(cursor);
            return this;
        }

        /**
         * <p>When the total number of resulting subscription events exceeds the limit of a paged response,
         * specify the cursor returned from a preceding response here to fetch the next set of results.
         * If the cursor is unset, the response contains the last page of the results.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "cursor", nulls = Nulls.SKIP)
        public _FinalStage cursor(Optional<String> cursor) {
            this.cursor = cursor;
            return this;
        }

        @java.lang.Override
        public ListEventsSubscriptionsRequest build() {
            return new ListEventsSubscriptionsRequest(subscriptionId, cursor, limit, additionalProperties);
        }
    }
}
