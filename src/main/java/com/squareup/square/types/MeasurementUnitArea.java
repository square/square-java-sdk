/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class MeasurementUnitArea {
    public static final MeasurementUnitArea IMPERIAL_SQUARE_FOOT =
            new MeasurementUnitArea(Value.IMPERIAL_SQUARE_FOOT, "IMPERIAL_SQUARE_FOOT");

    public static final MeasurementUnitArea IMPERIAL_SQUARE_YARD =
            new MeasurementUnitArea(Value.IMPERIAL_SQUARE_YARD, "IMPERIAL_SQUARE_YARD");

    public static final MeasurementUnitArea METRIC_SQUARE_CENTIMETER =
            new MeasurementUnitArea(Value.METRIC_SQUARE_CENTIMETER, "METRIC_SQUARE_CENTIMETER");

    public static final MeasurementUnitArea IMPERIAL_ACRE =
            new MeasurementUnitArea(Value.IMPERIAL_ACRE, "IMPERIAL_ACRE");

    public static final MeasurementUnitArea IMPERIAL_SQUARE_INCH =
            new MeasurementUnitArea(Value.IMPERIAL_SQUARE_INCH, "IMPERIAL_SQUARE_INCH");

    public static final MeasurementUnitArea IMPERIAL_SQUARE_MILE =
            new MeasurementUnitArea(Value.IMPERIAL_SQUARE_MILE, "IMPERIAL_SQUARE_MILE");

    public static final MeasurementUnitArea METRIC_SQUARE_METER =
            new MeasurementUnitArea(Value.METRIC_SQUARE_METER, "METRIC_SQUARE_METER");

    public static final MeasurementUnitArea METRIC_SQUARE_KILOMETER =
            new MeasurementUnitArea(Value.METRIC_SQUARE_KILOMETER, "METRIC_SQUARE_KILOMETER");

    private final Value value;

    private final String string;

    MeasurementUnitArea(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof MeasurementUnitArea && this.string.equals(((MeasurementUnitArea) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case IMPERIAL_SQUARE_FOOT:
                return visitor.visitImperialSquareFoot();
            case IMPERIAL_SQUARE_YARD:
                return visitor.visitImperialSquareYard();
            case METRIC_SQUARE_CENTIMETER:
                return visitor.visitMetricSquareCentimeter();
            case IMPERIAL_ACRE:
                return visitor.visitImperialAcre();
            case IMPERIAL_SQUARE_INCH:
                return visitor.visitImperialSquareInch();
            case IMPERIAL_SQUARE_MILE:
                return visitor.visitImperialSquareMile();
            case METRIC_SQUARE_METER:
                return visitor.visitMetricSquareMeter();
            case METRIC_SQUARE_KILOMETER:
                return visitor.visitMetricSquareKilometer();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static MeasurementUnitArea valueOf(String value) {
        switch (value) {
            case "IMPERIAL_SQUARE_FOOT":
                return IMPERIAL_SQUARE_FOOT;
            case "IMPERIAL_SQUARE_YARD":
                return IMPERIAL_SQUARE_YARD;
            case "METRIC_SQUARE_CENTIMETER":
                return METRIC_SQUARE_CENTIMETER;
            case "IMPERIAL_ACRE":
                return IMPERIAL_ACRE;
            case "IMPERIAL_SQUARE_INCH":
                return IMPERIAL_SQUARE_INCH;
            case "IMPERIAL_SQUARE_MILE":
                return IMPERIAL_SQUARE_MILE;
            case "METRIC_SQUARE_METER":
                return METRIC_SQUARE_METER;
            case "METRIC_SQUARE_KILOMETER":
                return METRIC_SQUARE_KILOMETER;
            default:
                return new MeasurementUnitArea(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        IMPERIAL_ACRE,

        IMPERIAL_SQUARE_INCH,

        IMPERIAL_SQUARE_FOOT,

        IMPERIAL_SQUARE_YARD,

        IMPERIAL_SQUARE_MILE,

        METRIC_SQUARE_CENTIMETER,

        METRIC_SQUARE_METER,

        METRIC_SQUARE_KILOMETER,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitImperialAcre();

        T visitImperialSquareInch();

        T visitImperialSquareFoot();

        T visitImperialSquareYard();

        T visitImperialSquareMile();

        T visitMetricSquareCentimeter();

        T visitMetricSquareMeter();

        T visitMetricSquareKilometer();

        T visitUnknown(String unknownType);
    }
}
