/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class CheckoutLocationSettingsBrandingButtonShape {
    public static final CheckoutLocationSettingsBrandingButtonShape ROUNDED =
            new CheckoutLocationSettingsBrandingButtonShape(Value.ROUNDED, "ROUNDED");

    public static final CheckoutLocationSettingsBrandingButtonShape PILL =
            new CheckoutLocationSettingsBrandingButtonShape(Value.PILL, "PILL");

    public static final CheckoutLocationSettingsBrandingButtonShape SQUARED =
            new CheckoutLocationSettingsBrandingButtonShape(Value.SQUARED, "SQUARED");

    private final Value value;

    private final String string;

    CheckoutLocationSettingsBrandingButtonShape(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof CheckoutLocationSettingsBrandingButtonShape
                        && this.string.equals(((CheckoutLocationSettingsBrandingButtonShape) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case ROUNDED:
                return visitor.visitRounded();
            case PILL:
                return visitor.visitPill();
            case SQUARED:
                return visitor.visitSquared();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static CheckoutLocationSettingsBrandingButtonShape valueOf(String value) {
        switch (value) {
            case "ROUNDED":
                return ROUNDED;
            case "PILL":
                return PILL;
            case "SQUARED":
                return SQUARED;
            default:
                return new CheckoutLocationSettingsBrandingButtonShape(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        SQUARED,

        ROUNDED,

        PILL,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitSquared();

        T visitRounded();

        T visitPill();

        T visitUnknown(String unknownType);
    }
}
