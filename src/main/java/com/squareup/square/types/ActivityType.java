/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class ActivityType {
    public static final ActivityType AUTOMATIC_SAVINGS_REVERSED =
            new ActivityType(Value.AUTOMATIC_SAVINGS_REVERSED, "AUTOMATIC_SAVINGS_REVERSED");

    public static final ActivityType APP_FEE_REVENUE = new ActivityType(Value.APP_FEE_REVENUE, "APP_FEE_REVENUE");

    public static final ActivityType REFUND = new ActivityType(Value.REFUND, "REFUND");

    public static final ActivityType MONEY_TRANSFER = new ActivityType(Value.MONEY_TRANSFER, "MONEY_TRANSFER");

    public static final ActivityType GIFT_CARD_POOL_TRANSFER_REVERSED =
            new ActivityType(Value.GIFT_CARD_POOL_TRANSFER_REVERSED, "GIFT_CARD_POOL_TRANSFER_REVERSED");

    public static final ActivityType ADJUSTMENT = new ActivityType(Value.ADJUSTMENT, "ADJUSTMENT");

    public static final ActivityType CHARGE = new ActivityType(Value.CHARGE, "CHARGE");

    public static final ActivityType SQUARE_PAYROLL_TRANSFER =
            new ActivityType(Value.SQUARE_PAYROLL_TRANSFER, "SQUARE_PAYROLL_TRANSFER");

    public static final ActivityType PROCESSING_FEE = new ActivityType(Value.PROCESSING_FEE, "PROCESSING_FEE");

    public static final ActivityType PROCESSING_FEE_REFUND =
            new ActivityType(Value.PROCESSING_FEE_REFUND, "PROCESSING_FEE_REFUND");

    public static final ActivityType AUTOMATIC_SAVINGS = new ActivityType(Value.AUTOMATIC_SAVINGS, "AUTOMATIC_SAVINGS");

    public static final ActivityType RELEASE_ADJUSTMENT =
            new ActivityType(Value.RELEASE_ADJUSTMENT, "RELEASE_ADJUSTMENT");

    public static final ActivityType SQUARE_CAPITAL_REVERSED_PAYMENT =
            new ActivityType(Value.SQUARE_CAPITAL_REVERSED_PAYMENT, "SQUARE_CAPITAL_REVERSED_PAYMENT");

    public static final ActivityType PAID_SERVICE_FEE = new ActivityType(Value.PAID_SERVICE_FEE, "PAID_SERVICE_FEE");

    public static final ActivityType GIFT_CARD_LOAD_FEE =
            new ActivityType(Value.GIFT_CARD_LOAD_FEE, "GIFT_CARD_LOAD_FEE");

    public static final ActivityType RESERVE_RELEASE = new ActivityType(Value.RESERVE_RELEASE, "RESERVE_RELEASE");

    public static final ActivityType PERCENTAGE_PROCESSING_DEACTIVATION =
            new ActivityType(Value.PERCENTAGE_PROCESSING_DEACTIVATION, "PERCENTAGE_PROCESSING_DEACTIVATION");

    public static final ActivityType FREE_PROCESSING = new ActivityType(Value.FREE_PROCESSING, "FREE_PROCESSING");

    public static final ActivityType REDEMPTION_CODE = new ActivityType(Value.REDEMPTION_CODE, "REDEMPTION_CODE");

    public static final ActivityType OTHER_ADJUSTMENT = new ActivityType(Value.OTHER_ADJUSTMENT, "OTHER_ADJUSTMENT");

    public static final ActivityType BALANCE_FOLDERS_TRANSFER_REVERSED =
            new ActivityType(Value.BALANCE_FOLDERS_TRANSFER_REVERSED, "BALANCE_FOLDERS_TRANSFER_REVERSED");

    public static final ActivityType DEPOSIT_FEE_REVERSED =
            new ActivityType(Value.DEPOSIT_FEE_REVERSED, "DEPOSIT_FEE_REVERSED");

    public static final ActivityType TAX_ON_FEE = new ActivityType(Value.TAX_ON_FEE, "TAX_ON_FEE");

    public static final ActivityType OTHER = new ActivityType(Value.OTHER, "OTHER");

    public static final ActivityType PAYOUT = new ActivityType(Value.PAYOUT, "PAYOUT");

    public static final ActivityType SUBSCRIPTION_FEE = new ActivityType(Value.SUBSCRIPTION_FEE, "SUBSCRIPTION_FEE");

    public static final ActivityType GIFT_CARD_LOAD_FEE_REFUND =
            new ActivityType(Value.GIFT_CARD_LOAD_FEE_REFUND, "GIFT_CARD_LOAD_FEE_REFUND");

    public static final ActivityType HOLD_ADJUSTMENT = new ActivityType(Value.HOLD_ADJUSTMENT, "HOLD_ADJUSTMENT");

    public static final ActivityType LOCAL_OFFERS_FEE = new ActivityType(Value.LOCAL_OFFERS_FEE, "LOCAL_OFFERS_FEE");

    public static final ActivityType RETURNED_PAYOUT = new ActivityType(Value.RETURNED_PAYOUT, "RETURNED_PAYOUT");

    public static final ActivityType AUTOMATIC_BITCOIN_CONVERSIONS =
            new ActivityType(Value.AUTOMATIC_BITCOIN_CONVERSIONS, "AUTOMATIC_BITCOIN_CONVERSIONS");

    public static final ActivityType OPEN_DISPUTE = new ActivityType(Value.OPEN_DISPUTE, "OPEN_DISPUTE");

    public static final ActivityType CREDIT_CARD_REPAYMENT =
            new ActivityType(Value.CREDIT_CARD_REPAYMENT, "CREDIT_CARD_REPAYMENT");

    public static final ActivityType LOCAL_OFFERS_CASHBACK =
            new ActivityType(Value.LOCAL_OFFERS_CASHBACK, "LOCAL_OFFERS_CASHBACK");

    public static final ActivityType MONEY_TRANSFER_REVERSAL =
            new ActivityType(Value.MONEY_TRANSFER_REVERSAL, "MONEY_TRANSFER_REVERSAL");

    public static final ActivityType DEPOSIT_FEE = new ActivityType(Value.DEPOSIT_FEE, "DEPOSIT_FEE");

    public static final ActivityType BALANCE_FOLDERS_TRANSFER =
            new ActivityType(Value.BALANCE_FOLDERS_TRANSFER, "BALANCE_FOLDERS_TRANSFER");

    public static final ActivityType PERCENTAGE_PROCESSING_REPAYMENT_REVERSED = new ActivityType(
            Value.PERCENTAGE_PROCESSING_REPAYMENT_REVERSED, "PERCENTAGE_PROCESSING_REPAYMENT_REVERSED");

    public static final ActivityType PAID_SERVICE_FEE_REFUND =
            new ActivityType(Value.PAID_SERVICE_FEE_REFUND, "PAID_SERVICE_FEE_REFUND");

    public static final ActivityType FEE = new ActivityType(Value.FEE, "FEE");

    public static final ActivityType SQUARE_PAYROLL_TRANSFER_REVERSED =
            new ActivityType(Value.SQUARE_PAYROLL_TRANSFER_REVERSED, "SQUARE_PAYROLL_TRANSFER_REVERSED");

    public static final ActivityType CREDIT_CARD_REPAYMENT_REVERSED =
            new ActivityType(Value.CREDIT_CARD_REPAYMENT_REVERSED, "CREDIT_CARD_REPAYMENT_REVERSED");

    public static final ActivityType RESERVE_HOLD = new ActivityType(Value.RESERVE_HOLD, "RESERVE_HOLD");

    public static final ActivityType UNDO_PROCESSING_FEE_REFUND =
            new ActivityType(Value.UNDO_PROCESSING_FEE_REFUND, "UNDO_PROCESSING_FEE_REFUND");

    public static final ActivityType SUBSCRIPTION_FEE_PAID_REFUND =
            new ActivityType(Value.SUBSCRIPTION_FEE_PAID_REFUND, "SUBSCRIPTION_FEE_PAID_REFUND");

    public static final ActivityType THIRD_PARTY_FEE_REFUND =
            new ActivityType(Value.THIRD_PARTY_FEE_REFUND, "THIRD_PARTY_FEE_REFUND");

    public static final ActivityType INITIAL_BALANCE_CHANGE =
            new ActivityType(Value.INITIAL_BALANCE_CHANGE, "INITIAL_BALANCE_CHANGE");

    public static final ActivityType DISPUTE = new ActivityType(Value.DISPUTE, "DISPUTE");

    public static final ActivityType UNDO_GIFT_CARD_LOAD_FEE_REFUND =
            new ActivityType(Value.UNDO_GIFT_CARD_LOAD_FEE_REFUND, "UNDO_GIFT_CARD_LOAD_FEE_REFUND");

    public static final ActivityType AUTOMATIC_BITCOIN_CONVERSIONS_REVERSED =
            new ActivityType(Value.AUTOMATIC_BITCOIN_CONVERSIONS_REVERSED, "AUTOMATIC_BITCOIN_CONVERSIONS_REVERSED");

    public static final ActivityType PERCENTAGE_PROCESSING_REPAYMENT =
            new ActivityType(Value.PERCENTAGE_PROCESSING_REPAYMENT, "PERCENTAGE_PROCESSING_REPAYMENT");

    public static final ActivityType SUBSCRIPTION_FEE_REFUND =
            new ActivityType(Value.SUBSCRIPTION_FEE_REFUND, "SUBSCRIPTION_FEE_REFUND");

    public static final ActivityType ESCHEATMENT = new ActivityType(Value.ESCHEATMENT, "ESCHEATMENT");

    public static final ActivityType SQUARE_CAPITAL_PAYMENT =
            new ActivityType(Value.SQUARE_CAPITAL_PAYMENT, "SQUARE_CAPITAL_PAYMENT");

    public static final ActivityType PERCENTAGE_PROCESSING_ENROLLMENT =
            new ActivityType(Value.PERCENTAGE_PROCESSING_ENROLLMENT, "PERCENTAGE_PROCESSING_ENROLLMENT");

    public static final ActivityType GIFT_CARD_POOL_TRANSFER =
            new ActivityType(Value.GIFT_CARD_POOL_TRANSFER, "GIFT_CARD_POOL_TRANSFER");

    public static final ActivityType APP_FEE_REFUND = new ActivityType(Value.APP_FEE_REFUND, "APP_FEE_REFUND");

    public static final ActivityType THIRD_PARTY_FEE = new ActivityType(Value.THIRD_PARTY_FEE, "THIRD_PARTY_FEE");

    private final Value value;

    private final String string;

    ActivityType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other) || (other instanceof ActivityType && this.string.equals(((ActivityType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case AUTOMATIC_SAVINGS_REVERSED:
                return visitor.visitAutomaticSavingsReversed();
            case APP_FEE_REVENUE:
                return visitor.visitAppFeeRevenue();
            case REFUND:
                return visitor.visitRefund();
            case MONEY_TRANSFER:
                return visitor.visitMoneyTransfer();
            case GIFT_CARD_POOL_TRANSFER_REVERSED:
                return visitor.visitGiftCardPoolTransferReversed();
            case ADJUSTMENT:
                return visitor.visitAdjustment();
            case CHARGE:
                return visitor.visitCharge();
            case SQUARE_PAYROLL_TRANSFER:
                return visitor.visitSquarePayrollTransfer();
            case PROCESSING_FEE:
                return visitor.visitProcessingFee();
            case PROCESSING_FEE_REFUND:
                return visitor.visitProcessingFeeRefund();
            case AUTOMATIC_SAVINGS:
                return visitor.visitAutomaticSavings();
            case RELEASE_ADJUSTMENT:
                return visitor.visitReleaseAdjustment();
            case SQUARE_CAPITAL_REVERSED_PAYMENT:
                return visitor.visitSquareCapitalReversedPayment();
            case PAID_SERVICE_FEE:
                return visitor.visitPaidServiceFee();
            case GIFT_CARD_LOAD_FEE:
                return visitor.visitGiftCardLoadFee();
            case RESERVE_RELEASE:
                return visitor.visitReserveRelease();
            case PERCENTAGE_PROCESSING_DEACTIVATION:
                return visitor.visitPercentageProcessingDeactivation();
            case FREE_PROCESSING:
                return visitor.visitFreeProcessing();
            case REDEMPTION_CODE:
                return visitor.visitRedemptionCode();
            case OTHER_ADJUSTMENT:
                return visitor.visitOtherAdjustment();
            case BALANCE_FOLDERS_TRANSFER_REVERSED:
                return visitor.visitBalanceFoldersTransferReversed();
            case DEPOSIT_FEE_REVERSED:
                return visitor.visitDepositFeeReversed();
            case TAX_ON_FEE:
                return visitor.visitTaxOnFee();
            case OTHER:
                return visitor.visitOther();
            case PAYOUT:
                return visitor.visitPayout();
            case SUBSCRIPTION_FEE:
                return visitor.visitSubscriptionFee();
            case GIFT_CARD_LOAD_FEE_REFUND:
                return visitor.visitGiftCardLoadFeeRefund();
            case HOLD_ADJUSTMENT:
                return visitor.visitHoldAdjustment();
            case LOCAL_OFFERS_FEE:
                return visitor.visitLocalOffersFee();
            case RETURNED_PAYOUT:
                return visitor.visitReturnedPayout();
            case AUTOMATIC_BITCOIN_CONVERSIONS:
                return visitor.visitAutomaticBitcoinConversions();
            case OPEN_DISPUTE:
                return visitor.visitOpenDispute();
            case CREDIT_CARD_REPAYMENT:
                return visitor.visitCreditCardRepayment();
            case LOCAL_OFFERS_CASHBACK:
                return visitor.visitLocalOffersCashback();
            case MONEY_TRANSFER_REVERSAL:
                return visitor.visitMoneyTransferReversal();
            case DEPOSIT_FEE:
                return visitor.visitDepositFee();
            case BALANCE_FOLDERS_TRANSFER:
                return visitor.visitBalanceFoldersTransfer();
            case PERCENTAGE_PROCESSING_REPAYMENT_REVERSED:
                return visitor.visitPercentageProcessingRepaymentReversed();
            case PAID_SERVICE_FEE_REFUND:
                return visitor.visitPaidServiceFeeRefund();
            case FEE:
                return visitor.visitFee();
            case SQUARE_PAYROLL_TRANSFER_REVERSED:
                return visitor.visitSquarePayrollTransferReversed();
            case CREDIT_CARD_REPAYMENT_REVERSED:
                return visitor.visitCreditCardRepaymentReversed();
            case RESERVE_HOLD:
                return visitor.visitReserveHold();
            case UNDO_PROCESSING_FEE_REFUND:
                return visitor.visitUndoProcessingFeeRefund();
            case SUBSCRIPTION_FEE_PAID_REFUND:
                return visitor.visitSubscriptionFeePaidRefund();
            case THIRD_PARTY_FEE_REFUND:
                return visitor.visitThirdPartyFeeRefund();
            case INITIAL_BALANCE_CHANGE:
                return visitor.visitInitialBalanceChange();
            case DISPUTE:
                return visitor.visitDispute();
            case UNDO_GIFT_CARD_LOAD_FEE_REFUND:
                return visitor.visitUndoGiftCardLoadFeeRefund();
            case AUTOMATIC_BITCOIN_CONVERSIONS_REVERSED:
                return visitor.visitAutomaticBitcoinConversionsReversed();
            case PERCENTAGE_PROCESSING_REPAYMENT:
                return visitor.visitPercentageProcessingRepayment();
            case SUBSCRIPTION_FEE_REFUND:
                return visitor.visitSubscriptionFeeRefund();
            case ESCHEATMENT:
                return visitor.visitEscheatment();
            case SQUARE_CAPITAL_PAYMENT:
                return visitor.visitSquareCapitalPayment();
            case PERCENTAGE_PROCESSING_ENROLLMENT:
                return visitor.visitPercentageProcessingEnrollment();
            case GIFT_CARD_POOL_TRANSFER:
                return visitor.visitGiftCardPoolTransfer();
            case APP_FEE_REFUND:
                return visitor.visitAppFeeRefund();
            case THIRD_PARTY_FEE:
                return visitor.visitThirdPartyFee();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static ActivityType valueOf(String value) {
        switch (value) {
            case "AUTOMATIC_SAVINGS_REVERSED":
                return AUTOMATIC_SAVINGS_REVERSED;
            case "APP_FEE_REVENUE":
                return APP_FEE_REVENUE;
            case "REFUND":
                return REFUND;
            case "MONEY_TRANSFER":
                return MONEY_TRANSFER;
            case "GIFT_CARD_POOL_TRANSFER_REVERSED":
                return GIFT_CARD_POOL_TRANSFER_REVERSED;
            case "ADJUSTMENT":
                return ADJUSTMENT;
            case "CHARGE":
                return CHARGE;
            case "SQUARE_PAYROLL_TRANSFER":
                return SQUARE_PAYROLL_TRANSFER;
            case "PROCESSING_FEE":
                return PROCESSING_FEE;
            case "PROCESSING_FEE_REFUND":
                return PROCESSING_FEE_REFUND;
            case "AUTOMATIC_SAVINGS":
                return AUTOMATIC_SAVINGS;
            case "RELEASE_ADJUSTMENT":
                return RELEASE_ADJUSTMENT;
            case "SQUARE_CAPITAL_REVERSED_PAYMENT":
                return SQUARE_CAPITAL_REVERSED_PAYMENT;
            case "PAID_SERVICE_FEE":
                return PAID_SERVICE_FEE;
            case "GIFT_CARD_LOAD_FEE":
                return GIFT_CARD_LOAD_FEE;
            case "RESERVE_RELEASE":
                return RESERVE_RELEASE;
            case "PERCENTAGE_PROCESSING_DEACTIVATION":
                return PERCENTAGE_PROCESSING_DEACTIVATION;
            case "FREE_PROCESSING":
                return FREE_PROCESSING;
            case "REDEMPTION_CODE":
                return REDEMPTION_CODE;
            case "OTHER_ADJUSTMENT":
                return OTHER_ADJUSTMENT;
            case "BALANCE_FOLDERS_TRANSFER_REVERSED":
                return BALANCE_FOLDERS_TRANSFER_REVERSED;
            case "DEPOSIT_FEE_REVERSED":
                return DEPOSIT_FEE_REVERSED;
            case "TAX_ON_FEE":
                return TAX_ON_FEE;
            case "OTHER":
                return OTHER;
            case "PAYOUT":
                return PAYOUT;
            case "SUBSCRIPTION_FEE":
                return SUBSCRIPTION_FEE;
            case "GIFT_CARD_LOAD_FEE_REFUND":
                return GIFT_CARD_LOAD_FEE_REFUND;
            case "HOLD_ADJUSTMENT":
                return HOLD_ADJUSTMENT;
            case "LOCAL_OFFERS_FEE":
                return LOCAL_OFFERS_FEE;
            case "RETURNED_PAYOUT":
                return RETURNED_PAYOUT;
            case "AUTOMATIC_BITCOIN_CONVERSIONS":
                return AUTOMATIC_BITCOIN_CONVERSIONS;
            case "OPEN_DISPUTE":
                return OPEN_DISPUTE;
            case "CREDIT_CARD_REPAYMENT":
                return CREDIT_CARD_REPAYMENT;
            case "LOCAL_OFFERS_CASHBACK":
                return LOCAL_OFFERS_CASHBACK;
            case "MONEY_TRANSFER_REVERSAL":
                return MONEY_TRANSFER_REVERSAL;
            case "DEPOSIT_FEE":
                return DEPOSIT_FEE;
            case "BALANCE_FOLDERS_TRANSFER":
                return BALANCE_FOLDERS_TRANSFER;
            case "PERCENTAGE_PROCESSING_REPAYMENT_REVERSED":
                return PERCENTAGE_PROCESSING_REPAYMENT_REVERSED;
            case "PAID_SERVICE_FEE_REFUND":
                return PAID_SERVICE_FEE_REFUND;
            case "FEE":
                return FEE;
            case "SQUARE_PAYROLL_TRANSFER_REVERSED":
                return SQUARE_PAYROLL_TRANSFER_REVERSED;
            case "CREDIT_CARD_REPAYMENT_REVERSED":
                return CREDIT_CARD_REPAYMENT_REVERSED;
            case "RESERVE_HOLD":
                return RESERVE_HOLD;
            case "UNDO_PROCESSING_FEE_REFUND":
                return UNDO_PROCESSING_FEE_REFUND;
            case "SUBSCRIPTION_FEE_PAID_REFUND":
                return SUBSCRIPTION_FEE_PAID_REFUND;
            case "THIRD_PARTY_FEE_REFUND":
                return THIRD_PARTY_FEE_REFUND;
            case "INITIAL_BALANCE_CHANGE":
                return INITIAL_BALANCE_CHANGE;
            case "DISPUTE":
                return DISPUTE;
            case "UNDO_GIFT_CARD_LOAD_FEE_REFUND":
                return UNDO_GIFT_CARD_LOAD_FEE_REFUND;
            case "AUTOMATIC_BITCOIN_CONVERSIONS_REVERSED":
                return AUTOMATIC_BITCOIN_CONVERSIONS_REVERSED;
            case "PERCENTAGE_PROCESSING_REPAYMENT":
                return PERCENTAGE_PROCESSING_REPAYMENT;
            case "SUBSCRIPTION_FEE_REFUND":
                return SUBSCRIPTION_FEE_REFUND;
            case "ESCHEATMENT":
                return ESCHEATMENT;
            case "SQUARE_CAPITAL_PAYMENT":
                return SQUARE_CAPITAL_PAYMENT;
            case "PERCENTAGE_PROCESSING_ENROLLMENT":
                return PERCENTAGE_PROCESSING_ENROLLMENT;
            case "GIFT_CARD_POOL_TRANSFER":
                return GIFT_CARD_POOL_TRANSFER;
            case "APP_FEE_REFUND":
                return APP_FEE_REFUND;
            case "THIRD_PARTY_FEE":
                return THIRD_PARTY_FEE;
            default:
                return new ActivityType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ADJUSTMENT,

        APP_FEE_REFUND,

        APP_FEE_REVENUE,

        AUTOMATIC_SAVINGS,

        AUTOMATIC_SAVINGS_REVERSED,

        CHARGE,

        DEPOSIT_FEE,

        DEPOSIT_FEE_REVERSED,

        DISPUTE,

        ESCHEATMENT,

        FEE,

        FREE_PROCESSING,

        HOLD_ADJUSTMENT,

        INITIAL_BALANCE_CHANGE,

        MONEY_TRANSFER,

        MONEY_TRANSFER_REVERSAL,

        OPEN_DISPUTE,

        OTHER,

        OTHER_ADJUSTMENT,

        PAID_SERVICE_FEE,

        PAID_SERVICE_FEE_REFUND,

        REDEMPTION_CODE,

        REFUND,

        RELEASE_ADJUSTMENT,

        RESERVE_HOLD,

        RESERVE_RELEASE,

        RETURNED_PAYOUT,

        SQUARE_CAPITAL_PAYMENT,

        SQUARE_CAPITAL_REVERSED_PAYMENT,

        SUBSCRIPTION_FEE,

        SUBSCRIPTION_FEE_PAID_REFUND,

        SUBSCRIPTION_FEE_REFUND,

        TAX_ON_FEE,

        THIRD_PARTY_FEE,

        THIRD_PARTY_FEE_REFUND,

        PAYOUT,

        AUTOMATIC_BITCOIN_CONVERSIONS,

        AUTOMATIC_BITCOIN_CONVERSIONS_REVERSED,

        CREDIT_CARD_REPAYMENT,

        CREDIT_CARD_REPAYMENT_REVERSED,

        LOCAL_OFFERS_CASHBACK,

        LOCAL_OFFERS_FEE,

        PERCENTAGE_PROCESSING_ENROLLMENT,

        PERCENTAGE_PROCESSING_DEACTIVATION,

        PERCENTAGE_PROCESSING_REPAYMENT,

        PERCENTAGE_PROCESSING_REPAYMENT_REVERSED,

        PROCESSING_FEE,

        PROCESSING_FEE_REFUND,

        UNDO_PROCESSING_FEE_REFUND,

        GIFT_CARD_LOAD_FEE,

        GIFT_CARD_LOAD_FEE_REFUND,

        UNDO_GIFT_CARD_LOAD_FEE_REFUND,

        BALANCE_FOLDERS_TRANSFER,

        BALANCE_FOLDERS_TRANSFER_REVERSED,

        GIFT_CARD_POOL_TRANSFER,

        GIFT_CARD_POOL_TRANSFER_REVERSED,

        SQUARE_PAYROLL_TRANSFER,

        SQUARE_PAYROLL_TRANSFER_REVERSED,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitAdjustment();

        T visitAppFeeRefund();

        T visitAppFeeRevenue();

        T visitAutomaticSavings();

        T visitAutomaticSavingsReversed();

        T visitCharge();

        T visitDepositFee();

        T visitDepositFeeReversed();

        T visitDispute();

        T visitEscheatment();

        T visitFee();

        T visitFreeProcessing();

        T visitHoldAdjustment();

        T visitInitialBalanceChange();

        T visitMoneyTransfer();

        T visitMoneyTransferReversal();

        T visitOpenDispute();

        T visitOther();

        T visitOtherAdjustment();

        T visitPaidServiceFee();

        T visitPaidServiceFeeRefund();

        T visitRedemptionCode();

        T visitRefund();

        T visitReleaseAdjustment();

        T visitReserveHold();

        T visitReserveRelease();

        T visitReturnedPayout();

        T visitSquareCapitalPayment();

        T visitSquareCapitalReversedPayment();

        T visitSubscriptionFee();

        T visitSubscriptionFeePaidRefund();

        T visitSubscriptionFeeRefund();

        T visitTaxOnFee();

        T visitThirdPartyFee();

        T visitThirdPartyFeeRefund();

        T visitPayout();

        T visitAutomaticBitcoinConversions();

        T visitAutomaticBitcoinConversionsReversed();

        T visitCreditCardRepayment();

        T visitCreditCardRepaymentReversed();

        T visitLocalOffersCashback();

        T visitLocalOffersFee();

        T visitPercentageProcessingEnrollment();

        T visitPercentageProcessingDeactivation();

        T visitPercentageProcessingRepayment();

        T visitPercentageProcessingRepaymentReversed();

        T visitProcessingFee();

        T visitProcessingFeeRefund();

        T visitUndoProcessingFeeRefund();

        T visitGiftCardLoadFee();

        T visitGiftCardLoadFeeRefund();

        T visitUndoGiftCardLoadFeeRefund();

        T visitBalanceFoldersTransfer();

        T visitBalanceFoldersTransferReversed();

        T visitGiftCardPoolTransfer();

        T visitGiftCardPoolTransferReversed();

        T visitSquarePayrollTransfer();

        T visitSquarePayrollTransferReversed();

        T visitUnknown(String unknownType);
    }
}
