/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BulkPublishScheduledShiftsResponse.Builder.class)
public final class BulkPublishScheduledShiftsResponse {
    private final Optional<Map<String, PublishScheduledShiftResponse>> responses;

    private final Optional<List<Error>> errors;

    private final Map<String, Object> additionalProperties;

    private BulkPublishScheduledShiftsResponse(
            Optional<Map<String, PublishScheduledShiftResponse>> responses,
            Optional<List<Error>> errors,
            Map<String, Object> additionalProperties) {
        this.responses = responses;
        this.errors = errors;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A map of key-value pairs that represent responses for individual publish requests.
     * The order of responses might differ from the order in which the requests were provided.
     * <ul>
     * <li>Each key is the scheduled shift ID that was specified for a publish request.</li>
     * <li>Each value is the corresponding response. If the request succeeds, the value is the
     * published scheduled shift. If the request fails, the value is an <code>errors</code> array containing
     * any errors that occurred while processing the request.</li>
     * </ul>
     */
    @JsonProperty("responses")
    public Optional<Map<String, PublishScheduledShiftResponse>> getResponses() {
        return responses;
    }

    /**
     * @return Any top-level errors that prevented the bulk operation from succeeding.
     */
    @JsonProperty("errors")
    public Optional<List<Error>> getErrors() {
        return errors;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkPublishScheduledShiftsResponse
                && equalTo((BulkPublishScheduledShiftsResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkPublishScheduledShiftsResponse other) {
        return responses.equals(other.responses) && errors.equals(other.errors);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.responses, this.errors);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Map<String, PublishScheduledShiftResponse>> responses = Optional.empty();

        private Optional<List<Error>> errors = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BulkPublishScheduledShiftsResponse other) {
            responses(other.getResponses());
            errors(other.getErrors());
            return this;
        }

        @JsonSetter(value = "responses", nulls = Nulls.SKIP)
        public Builder responses(Optional<Map<String, PublishScheduledShiftResponse>> responses) {
            this.responses = responses;
            return this;
        }

        public Builder responses(Map<String, PublishScheduledShiftResponse> responses) {
            this.responses = Optional.ofNullable(responses);
            return this;
        }

        @JsonSetter(value = "errors", nulls = Nulls.SKIP)
        public Builder errors(Optional<List<Error>> errors) {
            this.errors = errors;
            return this;
        }

        public Builder errors(List<Error> errors) {
            this.errors = Optional.ofNullable(errors);
            return this;
        }

        public BulkPublishScheduledShiftsResponse build() {
            return new BulkPublishScheduledShiftsResponse(responses, errors, additionalProperties);
        }
    }
}
