/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class ArchivedState {
    public static final ArchivedState ARCHIVED_STATE_ARCHIVED =
            new ArchivedState(Value.ARCHIVED_STATE_ARCHIVED, "ARCHIVED_STATE_ARCHIVED");

    public static final ArchivedState ARCHIVED_STATE_ALL =
            new ArchivedState(Value.ARCHIVED_STATE_ALL, "ARCHIVED_STATE_ALL");

    public static final ArchivedState ARCHIVED_STATE_NOT_ARCHIVED =
            new ArchivedState(Value.ARCHIVED_STATE_NOT_ARCHIVED, "ARCHIVED_STATE_NOT_ARCHIVED");

    private final Value value;

    private final String string;

    ArchivedState(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof ArchivedState && this.string.equals(((ArchivedState) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case ARCHIVED_STATE_ARCHIVED:
                return visitor.visitArchivedStateArchived();
            case ARCHIVED_STATE_ALL:
                return visitor.visitArchivedStateAll();
            case ARCHIVED_STATE_NOT_ARCHIVED:
                return visitor.visitArchivedStateNotArchived();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static ArchivedState valueOf(String value) {
        switch (value) {
            case "ARCHIVED_STATE_ARCHIVED":
                return ARCHIVED_STATE_ARCHIVED;
            case "ARCHIVED_STATE_ALL":
                return ARCHIVED_STATE_ALL;
            case "ARCHIVED_STATE_NOT_ARCHIVED":
                return ARCHIVED_STATE_NOT_ARCHIVED;
            default:
                return new ArchivedState(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ARCHIVED_STATE_NOT_ARCHIVED,

        ARCHIVED_STATE_ARCHIVED,

        ARCHIVED_STATE_ALL,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitArchivedStateNotArchived();

        T visitArchivedStateArchived();

        T visitArchivedStateAll();

        T visitUnknown(String unknownType);
    }
}
