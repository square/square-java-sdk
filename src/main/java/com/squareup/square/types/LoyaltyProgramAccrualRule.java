/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = LoyaltyProgramAccrualRule.Builder.class)
public final class LoyaltyProgramAccrualRule {
    private final LoyaltyProgramAccrualRuleType accrualType;

    private final Optional<Integer> points;

    private final Optional<LoyaltyProgramAccrualRuleVisitData> visitData;

    private final Optional<LoyaltyProgramAccrualRuleSpendData> spendData;

    private final Optional<LoyaltyProgramAccrualRuleItemVariationData> itemVariationData;

    private final Optional<LoyaltyProgramAccrualRuleCategoryData> categoryData;

    private final Map<String, Object> additionalProperties;

    private LoyaltyProgramAccrualRule(
            LoyaltyProgramAccrualRuleType accrualType,
            Optional<Integer> points,
            Optional<LoyaltyProgramAccrualRuleVisitData> visitData,
            Optional<LoyaltyProgramAccrualRuleSpendData> spendData,
            Optional<LoyaltyProgramAccrualRuleItemVariationData> itemVariationData,
            Optional<LoyaltyProgramAccrualRuleCategoryData> categoryData,
            Map<String, Object> additionalProperties) {
        this.accrualType = accrualType;
        this.points = points;
        this.visitData = visitData;
        this.spendData = spendData;
        this.itemVariationData = itemVariationData;
        this.categoryData = categoryData;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The type of the accrual rule that defines how buyers can earn points.
     * See <a href="#type-loyaltyprogramaccrualruletype">LoyaltyProgramAccrualRuleType</a> for possible values
     */
    @JsonProperty("accrual_type")
    public LoyaltyProgramAccrualRuleType getAccrualType() {
        return accrualType;
    }

    /**
     * @return The number of points that
     * buyers earn based on the <code>accrual_type</code>.
     */
    @JsonIgnore
    public Optional<Integer> getPoints() {
        if (points == null) {
            return Optional.empty();
        }
        return points;
    }

    /**
     * @return Additional data for rules with the <code>VISIT</code> accrual type.
     */
    @JsonProperty("visit_data")
    public Optional<LoyaltyProgramAccrualRuleVisitData> getVisitData() {
        return visitData;
    }

    /**
     * @return Additional data for rules with the <code>SPEND</code> accrual type.
     */
    @JsonProperty("spend_data")
    public Optional<LoyaltyProgramAccrualRuleSpendData> getSpendData() {
        return spendData;
    }

    /**
     * @return Additional data for rules with the <code>ITEM_VARIATION</code> accrual type.
     */
    @JsonProperty("item_variation_data")
    public Optional<LoyaltyProgramAccrualRuleItemVariationData> getItemVariationData() {
        return itemVariationData;
    }

    /**
     * @return Additional data for rules with the <code>CATEGORY</code> accrual type.
     */
    @JsonProperty("category_data")
    public Optional<LoyaltyProgramAccrualRuleCategoryData> getCategoryData() {
        return categoryData;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("points")
    private Optional<Integer> _getPoints() {
        return points;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LoyaltyProgramAccrualRule && equalTo((LoyaltyProgramAccrualRule) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LoyaltyProgramAccrualRule other) {
        return accrualType.equals(other.accrualType)
                && points.equals(other.points)
                && visitData.equals(other.visitData)
                && spendData.equals(other.spendData)
                && itemVariationData.equals(other.itemVariationData)
                && categoryData.equals(other.categoryData);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.accrualType,
                this.points,
                this.visitData,
                this.spendData,
                this.itemVariationData,
                this.categoryData);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AccrualTypeStage builder() {
        return new Builder();
    }

    public interface AccrualTypeStage {
        _FinalStage accrualType(@NotNull LoyaltyProgramAccrualRuleType accrualType);

        Builder from(LoyaltyProgramAccrualRule other);
    }

    public interface _FinalStage {
        LoyaltyProgramAccrualRule build();

        _FinalStage points(Optional<Integer> points);

        _FinalStage points(Integer points);

        _FinalStage points(Nullable<Integer> points);

        _FinalStage visitData(Optional<LoyaltyProgramAccrualRuleVisitData> visitData);

        _FinalStage visitData(LoyaltyProgramAccrualRuleVisitData visitData);

        _FinalStage spendData(Optional<LoyaltyProgramAccrualRuleSpendData> spendData);

        _FinalStage spendData(LoyaltyProgramAccrualRuleSpendData spendData);

        _FinalStage itemVariationData(Optional<LoyaltyProgramAccrualRuleItemVariationData> itemVariationData);

        _FinalStage itemVariationData(LoyaltyProgramAccrualRuleItemVariationData itemVariationData);

        _FinalStage categoryData(Optional<LoyaltyProgramAccrualRuleCategoryData> categoryData);

        _FinalStage categoryData(LoyaltyProgramAccrualRuleCategoryData categoryData);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AccrualTypeStage, _FinalStage {
        private LoyaltyProgramAccrualRuleType accrualType;

        private Optional<LoyaltyProgramAccrualRuleCategoryData> categoryData = Optional.empty();

        private Optional<LoyaltyProgramAccrualRuleItemVariationData> itemVariationData = Optional.empty();

        private Optional<LoyaltyProgramAccrualRuleSpendData> spendData = Optional.empty();

        private Optional<LoyaltyProgramAccrualRuleVisitData> visitData = Optional.empty();

        private Optional<Integer> points = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LoyaltyProgramAccrualRule other) {
            accrualType(other.getAccrualType());
            points(other.getPoints());
            visitData(other.getVisitData());
            spendData(other.getSpendData());
            itemVariationData(other.getItemVariationData());
            categoryData(other.getCategoryData());
            return this;
        }

        /**
         * <p>The type of the accrual rule that defines how buyers can earn points.
         * See <a href="#type-loyaltyprogramaccrualruletype">LoyaltyProgramAccrualRuleType</a> for possible values</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("accrual_type")
        public _FinalStage accrualType(@NotNull LoyaltyProgramAccrualRuleType accrualType) {
            this.accrualType = Objects.requireNonNull(accrualType, "accrualType must not be null");
            return this;
        }

        /**
         * <p>Additional data for rules with the <code>CATEGORY</code> accrual type.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage categoryData(LoyaltyProgramAccrualRuleCategoryData categoryData) {
            this.categoryData = Optional.ofNullable(categoryData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "category_data", nulls = Nulls.SKIP)
        public _FinalStage categoryData(Optional<LoyaltyProgramAccrualRuleCategoryData> categoryData) {
            this.categoryData = categoryData;
            return this;
        }

        /**
         * <p>Additional data for rules with the <code>ITEM_VARIATION</code> accrual type.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage itemVariationData(LoyaltyProgramAccrualRuleItemVariationData itemVariationData) {
            this.itemVariationData = Optional.ofNullable(itemVariationData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "item_variation_data", nulls = Nulls.SKIP)
        public _FinalStage itemVariationData(Optional<LoyaltyProgramAccrualRuleItemVariationData> itemVariationData) {
            this.itemVariationData = itemVariationData;
            return this;
        }

        /**
         * <p>Additional data for rules with the <code>SPEND</code> accrual type.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage spendData(LoyaltyProgramAccrualRuleSpendData spendData) {
            this.spendData = Optional.ofNullable(spendData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "spend_data", nulls = Nulls.SKIP)
        public _FinalStage spendData(Optional<LoyaltyProgramAccrualRuleSpendData> spendData) {
            this.spendData = spendData;
            return this;
        }

        /**
         * <p>Additional data for rules with the <code>VISIT</code> accrual type.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage visitData(LoyaltyProgramAccrualRuleVisitData visitData) {
            this.visitData = Optional.ofNullable(visitData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "visit_data", nulls = Nulls.SKIP)
        public _FinalStage visitData(Optional<LoyaltyProgramAccrualRuleVisitData> visitData) {
            this.visitData = visitData;
            return this;
        }

        /**
         * <p>The number of points that
         * buyers earn based on the <code>accrual_type</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage points(Nullable<Integer> points) {
            if (points.isNull()) {
                this.points = null;
            } else if (points.isEmpty()) {
                this.points = Optional.empty();
            } else {
                this.points = Optional.of(points.get());
            }
            return this;
        }

        /**
         * <p>The number of points that
         * buyers earn based on the <code>accrual_type</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage points(Integer points) {
            this.points = Optional.ofNullable(points);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "points", nulls = Nulls.SKIP)
        public _FinalStage points(Optional<Integer> points) {
            this.points = points;
            return this;
        }

        @java.lang.Override
        public LoyaltyProgramAccrualRule build() {
            return new LoyaltyProgramAccrualRule(
                    accrualType, points, visitData, spendData, itemVariationData, categoryData, additionalProperties);
        }
    }
}
