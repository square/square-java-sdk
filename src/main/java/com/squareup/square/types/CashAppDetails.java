/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CashAppDetails.Builder.class)
public final class CashAppDetails {
    private final Optional<String> buyerFullName;

    private final Optional<String> buyerCountryCode;

    private final Optional<String> buyerCashtag;

    private final Map<String, Object> additionalProperties;

    private CashAppDetails(
            Optional<String> buyerFullName,
            Optional<String> buyerCountryCode,
            Optional<String> buyerCashtag,
            Map<String, Object> additionalProperties) {
        this.buyerFullName = buyerFullName;
        this.buyerCountryCode = buyerCountryCode;
        this.buyerCashtag = buyerCashtag;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The name of the Cash App account holder.
     */
    @JsonIgnore
    public Optional<String> getBuyerFullName() {
        if (buyerFullName == null) {
            return Optional.empty();
        }
        return buyerFullName;
    }

    /**
     * @return The country of the Cash App account holder, in ISO 3166-1-alpha-2 format.
     * <p>For possible values, see <a href="entity:Country">Country</a>.</p>
     */
    @JsonIgnore
    public Optional<String> getBuyerCountryCode() {
        if (buyerCountryCode == null) {
            return Optional.empty();
        }
        return buyerCountryCode;
    }

    /**
     * @return $Cashtag of the Cash App account holder.
     */
    @JsonProperty("buyer_cashtag")
    public Optional<String> getBuyerCashtag() {
        return buyerCashtag;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("buyer_full_name")
    private Optional<String> _getBuyerFullName() {
        return buyerFullName;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("buyer_country_code")
    private Optional<String> _getBuyerCountryCode() {
        return buyerCountryCode;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CashAppDetails && equalTo((CashAppDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CashAppDetails other) {
        return buyerFullName.equals(other.buyerFullName)
                && buyerCountryCode.equals(other.buyerCountryCode)
                && buyerCashtag.equals(other.buyerCashtag);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.buyerFullName, this.buyerCountryCode, this.buyerCashtag);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> buyerFullName = Optional.empty();

        private Optional<String> buyerCountryCode = Optional.empty();

        private Optional<String> buyerCashtag = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(CashAppDetails other) {
            buyerFullName(other.getBuyerFullName());
            buyerCountryCode(other.getBuyerCountryCode());
            buyerCashtag(other.getBuyerCashtag());
            return this;
        }

        /**
         * <p>The name of the Cash App account holder.</p>
         */
        @JsonSetter(value = "buyer_full_name", nulls = Nulls.SKIP)
        public Builder buyerFullName(Optional<String> buyerFullName) {
            this.buyerFullName = buyerFullName;
            return this;
        }

        public Builder buyerFullName(String buyerFullName) {
            this.buyerFullName = Optional.ofNullable(buyerFullName);
            return this;
        }

        public Builder buyerFullName(Nullable<String> buyerFullName) {
            if (buyerFullName.isNull()) {
                this.buyerFullName = null;
            } else if (buyerFullName.isEmpty()) {
                this.buyerFullName = Optional.empty();
            } else {
                this.buyerFullName = Optional.of(buyerFullName.get());
            }
            return this;
        }

        /**
         * <p>The country of the Cash App account holder, in ISO 3166-1-alpha-2 format.</p>
         * <p>For possible values, see <a href="entity:Country">Country</a>.</p>
         */
        @JsonSetter(value = "buyer_country_code", nulls = Nulls.SKIP)
        public Builder buyerCountryCode(Optional<String> buyerCountryCode) {
            this.buyerCountryCode = buyerCountryCode;
            return this;
        }

        public Builder buyerCountryCode(String buyerCountryCode) {
            this.buyerCountryCode = Optional.ofNullable(buyerCountryCode);
            return this;
        }

        public Builder buyerCountryCode(Nullable<String> buyerCountryCode) {
            if (buyerCountryCode.isNull()) {
                this.buyerCountryCode = null;
            } else if (buyerCountryCode.isEmpty()) {
                this.buyerCountryCode = Optional.empty();
            } else {
                this.buyerCountryCode = Optional.of(buyerCountryCode.get());
            }
            return this;
        }

        /**
         * <p>$Cashtag of the Cash App account holder.</p>
         */
        @JsonSetter(value = "buyer_cashtag", nulls = Nulls.SKIP)
        public Builder buyerCashtag(Optional<String> buyerCashtag) {
            this.buyerCashtag = buyerCashtag;
            return this;
        }

        public Builder buyerCashtag(String buyerCashtag) {
            this.buyerCashtag = Optional.ofNullable(buyerCashtag);
            return this;
        }

        public CashAppDetails build() {
            return new CashAppDetails(buyerFullName, buyerCountryCode, buyerCashtag, additionalProperties);
        }
    }
}
