/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = LoyaltyEventRedeemReward.Builder.class)
public final class LoyaltyEventRedeemReward {
    private final String loyaltyProgramId;

    private final Optional<String> rewardId;

    private final Optional<String> orderId;

    private final Map<String, Object> additionalProperties;

    private LoyaltyEventRedeemReward(
            String loyaltyProgramId,
            Optional<String> rewardId,
            Optional<String> orderId,
            Map<String, Object> additionalProperties) {
        this.loyaltyProgramId = loyaltyProgramId;
        this.rewardId = rewardId;
        this.orderId = orderId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the <a href="entity:LoyaltyProgram">loyalty program</a>.
     */
    @JsonProperty("loyalty_program_id")
    public String getLoyaltyProgramId() {
        return loyaltyProgramId;
    }

    /**
     * @return The ID of the redeemed <a href="entity:LoyaltyReward">loyalty reward</a>.
     * This field is returned only if the event source is <code>LOYALTY_API</code>.
     */
    @JsonProperty("reward_id")
    public Optional<String> getRewardId() {
        return rewardId;
    }

    /**
     * @return The ID of the <a href="entity:Order">order</a> that redeemed the reward.
     * This field is returned only if the Orders API is used to process orders.
     */
    @JsonProperty("order_id")
    public Optional<String> getOrderId() {
        return orderId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LoyaltyEventRedeemReward && equalTo((LoyaltyEventRedeemReward) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LoyaltyEventRedeemReward other) {
        return loyaltyProgramId.equals(other.loyaltyProgramId)
                && rewardId.equals(other.rewardId)
                && orderId.equals(other.orderId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.loyaltyProgramId, this.rewardId, this.orderId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static LoyaltyProgramIdStage builder() {
        return new Builder();
    }

    public interface LoyaltyProgramIdStage {
        _FinalStage loyaltyProgramId(@NotNull String loyaltyProgramId);

        Builder from(LoyaltyEventRedeemReward other);
    }

    public interface _FinalStage {
        LoyaltyEventRedeemReward build();

        _FinalStage rewardId(Optional<String> rewardId);

        _FinalStage rewardId(String rewardId);

        _FinalStage orderId(Optional<String> orderId);

        _FinalStage orderId(String orderId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements LoyaltyProgramIdStage, _FinalStage {
        private String loyaltyProgramId;

        private Optional<String> orderId = Optional.empty();

        private Optional<String> rewardId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LoyaltyEventRedeemReward other) {
            loyaltyProgramId(other.getLoyaltyProgramId());
            rewardId(other.getRewardId());
            orderId(other.getOrderId());
            return this;
        }

        /**
         * <p>The ID of the <a href="entity:LoyaltyProgram">loyalty program</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("loyalty_program_id")
        public _FinalStage loyaltyProgramId(@NotNull String loyaltyProgramId) {
            this.loyaltyProgramId = Objects.requireNonNull(loyaltyProgramId, "loyaltyProgramId must not be null");
            return this;
        }

        /**
         * <p>The ID of the <a href="entity:Order">order</a> that redeemed the reward.
         * This field is returned only if the Orders API is used to process orders.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage orderId(String orderId) {
            this.orderId = Optional.ofNullable(orderId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "order_id", nulls = Nulls.SKIP)
        public _FinalStage orderId(Optional<String> orderId) {
            this.orderId = orderId;
            return this;
        }

        /**
         * <p>The ID of the redeemed <a href="entity:LoyaltyReward">loyalty reward</a>.
         * This field is returned only if the event source is <code>LOYALTY_API</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage rewardId(String rewardId) {
            this.rewardId = Optional.ofNullable(rewardId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "reward_id", nulls = Nulls.SKIP)
        public _FinalStage rewardId(Optional<String> rewardId) {
            this.rewardId = rewardId;
            return this;
        }

        @java.lang.Override
        public LoyaltyEventRedeemReward build() {
            return new LoyaltyEventRedeemReward(loyaltyProgramId, rewardId, orderId, additionalProperties);
        }
    }
}
