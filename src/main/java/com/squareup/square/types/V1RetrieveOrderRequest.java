/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = V1RetrieveOrderRequest.Builder.class)
public final class V1RetrieveOrderRequest {
    private final String locationId;

    private final String orderId;

    private final Map<String, Object> additionalProperties;

    private V1RetrieveOrderRequest(String locationId, String orderId, Map<String, Object> additionalProperties) {
        this.locationId = locationId;
        this.orderId = orderId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the order's associated location.
     */
    @JsonProperty("location_id")
    public String getLocationId() {
        return locationId;
    }

    /**
     * @return The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint
     */
    @JsonProperty("order_id")
    public String getOrderId() {
        return orderId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof V1RetrieveOrderRequest && equalTo((V1RetrieveOrderRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(V1RetrieveOrderRequest other) {
        return locationId.equals(other.locationId) && orderId.equals(other.orderId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.locationId, this.orderId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static LocationIdStage builder() {
        return new Builder();
    }

    public interface LocationIdStage {
        /**
         * <p>The ID of the order's associated location.</p>
         */
        OrderIdStage locationId(@NotNull String locationId);

        Builder from(V1RetrieveOrderRequest other);
    }

    public interface OrderIdStage {
        /**
         * <p>The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint</p>
         */
        _FinalStage orderId(@NotNull String orderId);
    }

    public interface _FinalStage {
        V1RetrieveOrderRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements LocationIdStage, OrderIdStage, _FinalStage {
        private String locationId;

        private String orderId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(V1RetrieveOrderRequest other) {
            locationId(other.getLocationId());
            orderId(other.getOrderId());
            return this;
        }

        /**
         * <p>The ID of the order's associated location.</p>
         * <p>The ID of the order's associated location.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("location_id")
        public OrderIdStage locationId(@NotNull String locationId) {
            this.locationId = Objects.requireNonNull(locationId, "locationId must not be null");
            return this;
        }

        /**
         * <p>The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint</p>
         * <p>The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("order_id")
        public _FinalStage orderId(@NotNull String orderId) {
            this.orderId = Objects.requireNonNull(orderId, "orderId must not be null");
            return this;
        }

        @java.lang.Override
        public V1RetrieveOrderRequest build() {
            return new V1RetrieveOrderRequest(locationId, orderId, additionalProperties);
        }
    }
}
