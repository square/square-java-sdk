/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class TenderCardDetailsEntryMethod {
    public static final TenderCardDetailsEntryMethod KEYED = new TenderCardDetailsEntryMethod(Value.KEYED, "KEYED");

    public static final TenderCardDetailsEntryMethod CONTACTLESS =
            new TenderCardDetailsEntryMethod(Value.CONTACTLESS, "CONTACTLESS");

    public static final TenderCardDetailsEntryMethod SWIPED = new TenderCardDetailsEntryMethod(Value.SWIPED, "SWIPED");

    public static final TenderCardDetailsEntryMethod EMV = new TenderCardDetailsEntryMethod(Value.EMV, "EMV");

    public static final TenderCardDetailsEntryMethod ON_FILE =
            new TenderCardDetailsEntryMethod(Value.ON_FILE, "ON_FILE");

    private final Value value;

    private final String string;

    TenderCardDetailsEntryMethod(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof TenderCardDetailsEntryMethod
                        && this.string.equals(((TenderCardDetailsEntryMethod) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case KEYED:
                return visitor.visitKeyed();
            case CONTACTLESS:
                return visitor.visitContactless();
            case SWIPED:
                return visitor.visitSwiped();
            case EMV:
                return visitor.visitEmv();
            case ON_FILE:
                return visitor.visitOnFile();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static TenderCardDetailsEntryMethod valueOf(String value) {
        switch (value) {
            case "KEYED":
                return KEYED;
            case "CONTACTLESS":
                return CONTACTLESS;
            case "SWIPED":
                return SWIPED;
            case "EMV":
                return EMV;
            case "ON_FILE":
                return ON_FILE;
            default:
                return new TenderCardDetailsEntryMethod(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        SWIPED,

        KEYED,

        EMV,

        ON_FILE,

        CONTACTLESS,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitSwiped();

        T visitKeyed();

        T visitEmv();

        T visitOnFile();

        T visitContactless();

        T visitUnknown(String unknownType);
    }
}
