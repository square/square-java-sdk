/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference {
    public static final CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference DAIRY_FREE =
            new CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference(
                    Value.DAIRY_FREE, "DAIRY_FREE");

    public static final CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference NUT_FREE =
            new CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference(Value.NUT_FREE, "NUT_FREE");

    public static final CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference KOSHER =
            new CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference(Value.KOSHER, "KOSHER");

    public static final CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference VEGAN =
            new CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference(Value.VEGAN, "VEGAN");

    public static final CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference HALAL =
            new CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference(Value.HALAL, "HALAL");

    public static final CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference GLUTEN_FREE =
            new CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference(
                    Value.GLUTEN_FREE, "GLUTEN_FREE");

    public static final CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference VEGETARIAN =
            new CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference(
                    Value.VEGETARIAN, "VEGETARIAN");

    private final Value value;

    private final String string;

    CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference
                        && this.string.equals(
                                ((CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference) other)
                                        .string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case DAIRY_FREE:
                return visitor.visitDairyFree();
            case NUT_FREE:
                return visitor.visitNutFree();
            case KOSHER:
                return visitor.visitKosher();
            case VEGAN:
                return visitor.visitVegan();
            case HALAL:
                return visitor.visitHalal();
            case GLUTEN_FREE:
                return visitor.visitGlutenFree();
            case VEGETARIAN:
                return visitor.visitVegetarian();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference valueOf(String value) {
        switch (value) {
            case "DAIRY_FREE":
                return DAIRY_FREE;
            case "NUT_FREE":
                return NUT_FREE;
            case "KOSHER":
                return KOSHER;
            case "VEGAN":
                return VEGAN;
            case "HALAL":
                return HALAL;
            case "GLUTEN_FREE":
                return GLUTEN_FREE;
            case "VEGETARIAN":
                return VEGETARIAN;
            default:
                return new CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference(
                        Value.UNKNOWN, value);
        }
    }

    public enum Value {
        DAIRY_FREE,

        GLUTEN_FREE,

        HALAL,

        KOSHER,

        NUT_FREE,

        VEGAN,

        VEGETARIAN,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitDairyFree();

        T visitGlutenFree();

        T visitHalal();

        T visitKosher();

        T visitNutFree();

        T visitVegan();

        T visitVegetarian();

        T visitUnknown(String unknownType);
    }
}
