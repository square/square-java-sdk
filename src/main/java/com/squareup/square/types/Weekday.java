/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class Weekday {
    public static final Weekday FRI = new Weekday(Value.FRI, "FRI");

    public static final Weekday THU = new Weekday(Value.THU, "THU");

    public static final Weekday SAT = new Weekday(Value.SAT, "SAT");

    public static final Weekday MON = new Weekday(Value.MON, "MON");

    public static final Weekday SUN = new Weekday(Value.SUN, "SUN");

    public static final Weekday WED = new Weekday(Value.WED, "WED");

    public static final Weekday TUE = new Weekday(Value.TUE, "TUE");

    private final Value value;

    private final String string;

    Weekday(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other) || (other instanceof Weekday && this.string.equals(((Weekday) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case FRI:
                return visitor.visitFri();
            case THU:
                return visitor.visitThu();
            case SAT:
                return visitor.visitSat();
            case MON:
                return visitor.visitMon();
            case SUN:
                return visitor.visitSun();
            case WED:
                return visitor.visitWed();
            case TUE:
                return visitor.visitTue();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static Weekday valueOf(String value) {
        switch (value) {
            case "FRI":
                return FRI;
            case "THU":
                return THU;
            case "SAT":
                return SAT;
            case "MON":
                return MON;
            case "SUN":
                return SUN;
            case "WED":
                return WED;
            case "TUE":
                return TUE;
            default:
                return new Weekday(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        MON,

        TUE,

        WED,

        THU,

        FRI,

        SAT,

        SUN,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitMon();

        T visitTue();

        T visitWed();

        T visitThu();

        T visitFri();

        T visitSat();

        T visitSun();

        T visitUnknown(String unknownType);
    }
}
