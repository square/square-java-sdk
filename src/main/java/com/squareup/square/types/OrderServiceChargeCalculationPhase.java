/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class OrderServiceChargeCalculationPhase {
    public static final OrderServiceChargeCalculationPhase APPORTIONED_AMOUNT_PHASE =
            new OrderServiceChargeCalculationPhase(Value.APPORTIONED_AMOUNT_PHASE, "APPORTIONED_AMOUNT_PHASE");

    public static final OrderServiceChargeCalculationPhase SUBTOTAL_PHASE =
            new OrderServiceChargeCalculationPhase(Value.SUBTOTAL_PHASE, "SUBTOTAL_PHASE");

    public static final OrderServiceChargeCalculationPhase TOTAL_PHASE =
            new OrderServiceChargeCalculationPhase(Value.TOTAL_PHASE, "TOTAL_PHASE");

    public static final OrderServiceChargeCalculationPhase APPORTIONED_PERCENTAGE_PHASE =
            new OrderServiceChargeCalculationPhase(Value.APPORTIONED_PERCENTAGE_PHASE, "APPORTIONED_PERCENTAGE_PHASE");

    private final Value value;

    private final String string;

    OrderServiceChargeCalculationPhase(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof OrderServiceChargeCalculationPhase
                        && this.string.equals(((OrderServiceChargeCalculationPhase) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case APPORTIONED_AMOUNT_PHASE:
                return visitor.visitApportionedAmountPhase();
            case SUBTOTAL_PHASE:
                return visitor.visitSubtotalPhase();
            case TOTAL_PHASE:
                return visitor.visitTotalPhase();
            case APPORTIONED_PERCENTAGE_PHASE:
                return visitor.visitApportionedPercentagePhase();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static OrderServiceChargeCalculationPhase valueOf(String value) {
        switch (value) {
            case "APPORTIONED_AMOUNT_PHASE":
                return APPORTIONED_AMOUNT_PHASE;
            case "SUBTOTAL_PHASE":
                return SUBTOTAL_PHASE;
            case "TOTAL_PHASE":
                return TOTAL_PHASE;
            case "APPORTIONED_PERCENTAGE_PHASE":
                return APPORTIONED_PERCENTAGE_PHASE;
            default:
                return new OrderServiceChargeCalculationPhase(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        SUBTOTAL_PHASE,

        TOTAL_PHASE,

        APPORTIONED_PERCENTAGE_PHASE,

        APPORTIONED_AMOUNT_PHASE,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitSubtotalPhase();

        T visitTotalPhase();

        T visitApportionedPercentagePhase();

        T visitApportionedAmountPhase();

        T visitUnknown(String unknownType);
    }
}
