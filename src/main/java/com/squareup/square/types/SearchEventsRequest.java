/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SearchEventsRequest.Builder.class)
public final class SearchEventsRequest {
    private final Optional<String> cursor;

    private final Optional<Integer> limit;

    private final Optional<SearchEventsQuery> query;

    private final Map<String, Object> additionalProperties;

    private SearchEventsRequest(
            Optional<String> cursor,
            Optional<Integer> limit,
            Optional<SearchEventsQuery> query,
            Map<String, Object> additionalProperties) {
        this.cursor = cursor;
        this.limit = limit;
        this.query = query;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of events for your original query.
     * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
     */
    @JsonProperty("cursor")
    public Optional<String> getCursor() {
        return cursor;
    }

    /**
     * @return The maximum number of events to return in a single page. The response might contain fewer events. The default value is 100, which is also the maximum allowed value.
     * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
     * <p>Default: 100</p>
     */
    @JsonProperty("limit")
    public Optional<Integer> getLimit() {
        return limit;
    }

    /**
     * @return The filtering and sorting criteria for the search request. To retrieve additional pages using a cursor, you must use the original query.
     */
    @JsonProperty("query")
    public Optional<SearchEventsQuery> getQuery() {
        return query;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SearchEventsRequest && equalTo((SearchEventsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SearchEventsRequest other) {
        return cursor.equals(other.cursor) && limit.equals(other.limit) && query.equals(other.query);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.cursor, this.limit, this.query);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> cursor = Optional.empty();

        private Optional<Integer> limit = Optional.empty();

        private Optional<SearchEventsQuery> query = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(SearchEventsRequest other) {
            cursor(other.getCursor());
            limit(other.getLimit());
            query(other.getQuery());
            return this;
        }

        @JsonSetter(value = "cursor", nulls = Nulls.SKIP)
        public Builder cursor(Optional<String> cursor) {
            this.cursor = cursor;
            return this;
        }

        public Builder cursor(String cursor) {
            this.cursor = Optional.ofNullable(cursor);
            return this;
        }

        @JsonSetter(value = "limit", nulls = Nulls.SKIP)
        public Builder limit(Optional<Integer> limit) {
            this.limit = limit;
            return this;
        }

        public Builder limit(Integer limit) {
            this.limit = Optional.ofNullable(limit);
            return this;
        }

        @JsonSetter(value = "query", nulls = Nulls.SKIP)
        public Builder query(Optional<SearchEventsQuery> query) {
            this.query = query;
            return this;
        }

        public Builder query(SearchEventsQuery query) {
            this.query = Optional.ofNullable(query);
            return this;
        }

        public SearchEventsRequest build() {
            return new SearchEventsRequest(cursor, limit, query, additionalProperties);
        }
    }
}
