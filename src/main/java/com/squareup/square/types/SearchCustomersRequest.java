/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SearchCustomersRequest.Builder.class)
public final class SearchCustomersRequest {
    private final Optional<String> cursor;

    private final Optional<Long> limit;

    private final Optional<CustomerQuery> query;

    private final Optional<Boolean> count;

    private final Map<String, Object> additionalProperties;

    private SearchCustomersRequest(
            Optional<String> cursor,
            Optional<Long> limit,
            Optional<CustomerQuery> query,
            Optional<Boolean> count,
            Map<String, Object> additionalProperties) {
        this.cursor = cursor;
        this.limit = limit;
        this.query = query;
        this.count = count;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Include the pagination cursor in subsequent calls to this endpoint to retrieve
     * the next set of results associated with the original query.
     * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
     */
    @JsonProperty("cursor")
    public Optional<String> getCursor() {
        return cursor;
    }

    /**
     * @return The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results.
     * If the specified limit is invalid, Square returns a <code>400 VALUE_TOO_LOW</code> or <code>400 VALUE_TOO_HIGH</code> error. The default value is 100.
     * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
     */
    @JsonProperty("limit")
    public Optional<Long> getLimit() {
        return limit;
    }

    /**
     * @return The filtering and sorting criteria for the search request. If a query is not specified,
     * Square returns all customer profiles ordered alphabetically by <code>given_name</code> and <code>family_name</code>.
     */
    @JsonProperty("query")
    public Optional<CustomerQuery> getQuery() {
        return query;
    }

    /**
     * @return Indicates whether to return the total count of matching customers in the <code>count</code> field of the response.
     * <p>The default value is <code>false</code>.</p>
     */
    @JsonProperty("count")
    public Optional<Boolean> getCount() {
        return count;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SearchCustomersRequest && equalTo((SearchCustomersRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SearchCustomersRequest other) {
        return cursor.equals(other.cursor)
                && limit.equals(other.limit)
                && query.equals(other.query)
                && count.equals(other.count);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.cursor, this.limit, this.query, this.count);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> cursor = Optional.empty();

        private Optional<Long> limit = Optional.empty();

        private Optional<CustomerQuery> query = Optional.empty();

        private Optional<Boolean> count = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(SearchCustomersRequest other) {
            cursor(other.getCursor());
            limit(other.getLimit());
            query(other.getQuery());
            count(other.getCount());
            return this;
        }

        /**
         * <p>Include the pagination cursor in subsequent calls to this endpoint to retrieve
         * the next set of results associated with the original query.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
         */
        @JsonSetter(value = "cursor", nulls = Nulls.SKIP)
        public Builder cursor(Optional<String> cursor) {
            this.cursor = cursor;
            return this;
        }

        public Builder cursor(String cursor) {
            this.cursor = Optional.ofNullable(cursor);
            return this;
        }

        /**
         * <p>The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results.
         * If the specified limit is invalid, Square returns a <code>400 VALUE_TOO_LOW</code> or <code>400 VALUE_TOO_HIGH</code> error. The default value is 100.</p>
         * <p>For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination">Pagination</a>.</p>
         */
        @JsonSetter(value = "limit", nulls = Nulls.SKIP)
        public Builder limit(Optional<Long> limit) {
            this.limit = limit;
            return this;
        }

        public Builder limit(Long limit) {
            this.limit = Optional.ofNullable(limit);
            return this;
        }

        /**
         * <p>The filtering and sorting criteria for the search request. If a query is not specified,
         * Square returns all customer profiles ordered alphabetically by <code>given_name</code> and <code>family_name</code>.</p>
         */
        @JsonSetter(value = "query", nulls = Nulls.SKIP)
        public Builder query(Optional<CustomerQuery> query) {
            this.query = query;
            return this;
        }

        public Builder query(CustomerQuery query) {
            this.query = Optional.ofNullable(query);
            return this;
        }

        /**
         * <p>Indicates whether to return the total count of matching customers in the <code>count</code> field of the response.</p>
         * <p>The default value is <code>false</code>.</p>
         */
        @JsonSetter(value = "count", nulls = Nulls.SKIP)
        public Builder count(Optional<Boolean> count) {
            this.count = count;
            return this;
        }

        public Builder count(Boolean count) {
            this.count = Optional.ofNullable(count);
            return this;
        }

        public SearchCustomersRequest build() {
            return new SearchCustomersRequest(cursor, limit, query, count, additionalProperties);
        }
    }
}
