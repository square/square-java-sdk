/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class DestinationType {
    public static final DestinationType CARD = new DestinationType(Value.CARD, "CARD");

    public static final DestinationType BANK_ACCOUNT = new DestinationType(Value.BANK_ACCOUNT, "BANK_ACCOUNT");

    public static final DestinationType SQUARE_STORED_BALANCE =
            new DestinationType(Value.SQUARE_STORED_BALANCE, "SQUARE_STORED_BALANCE");

    public static final DestinationType SQUARE_BALANCE = new DestinationType(Value.SQUARE_BALANCE, "SQUARE_BALANCE");

    private final Value value;

    private final String string;

    DestinationType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof DestinationType && this.string.equals(((DestinationType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case CARD:
                return visitor.visitCard();
            case BANK_ACCOUNT:
                return visitor.visitBankAccount();
            case SQUARE_STORED_BALANCE:
                return visitor.visitSquareStoredBalance();
            case SQUARE_BALANCE:
                return visitor.visitSquareBalance();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static DestinationType valueOf(String value) {
        switch (value) {
            case "CARD":
                return CARD;
            case "BANK_ACCOUNT":
                return BANK_ACCOUNT;
            case "SQUARE_STORED_BALANCE":
                return SQUARE_STORED_BALANCE;
            case "SQUARE_BALANCE":
                return SQUARE_BALANCE;
            default:
                return new DestinationType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        BANK_ACCOUNT,

        CARD,

        SQUARE_BALANCE,

        SQUARE_STORED_BALANCE,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitBankAccount();

        T visitCard();

        T visitSquareBalance();

        T visitSquareStoredBalance();

        T visitUnknown(String unknownType);
    }
}
