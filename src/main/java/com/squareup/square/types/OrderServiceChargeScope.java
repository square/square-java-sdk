/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class OrderServiceChargeScope {
    public static final OrderServiceChargeScope OTHER_SERVICE_CHARGE_SCOPE =
            new OrderServiceChargeScope(Value.OTHER_SERVICE_CHARGE_SCOPE, "OTHER_SERVICE_CHARGE_SCOPE");

    public static final OrderServiceChargeScope ORDER = new OrderServiceChargeScope(Value.ORDER, "ORDER");

    public static final OrderServiceChargeScope LINE_ITEM = new OrderServiceChargeScope(Value.LINE_ITEM, "LINE_ITEM");

    private final Value value;

    private final String string;

    OrderServiceChargeScope(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof OrderServiceChargeScope
                        && this.string.equals(((OrderServiceChargeScope) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case OTHER_SERVICE_CHARGE_SCOPE:
                return visitor.visitOtherServiceChargeScope();
            case ORDER:
                return visitor.visitOrder();
            case LINE_ITEM:
                return visitor.visitLineItem();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static OrderServiceChargeScope valueOf(String value) {
        switch (value) {
            case "OTHER_SERVICE_CHARGE_SCOPE":
                return OTHER_SERVICE_CHARGE_SCOPE;
            case "ORDER":
                return ORDER;
            case "LINE_ITEM":
                return LINE_ITEM;
            default:
                return new OrderServiceChargeScope(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        OTHER_SERVICE_CHARGE_SCOPE,

        LINE_ITEM,

        ORDER,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitOtherServiceChargeScope();

        T visitLineItem();

        T visitOrder();

        T visitUnknown(String unknownType);
    }
}
