/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class V1OrderState {
    public static final V1OrderState CANCELED = new V1OrderState(Value.CANCELED, "CANCELED");

    public static final V1OrderState REFUNDED = new V1OrderState(Value.REFUNDED, "REFUNDED");

    public static final V1OrderState REJECTED = new V1OrderState(Value.REJECTED, "REJECTED");

    public static final V1OrderState OPEN = new V1OrderState(Value.OPEN, "OPEN");

    public static final V1OrderState COMPLETED = new V1OrderState(Value.COMPLETED, "COMPLETED");

    public static final V1OrderState PENDING = new V1OrderState(Value.PENDING, "PENDING");

    private final Value value;

    private final String string;

    V1OrderState(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other) || (other instanceof V1OrderState && this.string.equals(((V1OrderState) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case CANCELED:
                return visitor.visitCanceled();
            case REFUNDED:
                return visitor.visitRefunded();
            case REJECTED:
                return visitor.visitRejected();
            case OPEN:
                return visitor.visitOpen();
            case COMPLETED:
                return visitor.visitCompleted();
            case PENDING:
                return visitor.visitPending();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static V1OrderState valueOf(String value) {
        switch (value) {
            case "CANCELED":
                return CANCELED;
            case "REFUNDED":
                return REFUNDED;
            case "REJECTED":
                return REJECTED;
            case "OPEN":
                return OPEN;
            case "COMPLETED":
                return COMPLETED;
            case "PENDING":
                return PENDING;
            default:
                return new V1OrderState(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        PENDING,

        OPEN,

        COMPLETED,

        CANCELED,

        REFUNDED,

        REJECTED,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitPending();

        T visitOpen();

        T visitCompleted();

        T visitCanceled();

        T visitRefunded();

        T visitRejected();

        T visitUnknown(String unknownType);
    }
}
