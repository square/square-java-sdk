/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetInventoryRequest.Builder.class)
public final class GetInventoryRequest {
    private final String catalogObjectId;

    private final Optional<String> locationIds;

    private final Optional<String> cursor;

    private final Map<String, Object> additionalProperties;

    private GetInventoryRequest(
            String catalogObjectId,
            Optional<String> locationIds,
            Optional<String> cursor,
            Map<String, Object> additionalProperties) {
        this.catalogObjectId = catalogObjectId;
        this.locationIds = locationIds;
        this.cursor = cursor;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return ID of the <a href="entity:CatalogObject">CatalogObject</a> to retrieve.
     */
    @JsonProperty("catalog_object_id")
    public String getCatalogObjectId() {
        return catalogObjectId;
    }

    /**
     * @return The <a href="entity:Location">Location</a> IDs to look up as a comma-separated
     * list. An empty list queries all locations.
     */
    @JsonIgnore
    public Optional<String> getLocationIds() {
        if (locationIds == null) {
            return Optional.empty();
        }
        return locationIds;
    }

    /**
     * @return A pagination cursor returned by a previous call to this endpoint.
     * Provide this to retrieve the next set of results for the original query.
     * <p>See the <a href="https://developer.squareup.com/docs/working-with-apis/pagination">Pagination</a> guide for more information.</p>
     */
    @JsonIgnore
    public Optional<String> getCursor() {
        if (cursor == null) {
            return Optional.empty();
        }
        return cursor;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("location_ids")
    private Optional<String> _getLocationIds() {
        return locationIds;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("cursor")
    private Optional<String> _getCursor() {
        return cursor;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetInventoryRequest && equalTo((GetInventoryRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetInventoryRequest other) {
        return catalogObjectId.equals(other.catalogObjectId)
                && locationIds.equals(other.locationIds)
                && cursor.equals(other.cursor);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.catalogObjectId, this.locationIds, this.cursor);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CatalogObjectIdStage builder() {
        return new Builder();
    }

    public interface CatalogObjectIdStage {
        /**
         * <p>ID of the <a href="entity:CatalogObject">CatalogObject</a> to retrieve.</p>
         */
        _FinalStage catalogObjectId(@NotNull String catalogObjectId);

        Builder from(GetInventoryRequest other);
    }

    public interface _FinalStage {
        GetInventoryRequest build();

        /**
         * <p>The <a href="entity:Location">Location</a> IDs to look up as a comma-separated
         * list. An empty list queries all locations.</p>
         */
        _FinalStage locationIds(Optional<String> locationIds);

        _FinalStage locationIds(String locationIds);

        _FinalStage locationIds(Nullable<String> locationIds);

        /**
         * <p>A pagination cursor returned by a previous call to this endpoint.
         * Provide this to retrieve the next set of results for the original query.</p>
         * <p>See the <a href="https://developer.squareup.com/docs/working-with-apis/pagination">Pagination</a> guide for more information.</p>
         */
        _FinalStage cursor(Optional<String> cursor);

        _FinalStage cursor(String cursor);

        _FinalStage cursor(Nullable<String> cursor);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CatalogObjectIdStage, _FinalStage {
        private String catalogObjectId;

        private Optional<String> cursor = Optional.empty();

        private Optional<String> locationIds = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetInventoryRequest other) {
            catalogObjectId(other.getCatalogObjectId());
            locationIds(other.getLocationIds());
            cursor(other.getCursor());
            return this;
        }

        /**
         * <p>ID of the <a href="entity:CatalogObject">CatalogObject</a> to retrieve.</p>
         * <p>ID of the <a href="entity:CatalogObject">CatalogObject</a> to retrieve.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("catalog_object_id")
        public _FinalStage catalogObjectId(@NotNull String catalogObjectId) {
            this.catalogObjectId = Objects.requireNonNull(catalogObjectId, "catalogObjectId must not be null");
            return this;
        }

        /**
         * <p>A pagination cursor returned by a previous call to this endpoint.
         * Provide this to retrieve the next set of results for the original query.</p>
         * <p>See the <a href="https://developer.squareup.com/docs/working-with-apis/pagination">Pagination</a> guide for more information.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage cursor(Nullable<String> cursor) {
            if (cursor.isNull()) {
                this.cursor = null;
            } else if (cursor.isEmpty()) {
                this.cursor = Optional.empty();
            } else {
                this.cursor = Optional.of(cursor.get());
            }
            return this;
        }

        /**
         * <p>A pagination cursor returned by a previous call to this endpoint.
         * Provide this to retrieve the next set of results for the original query.</p>
         * <p>See the <a href="https://developer.squareup.com/docs/working-with-apis/pagination">Pagination</a> guide for more information.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage cursor(String cursor) {
            this.cursor = Optional.ofNullable(cursor);
            return this;
        }

        /**
         * <p>A pagination cursor returned by a previous call to this endpoint.
         * Provide this to retrieve the next set of results for the original query.</p>
         * <p>See the <a href="https://developer.squareup.com/docs/working-with-apis/pagination">Pagination</a> guide for more information.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "cursor", nulls = Nulls.SKIP)
        public _FinalStage cursor(Optional<String> cursor) {
            this.cursor = cursor;
            return this;
        }

        /**
         * <p>The <a href="entity:Location">Location</a> IDs to look up as a comma-separated
         * list. An empty list queries all locations.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage locationIds(Nullable<String> locationIds) {
            if (locationIds.isNull()) {
                this.locationIds = null;
            } else if (locationIds.isEmpty()) {
                this.locationIds = Optional.empty();
            } else {
                this.locationIds = Optional.of(locationIds.get());
            }
            return this;
        }

        /**
         * <p>The <a href="entity:Location">Location</a> IDs to look up as a comma-separated
         * list. An empty list queries all locations.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage locationIds(String locationIds) {
            this.locationIds = Optional.ofNullable(locationIds);
            return this;
        }

        /**
         * <p>The <a href="entity:Location">Location</a> IDs to look up as a comma-separated
         * list. An empty list queries all locations.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "location_ids", nulls = Nulls.SKIP)
        public _FinalStage locationIds(Optional<String> locationIds) {
            this.locationIds = locationIds;
            return this;
        }

        @java.lang.Override
        public GetInventoryRequest build() {
            return new GetInventoryRequest(catalogObjectId, locationIds, cursor, additionalProperties);
        }
    }
}
