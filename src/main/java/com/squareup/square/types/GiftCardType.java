/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class GiftCardType {
    public static final GiftCardType PHYSICAL = new GiftCardType(Value.PHYSICAL, "PHYSICAL");

    public static final GiftCardType DIGITAL = new GiftCardType(Value.DIGITAL, "DIGITAL");

    private final Value value;

    private final String string;

    GiftCardType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other) || (other instanceof GiftCardType && this.string.equals(((GiftCardType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case PHYSICAL:
                return visitor.visitPhysical();
            case DIGITAL:
                return visitor.visitDigital();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static GiftCardType valueOf(String value) {
        switch (value) {
            case "PHYSICAL":
                return PHYSICAL;
            case "DIGITAL":
                return DIGITAL;
            default:
                return new GiftCardType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        PHYSICAL,

        DIGITAL,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitPhysical();

        T visitDigital();

        T visitUnknown(String unknownType);
    }
}
