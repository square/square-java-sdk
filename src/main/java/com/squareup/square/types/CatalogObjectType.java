/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class CatalogObjectType {
    public static final CatalogObjectType AVAILABILITY_PERIOD =
            new CatalogObjectType(Value.AVAILABILITY_PERIOD, "AVAILABILITY_PERIOD");

    public static final CatalogObjectType TIME_PERIOD = new CatalogObjectType(Value.TIME_PERIOD, "TIME_PERIOD");

    public static final CatalogObjectType SUBSCRIPTION_PLAN_VARIATION =
            new CatalogObjectType(Value.SUBSCRIPTION_PLAN_VARIATION, "SUBSCRIPTION_PLAN_VARIATION");

    public static final CatalogObjectType CATEGORY = new CatalogObjectType(Value.CATEGORY, "CATEGORY");

    public static final CatalogObjectType ITEM = new CatalogObjectType(Value.ITEM, "ITEM");

    public static final CatalogObjectType MEASUREMENT_UNIT =
            new CatalogObjectType(Value.MEASUREMENT_UNIT, "MEASUREMENT_UNIT");

    public static final CatalogObjectType DISCOUNT = new CatalogObjectType(Value.DISCOUNT, "DISCOUNT");

    public static final CatalogObjectType ITEM_VARIATION =
            new CatalogObjectType(Value.ITEM_VARIATION, "ITEM_VARIATION");

    public static final CatalogObjectType MODIFIER = new CatalogObjectType(Value.MODIFIER, "MODIFIER");

    public static final CatalogObjectType ITEM_OPTION_VAL =
            new CatalogObjectType(Value.ITEM_OPTION_VAL, "ITEM_OPTION_VAL");

    public static final CatalogObjectType SUBSCRIPTION_PLAN =
            new CatalogObjectType(Value.SUBSCRIPTION_PLAN, "SUBSCRIPTION_PLAN");

    public static final CatalogObjectType ITEM_OPTION = new CatalogObjectType(Value.ITEM_OPTION, "ITEM_OPTION");

    public static final CatalogObjectType CUSTOM_ATTRIBUTE_DEFINITION =
            new CatalogObjectType(Value.CUSTOM_ATTRIBUTE_DEFINITION, "CUSTOM_ATTRIBUTE_DEFINITION");

    public static final CatalogObjectType MODIFIER_LIST = new CatalogObjectType(Value.MODIFIER_LIST, "MODIFIER_LIST");

    public static final CatalogObjectType TAX = new CatalogObjectType(Value.TAX, "TAX");

    public static final CatalogObjectType QUICK_AMOUNTS_SETTINGS =
            new CatalogObjectType(Value.QUICK_AMOUNTS_SETTINGS, "QUICK_AMOUNTS_SETTINGS");

    public static final CatalogObjectType IMAGE = new CatalogObjectType(Value.IMAGE, "IMAGE");

    public static final CatalogObjectType PRICING_RULE = new CatalogObjectType(Value.PRICING_RULE, "PRICING_RULE");

    public static final CatalogObjectType PRODUCT_SET = new CatalogObjectType(Value.PRODUCT_SET, "PRODUCT_SET");

    private final Value value;

    private final String string;

    CatalogObjectType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof CatalogObjectType && this.string.equals(((CatalogObjectType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case AVAILABILITY_PERIOD:
                return visitor.visitAvailabilityPeriod();
            case TIME_PERIOD:
                return visitor.visitTimePeriod();
            case SUBSCRIPTION_PLAN_VARIATION:
                return visitor.visitSubscriptionPlanVariation();
            case CATEGORY:
                return visitor.visitCategory();
            case ITEM:
                return visitor.visitItem();
            case MEASUREMENT_UNIT:
                return visitor.visitMeasurementUnit();
            case DISCOUNT:
                return visitor.visitDiscount();
            case ITEM_VARIATION:
                return visitor.visitItemVariation();
            case MODIFIER:
                return visitor.visitModifier();
            case ITEM_OPTION_VAL:
                return visitor.visitItemOptionVal();
            case SUBSCRIPTION_PLAN:
                return visitor.visitSubscriptionPlan();
            case ITEM_OPTION:
                return visitor.visitItemOption();
            case CUSTOM_ATTRIBUTE_DEFINITION:
                return visitor.visitCustomAttributeDefinition();
            case MODIFIER_LIST:
                return visitor.visitModifierList();
            case TAX:
                return visitor.visitTax();
            case QUICK_AMOUNTS_SETTINGS:
                return visitor.visitQuickAmountsSettings();
            case IMAGE:
                return visitor.visitImage();
            case PRICING_RULE:
                return visitor.visitPricingRule();
            case PRODUCT_SET:
                return visitor.visitProductSet();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static CatalogObjectType valueOf(String value) {
        switch (value) {
            case "AVAILABILITY_PERIOD":
                return AVAILABILITY_PERIOD;
            case "TIME_PERIOD":
                return TIME_PERIOD;
            case "SUBSCRIPTION_PLAN_VARIATION":
                return SUBSCRIPTION_PLAN_VARIATION;
            case "CATEGORY":
                return CATEGORY;
            case "ITEM":
                return ITEM;
            case "MEASUREMENT_UNIT":
                return MEASUREMENT_UNIT;
            case "DISCOUNT":
                return DISCOUNT;
            case "ITEM_VARIATION":
                return ITEM_VARIATION;
            case "MODIFIER":
                return MODIFIER;
            case "ITEM_OPTION_VAL":
                return ITEM_OPTION_VAL;
            case "SUBSCRIPTION_PLAN":
                return SUBSCRIPTION_PLAN;
            case "ITEM_OPTION":
                return ITEM_OPTION;
            case "CUSTOM_ATTRIBUTE_DEFINITION":
                return CUSTOM_ATTRIBUTE_DEFINITION;
            case "MODIFIER_LIST":
                return MODIFIER_LIST;
            case "TAX":
                return TAX;
            case "QUICK_AMOUNTS_SETTINGS":
                return QUICK_AMOUNTS_SETTINGS;
            case "IMAGE":
                return IMAGE;
            case "PRICING_RULE":
                return PRICING_RULE;
            case "PRODUCT_SET":
                return PRODUCT_SET;
            default:
                return new CatalogObjectType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ITEM,

        IMAGE,

        CATEGORY,

        ITEM_VARIATION,

        TAX,

        DISCOUNT,

        MODIFIER_LIST,

        MODIFIER,

        PRICING_RULE,

        PRODUCT_SET,

        TIME_PERIOD,

        MEASUREMENT_UNIT,

        SUBSCRIPTION_PLAN_VARIATION,

        ITEM_OPTION,

        ITEM_OPTION_VAL,

        CUSTOM_ATTRIBUTE_DEFINITION,

        QUICK_AMOUNTS_SETTINGS,

        SUBSCRIPTION_PLAN,

        AVAILABILITY_PERIOD,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitItem();

        T visitImage();

        T visitCategory();

        T visitItemVariation();

        T visitTax();

        T visitDiscount();

        T visitModifierList();

        T visitModifier();

        T visitPricingRule();

        T visitProductSet();

        T visitTimePeriod();

        T visitMeasurementUnit();

        T visitSubscriptionPlanVariation();

        T visitItemOption();

        T visitItemOptionVal();

        T visitCustomAttributeDefinition();

        T visitQuickAmountsSettings();

        T visitSubscriptionPlan();

        T visitAvailabilityPeriod();

        T visitUnknown(String unknownType);
    }
}
