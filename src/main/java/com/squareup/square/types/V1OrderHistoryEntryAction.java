/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class V1OrderHistoryEntryAction {
    public static final V1OrderHistoryEntryAction CANCELED = new V1OrderHistoryEntryAction(Value.CANCELED, "CANCELED");

    public static final V1OrderHistoryEntryAction EXPIRED = new V1OrderHistoryEntryAction(Value.EXPIRED, "EXPIRED");

    public static final V1OrderHistoryEntryAction REFUNDED = new V1OrderHistoryEntryAction(Value.REFUNDED, "REFUNDED");

    public static final V1OrderHistoryEntryAction ORDER_PLACED =
            new V1OrderHistoryEntryAction(Value.ORDER_PLACED, "ORDER_PLACED");

    public static final V1OrderHistoryEntryAction DECLINED = new V1OrderHistoryEntryAction(Value.DECLINED, "DECLINED");

    public static final V1OrderHistoryEntryAction PAYMENT_RECEIVED =
            new V1OrderHistoryEntryAction(Value.PAYMENT_RECEIVED, "PAYMENT_RECEIVED");

    public static final V1OrderHistoryEntryAction COMPLETED =
            new V1OrderHistoryEntryAction(Value.COMPLETED, "COMPLETED");

    private final Value value;

    private final String string;

    V1OrderHistoryEntryAction(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof V1OrderHistoryEntryAction
                        && this.string.equals(((V1OrderHistoryEntryAction) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case CANCELED:
                return visitor.visitCanceled();
            case EXPIRED:
                return visitor.visitExpired();
            case REFUNDED:
                return visitor.visitRefunded();
            case ORDER_PLACED:
                return visitor.visitOrderPlaced();
            case DECLINED:
                return visitor.visitDeclined();
            case PAYMENT_RECEIVED:
                return visitor.visitPaymentReceived();
            case COMPLETED:
                return visitor.visitCompleted();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static V1OrderHistoryEntryAction valueOf(String value) {
        switch (value) {
            case "CANCELED":
                return CANCELED;
            case "EXPIRED":
                return EXPIRED;
            case "REFUNDED":
                return REFUNDED;
            case "ORDER_PLACED":
                return ORDER_PLACED;
            case "DECLINED":
                return DECLINED;
            case "PAYMENT_RECEIVED":
                return PAYMENT_RECEIVED;
            case "COMPLETED":
                return COMPLETED;
            default:
                return new V1OrderHistoryEntryAction(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ORDER_PLACED,

        DECLINED,

        PAYMENT_RECEIVED,

        CANCELED,

        COMPLETED,

        REFUNDED,

        EXPIRED,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitOrderPlaced();

        T visitDeclined();

        T visitPaymentReceived();

        T visitCanceled();

        T visitCompleted();

        T visitRefunded();

        T visitExpired();

        T visitUnknown(String unknownType);
    }
}
