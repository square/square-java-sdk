/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class InvoiceRequestType {
    public static final InvoiceRequestType INSTALLMENT = new InvoiceRequestType(Value.INSTALLMENT, "INSTALLMENT");

    public static final InvoiceRequestType DEPOSIT = new InvoiceRequestType(Value.DEPOSIT, "DEPOSIT");

    public static final InvoiceRequestType BALANCE = new InvoiceRequestType(Value.BALANCE, "BALANCE");

    private final Value value;

    private final String string;

    InvoiceRequestType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof InvoiceRequestType && this.string.equals(((InvoiceRequestType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case INSTALLMENT:
                return visitor.visitInstallment();
            case DEPOSIT:
                return visitor.visitDeposit();
            case BALANCE:
                return visitor.visitBalance();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static InvoiceRequestType valueOf(String value) {
        switch (value) {
            case "INSTALLMENT":
                return INSTALLMENT;
            case "DEPOSIT":
                return DEPOSIT;
            case "BALANCE":
                return BALANCE;
            default:
                return new InvoiceRequestType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        BALANCE,

        DEPOSIT,

        INSTALLMENT,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitBalance();

        T visitDeposit();

        T visitInstallment();

        T visitUnknown(String unknownType);
    }
}
