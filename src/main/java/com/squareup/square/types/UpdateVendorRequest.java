/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateVendorRequest.Builder.class)
public final class UpdateVendorRequest {
    private final Optional<String> idempotencyKey;

    private final Vendor vendor;

    private final Map<String, Object> additionalProperties;

    private UpdateVendorRequest(
            Optional<String> idempotencyKey, Vendor vendor, Map<String, Object> additionalProperties) {
        this.idempotencyKey = idempotencyKey;
        this.vendor = vendor;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A client-supplied, universally unique identifier (UUID) for the
     * request.
     * <p>See <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a> in the
     * <a href="https://developer.squareup.com/docs/buildbasics">API Development 101</a> section for more
     * information.</p>
     */
    @JsonIgnore
    public Optional<String> getIdempotencyKey() {
        if (idempotencyKey == null) {
            return Optional.empty();
        }
        return idempotencyKey;
    }

    /**
     * @return The specified <a href="entity:Vendor">Vendor</a> to be updated.
     */
    @JsonProperty("vendor")
    public Vendor getVendor() {
        return vendor;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("idempotency_key")
    private Optional<String> _getIdempotencyKey() {
        return idempotencyKey;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateVendorRequest && equalTo((UpdateVendorRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateVendorRequest other) {
        return idempotencyKey.equals(other.idempotencyKey) && vendor.equals(other.vendor);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.idempotencyKey, this.vendor);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static VendorStage builder() {
        return new Builder();
    }

    public interface VendorStage {
        _FinalStage vendor(@NotNull Vendor vendor);

        Builder from(UpdateVendorRequest other);
    }

    public interface _FinalStage {
        UpdateVendorRequest build();

        _FinalStage idempotencyKey(Optional<String> idempotencyKey);

        _FinalStage idempotencyKey(String idempotencyKey);

        _FinalStage idempotencyKey(Nullable<String> idempotencyKey);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements VendorStage, _FinalStage {
        private Vendor vendor;

        private Optional<String> idempotencyKey = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UpdateVendorRequest other) {
            idempotencyKey(other.getIdempotencyKey());
            vendor(other.getVendor());
            return this;
        }

        /**
         * <p>The specified <a href="entity:Vendor">Vendor</a> to be updated.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("vendor")
        public _FinalStage vendor(@NotNull Vendor vendor) {
            this.vendor = Objects.requireNonNull(vendor, "vendor must not be null");
            return this;
        }

        /**
         * <p>A client-supplied, universally unique identifier (UUID) for the
         * request.</p>
         * <p>See <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a> in the
         * <a href="https://developer.squareup.com/docs/buildbasics">API Development 101</a> section for more
         * information.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage idempotencyKey(Nullable<String> idempotencyKey) {
            if (idempotencyKey.isNull()) {
                this.idempotencyKey = null;
            } else if (idempotencyKey.isEmpty()) {
                this.idempotencyKey = Optional.empty();
            } else {
                this.idempotencyKey = Optional.of(idempotencyKey.get());
            }
            return this;
        }

        /**
         * <p>A client-supplied, universally unique identifier (UUID) for the
         * request.</p>
         * <p>See <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a> in the
         * <a href="https://developer.squareup.com/docs/buildbasics">API Development 101</a> section for more
         * information.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage idempotencyKey(String idempotencyKey) {
            this.idempotencyKey = Optional.ofNullable(idempotencyKey);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "idempotency_key", nulls = Nulls.SKIP)
        public _FinalStage idempotencyKey(Optional<String> idempotencyKey) {
            this.idempotencyKey = idempotencyKey;
            return this;
        }

        @java.lang.Override
        public UpdateVendorRequest build() {
            return new UpdateVendorRequest(idempotencyKey, vendor, additionalProperties);
        }
    }
}
