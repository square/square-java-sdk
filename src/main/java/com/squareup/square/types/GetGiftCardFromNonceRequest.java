/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetGiftCardFromNonceRequest.Builder.class)
public final class GetGiftCardFromNonceRequest {
    private final String nonce;

    private final Map<String, Object> additionalProperties;

    private GetGiftCardFromNonceRequest(String nonce, Map<String, Object> additionalProperties) {
        this.nonce = nonce;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The payment token of the gift card to retrieve. Payment tokens are generated by the
     * Web Payments SDK or In-App Payments SDK.
     */
    @JsonProperty("nonce")
    public String getNonce() {
        return nonce;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetGiftCardFromNonceRequest && equalTo((GetGiftCardFromNonceRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetGiftCardFromNonceRequest other) {
        return nonce.equals(other.nonce);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.nonce);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NonceStage builder() {
        return new Builder();
    }

    public interface NonceStage {
        /**
         * <p>The payment token of the gift card to retrieve. Payment tokens are generated by the
         * Web Payments SDK or In-App Payments SDK.</p>
         */
        _FinalStage nonce(@NotNull String nonce);

        Builder from(GetGiftCardFromNonceRequest other);
    }

    public interface _FinalStage {
        GetGiftCardFromNonceRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NonceStage, _FinalStage {
        private String nonce;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetGiftCardFromNonceRequest other) {
            nonce(other.getNonce());
            return this;
        }

        /**
         * <p>The payment token of the gift card to retrieve. Payment tokens are generated by the
         * Web Payments SDK or In-App Payments SDK.</p>
         * <p>The payment token of the gift card to retrieve. Payment tokens are generated by the
         * Web Payments SDK or In-App Payments SDK.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("nonce")
        public _FinalStage nonce(@NotNull String nonce) {
            this.nonce = Objects.requireNonNull(nonce, "nonce must not be null");
            return this;
        }

        @java.lang.Override
        public GetGiftCardFromNonceRequest build() {
            return new GetGiftCardFromNonceRequest(nonce, additionalProperties);
        }
    }
}
