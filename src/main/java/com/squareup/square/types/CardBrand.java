/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class CardBrand {
    public static final CardBrand CHINA_UNIONPAY = new CardBrand(Value.CHINA_UNIONPAY, "CHINA_UNIONPAY");

    public static final CardBrand INTERAC = new CardBrand(Value.INTERAC, "INTERAC");

    public static final CardBrand EFTPOS = new CardBrand(Value.EFTPOS, "EFTPOS");

    public static final CardBrand FELICA = new CardBrand(Value.FELICA, "FELICA");

    public static final CardBrand SQUARE_CAPITAL_CARD = new CardBrand(Value.SQUARE_CAPITAL_CARD, "SQUARE_CAPITAL_CARD");

    public static final CardBrand DISCOVER = new CardBrand(Value.DISCOVER, "DISCOVER");

    public static final CardBrand EBT = new CardBrand(Value.EBT, "EBT");

    public static final CardBrand AMERICAN_EXPRESS = new CardBrand(Value.AMERICAN_EXPRESS, "AMERICAN_EXPRESS");

    public static final CardBrand JCB = new CardBrand(Value.JCB, "JCB");

    public static final CardBrand VISA = new CardBrand(Value.VISA, "VISA");

    public static final CardBrand OTHER_BRAND = new CardBrand(Value.OTHER_BRAND, "OTHER_BRAND");

    public static final CardBrand DISCOVER_DINERS = new CardBrand(Value.DISCOVER_DINERS, "DISCOVER_DINERS");

    public static final CardBrand MASTERCARD = new CardBrand(Value.MASTERCARD, "MASTERCARD");

    public static final CardBrand SQUARE_GIFT_CARD = new CardBrand(Value.SQUARE_GIFT_CARD, "SQUARE_GIFT_CARD");

    private final Value value;

    private final String string;

    CardBrand(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other) || (other instanceof CardBrand && this.string.equals(((CardBrand) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case CHINA_UNIONPAY:
                return visitor.visitChinaUnionpay();
            case INTERAC:
                return visitor.visitInterac();
            case EFTPOS:
                return visitor.visitEftpos();
            case FELICA:
                return visitor.visitFelica();
            case SQUARE_CAPITAL_CARD:
                return visitor.visitSquareCapitalCard();
            case DISCOVER:
                return visitor.visitDiscover();
            case EBT:
                return visitor.visitEbt();
            case AMERICAN_EXPRESS:
                return visitor.visitAmericanExpress();
            case JCB:
                return visitor.visitJcb();
            case VISA:
                return visitor.visitVisa();
            case OTHER_BRAND:
                return visitor.visitOtherBrand();
            case DISCOVER_DINERS:
                return visitor.visitDiscoverDiners();
            case MASTERCARD:
                return visitor.visitMastercard();
            case SQUARE_GIFT_CARD:
                return visitor.visitSquareGiftCard();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static CardBrand valueOf(String value) {
        switch (value) {
            case "CHINA_UNIONPAY":
                return CHINA_UNIONPAY;
            case "INTERAC":
                return INTERAC;
            case "EFTPOS":
                return EFTPOS;
            case "FELICA":
                return FELICA;
            case "SQUARE_CAPITAL_CARD":
                return SQUARE_CAPITAL_CARD;
            case "DISCOVER":
                return DISCOVER;
            case "EBT":
                return EBT;
            case "AMERICAN_EXPRESS":
                return AMERICAN_EXPRESS;
            case "JCB":
                return JCB;
            case "VISA":
                return VISA;
            case "OTHER_BRAND":
                return OTHER_BRAND;
            case "DISCOVER_DINERS":
                return DISCOVER_DINERS;
            case "MASTERCARD":
                return MASTERCARD;
            case "SQUARE_GIFT_CARD":
                return SQUARE_GIFT_CARD;
            default:
                return new CardBrand(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        OTHER_BRAND,

        VISA,

        MASTERCARD,

        AMERICAN_EXPRESS,

        DISCOVER,

        DISCOVER_DINERS,

        JCB,

        CHINA_UNIONPAY,

        SQUARE_GIFT_CARD,

        SQUARE_CAPITAL_CARD,

        INTERAC,

        EFTPOS,

        FELICA,

        EBT,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitOtherBrand();

        T visitVisa();

        T visitMastercard();

        T visitAmericanExpress();

        T visitDiscover();

        T visitDiscoverDiners();

        T visitJcb();

        T visitChinaUnionpay();

        T visitSquareGiftCard();

        T visitSquareCapitalCard();

        T visitInterac();

        T visitEftpos();

        T visitFelica();

        T visitEbt();

        T visitUnknown(String unknownType);
    }
}
