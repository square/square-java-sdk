/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class SubscriptionEventInfoCode {
    public static final SubscriptionEventInfoCode LOCATION_CANNOT_ACCEPT_PAYMENT =
            new SubscriptionEventInfoCode(Value.LOCATION_CANNOT_ACCEPT_PAYMENT, "LOCATION_CANNOT_ACCEPT_PAYMENT");

    public static final SubscriptionEventInfoCode USER_PROVIDED =
            new SubscriptionEventInfoCode(Value.USER_PROVIDED, "USER_PROVIDED");

    public static final SubscriptionEventInfoCode CUSTOMER_DELETED =
            new SubscriptionEventInfoCode(Value.CUSTOMER_DELETED, "CUSTOMER_DELETED");

    public static final SubscriptionEventInfoCode LOCATION_NOT_ACTIVE =
            new SubscriptionEventInfoCode(Value.LOCATION_NOT_ACTIVE, "LOCATION_NOT_ACTIVE");

    public static final SubscriptionEventInfoCode CUSTOMER_NO_NAME =
            new SubscriptionEventInfoCode(Value.CUSTOMER_NO_NAME, "CUSTOMER_NO_NAME");

    public static final SubscriptionEventInfoCode CUSTOMER_NO_EMAIL =
            new SubscriptionEventInfoCode(Value.CUSTOMER_NO_EMAIL, "CUSTOMER_NO_EMAIL");

    private final Value value;

    private final String string;

    SubscriptionEventInfoCode(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof SubscriptionEventInfoCode
                        && this.string.equals(((SubscriptionEventInfoCode) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case LOCATION_CANNOT_ACCEPT_PAYMENT:
                return visitor.visitLocationCannotAcceptPayment();
            case USER_PROVIDED:
                return visitor.visitUserProvided();
            case CUSTOMER_DELETED:
                return visitor.visitCustomerDeleted();
            case LOCATION_NOT_ACTIVE:
                return visitor.visitLocationNotActive();
            case CUSTOMER_NO_NAME:
                return visitor.visitCustomerNoName();
            case CUSTOMER_NO_EMAIL:
                return visitor.visitCustomerNoEmail();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static SubscriptionEventInfoCode valueOf(String value) {
        switch (value) {
            case "LOCATION_CANNOT_ACCEPT_PAYMENT":
                return LOCATION_CANNOT_ACCEPT_PAYMENT;
            case "USER_PROVIDED":
                return USER_PROVIDED;
            case "CUSTOMER_DELETED":
                return CUSTOMER_DELETED;
            case "LOCATION_NOT_ACTIVE":
                return LOCATION_NOT_ACTIVE;
            case "CUSTOMER_NO_NAME":
                return CUSTOMER_NO_NAME;
            case "CUSTOMER_NO_EMAIL":
                return CUSTOMER_NO_EMAIL;
            default:
                return new SubscriptionEventInfoCode(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        LOCATION_NOT_ACTIVE,

        LOCATION_CANNOT_ACCEPT_PAYMENT,

        CUSTOMER_DELETED,

        CUSTOMER_NO_EMAIL,

        CUSTOMER_NO_NAME,

        USER_PROVIDED,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitLocationNotActive();

        T visitLocationCannotAcceptPayment();

        T visitCustomerDeleted();

        T visitCustomerNoEmail();

        T visitCustomerNoName();

        T visitUserProvided();

        T visitUnknown(String unknownType);
    }
}
