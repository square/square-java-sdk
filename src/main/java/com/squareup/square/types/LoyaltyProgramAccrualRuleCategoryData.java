/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = LoyaltyProgramAccrualRuleCategoryData.Builder.class)
public final class LoyaltyProgramAccrualRuleCategoryData {
    private final String categoryId;

    private final Map<String, Object> additionalProperties;

    private LoyaltyProgramAccrualRuleCategoryData(String categoryId, Map<String, Object> additionalProperties) {
        this.categoryId = categoryId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the <code>CATEGORY</code> <a href="entity:CatalogObject">catalog object</a> that buyers can purchase to earn
     * points.
     */
    @JsonProperty("category_id")
    public String getCategoryId() {
        return categoryId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LoyaltyProgramAccrualRuleCategoryData
                && equalTo((LoyaltyProgramAccrualRuleCategoryData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LoyaltyProgramAccrualRuleCategoryData other) {
        return categoryId.equals(other.categoryId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.categoryId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CategoryIdStage builder() {
        return new Builder();
    }

    public interface CategoryIdStage {
        _FinalStage categoryId(@NotNull String categoryId);

        Builder from(LoyaltyProgramAccrualRuleCategoryData other);
    }

    public interface _FinalStage {
        LoyaltyProgramAccrualRuleCategoryData build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CategoryIdStage, _FinalStage {
        private String categoryId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LoyaltyProgramAccrualRuleCategoryData other) {
            categoryId(other.getCategoryId());
            return this;
        }

        /**
         * <p>The ID of the <code>CATEGORY</code> <a href="entity:CatalogObject">catalog object</a> that buyers can purchase to earn
         * points.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("category_id")
        public _FinalStage categoryId(@NotNull String categoryId) {
            this.categoryId = Objects.requireNonNull(categoryId, "categoryId must not be null");
            return this;
        }

        @java.lang.Override
        public LoyaltyProgramAccrualRuleCategoryData build() {
            return new LoyaltyProgramAccrualRuleCategoryData(categoryId, additionalProperties);
        }
    }
}
