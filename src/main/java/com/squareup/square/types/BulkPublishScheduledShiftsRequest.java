/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BulkPublishScheduledShiftsRequest.Builder.class)
public final class BulkPublishScheduledShiftsRequest {
    private final Map<String, BulkPublishScheduledShiftsData> scheduledShifts;

    private final Optional<ScheduledShiftNotificationAudience> scheduledShiftNotificationAudience;

    private final Map<String, Object> additionalProperties;

    private BulkPublishScheduledShiftsRequest(
            Map<String, BulkPublishScheduledShiftsData> scheduledShifts,
            Optional<ScheduledShiftNotificationAudience> scheduledShiftNotificationAudience,
            Map<String, Object> additionalProperties) {
        this.scheduledShifts = scheduledShifts;
        this.scheduledShiftNotificationAudience = scheduledShiftNotificationAudience;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A map of 1 to 100 key-value pairs that represent individual publish requests.
     * <ul>
     * <li>Each key is the ID of a scheduled shift you want to publish.</li>
     * <li>Each value is a <code>BulkPublishScheduledShiftsData</code> object that contains the
     * <code>version</code> field or is an empty object.</li>
     * </ul>
     */
    @JsonProperty("scheduled_shifts")
    public Map<String, BulkPublishScheduledShiftsData> getScheduledShifts() {
        return scheduledShifts;
    }

    /**
     * @return Indicates whether Square should send email notifications to team members and
     * which team members should receive the notifications. This setting applies to all shifts
     * specified in the bulk operation. The default value is <code>AFFECTED</code>.
     * See <a href="#type-scheduledshiftnotificationaudience">ScheduledShiftNotificationAudience</a> for possible values
     */
    @JsonProperty("scheduled_shift_notification_audience")
    public Optional<ScheduledShiftNotificationAudience> getScheduledShiftNotificationAudience() {
        return scheduledShiftNotificationAudience;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkPublishScheduledShiftsRequest && equalTo((BulkPublishScheduledShiftsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkPublishScheduledShiftsRequest other) {
        return scheduledShifts.equals(other.scheduledShifts)
                && scheduledShiftNotificationAudience.equals(other.scheduledShiftNotificationAudience);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.scheduledShifts, this.scheduledShiftNotificationAudience);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Map<String, BulkPublishScheduledShiftsData> scheduledShifts = new LinkedHashMap<>();

        private Optional<ScheduledShiftNotificationAudience> scheduledShiftNotificationAudience = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BulkPublishScheduledShiftsRequest other) {
            scheduledShifts(other.getScheduledShifts());
            scheduledShiftNotificationAudience(other.getScheduledShiftNotificationAudience());
            return this;
        }

        @JsonSetter(value = "scheduled_shifts", nulls = Nulls.SKIP)
        public Builder scheduledShifts(Map<String, BulkPublishScheduledShiftsData> scheduledShifts) {
            this.scheduledShifts.clear();
            this.scheduledShifts.putAll(scheduledShifts);
            return this;
        }

        public Builder putAllScheduledShifts(Map<String, BulkPublishScheduledShiftsData> scheduledShifts) {
            this.scheduledShifts.putAll(scheduledShifts);
            return this;
        }

        public Builder scheduledShifts(String key, BulkPublishScheduledShiftsData value) {
            this.scheduledShifts.put(key, value);
            return this;
        }

        @JsonSetter(value = "scheduled_shift_notification_audience", nulls = Nulls.SKIP)
        public Builder scheduledShiftNotificationAudience(
                Optional<ScheduledShiftNotificationAudience> scheduledShiftNotificationAudience) {
            this.scheduledShiftNotificationAudience = scheduledShiftNotificationAudience;
            return this;
        }

        public Builder scheduledShiftNotificationAudience(
                ScheduledShiftNotificationAudience scheduledShiftNotificationAudience) {
            this.scheduledShiftNotificationAudience = Optional.ofNullable(scheduledShiftNotificationAudience);
            return this;
        }

        public BulkPublishScheduledShiftsRequest build() {
            return new BulkPublishScheduledShiftsRequest(
                    scheduledShifts, scheduledShiftNotificationAudience, additionalProperties);
        }
    }
}
