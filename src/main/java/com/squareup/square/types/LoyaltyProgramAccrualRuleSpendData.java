/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = LoyaltyProgramAccrualRuleSpendData.Builder.class)
public final class LoyaltyProgramAccrualRuleSpendData {
    private final Money amountMoney;

    private final Optional<List<String>> excludedCategoryIds;

    private final Optional<List<String>> excludedItemVariationIds;

    private final LoyaltyProgramAccrualRuleTaxMode taxMode;

    private final Map<String, Object> additionalProperties;

    private LoyaltyProgramAccrualRuleSpendData(
            Money amountMoney,
            Optional<List<String>> excludedCategoryIds,
            Optional<List<String>> excludedItemVariationIds,
            LoyaltyProgramAccrualRuleTaxMode taxMode,
            Map<String, Object> additionalProperties) {
        this.amountMoney = amountMoney;
        this.excludedCategoryIds = excludedCategoryIds;
        this.excludedItemVariationIds = excludedItemVariationIds;
        this.taxMode = taxMode;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The amount that buyers must spend to earn points.
     * For example, given an &quot;Earn 1 point for every $10 spent&quot; accrual rule, a buyer who spends $105 earns 10 points.
     */
    @JsonProperty("amount_money")
    public Money getAmountMoney() {
        return amountMoney;
    }

    /**
     * @return The IDs of any <code>CATEGORY</code> catalog objects that are excluded from points accrual.
     * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
     * endpoint to retrieve information about the excluded categories.</p>
     */
    @JsonIgnore
    public Optional<List<String>> getExcludedCategoryIds() {
        if (excludedCategoryIds == null) {
            return Optional.empty();
        }
        return excludedCategoryIds;
    }

    /**
     * @return The IDs of any <code>ITEM_VARIATION</code> catalog objects that are excluded from points accrual.
     * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
     * endpoint to retrieve information about the excluded item variations.</p>
     */
    @JsonIgnore
    public Optional<List<String>> getExcludedItemVariationIds() {
        if (excludedItemVariationIds == null) {
            return Optional.empty();
        }
        return excludedItemVariationIds;
    }

    /**
     * @return Indicates how taxes should be treated when calculating the purchase amount used for points accrual.
     * See <a href="#type-loyaltyprogramaccrualruletaxmode">LoyaltyProgramAccrualRuleTaxMode</a> for possible values
     */
    @JsonProperty("tax_mode")
    public LoyaltyProgramAccrualRuleTaxMode getTaxMode() {
        return taxMode;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("excluded_category_ids")
    private Optional<List<String>> _getExcludedCategoryIds() {
        return excludedCategoryIds;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("excluded_item_variation_ids")
    private Optional<List<String>> _getExcludedItemVariationIds() {
        return excludedItemVariationIds;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LoyaltyProgramAccrualRuleSpendData
                && equalTo((LoyaltyProgramAccrualRuleSpendData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LoyaltyProgramAccrualRuleSpendData other) {
        return amountMoney.equals(other.amountMoney)
                && excludedCategoryIds.equals(other.excludedCategoryIds)
                && excludedItemVariationIds.equals(other.excludedItemVariationIds)
                && taxMode.equals(other.taxMode);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.amountMoney, this.excludedCategoryIds, this.excludedItemVariationIds, this.taxMode);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AmountMoneyStage builder() {
        return new Builder();
    }

    public interface AmountMoneyStage {
        /**
         * <p>The amount that buyers must spend to earn points.
         * For example, given an &quot;Earn 1 point for every $10 spent&quot; accrual rule, a buyer who spends $105 earns 10 points.</p>
         */
        TaxModeStage amountMoney(@NotNull Money amountMoney);

        Builder from(LoyaltyProgramAccrualRuleSpendData other);
    }

    public interface TaxModeStage {
        /**
         * <p>Indicates how taxes should be treated when calculating the purchase amount used for points accrual.
         * See <a href="#type-loyaltyprogramaccrualruletaxmode">LoyaltyProgramAccrualRuleTaxMode</a> for possible values</p>
         */
        _FinalStage taxMode(@NotNull LoyaltyProgramAccrualRuleTaxMode taxMode);
    }

    public interface _FinalStage {
        LoyaltyProgramAccrualRuleSpendData build();

        /**
         * <p>The IDs of any <code>CATEGORY</code> catalog objects that are excluded from points accrual.</p>
         * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
         * endpoint to retrieve information about the excluded categories.</p>
         */
        _FinalStage excludedCategoryIds(Optional<List<String>> excludedCategoryIds);

        _FinalStage excludedCategoryIds(List<String> excludedCategoryIds);

        _FinalStage excludedCategoryIds(Nullable<List<String>> excludedCategoryIds);

        /**
         * <p>The IDs of any <code>ITEM_VARIATION</code> catalog objects that are excluded from points accrual.</p>
         * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
         * endpoint to retrieve information about the excluded item variations.</p>
         */
        _FinalStage excludedItemVariationIds(Optional<List<String>> excludedItemVariationIds);

        _FinalStage excludedItemVariationIds(List<String> excludedItemVariationIds);

        _FinalStage excludedItemVariationIds(Nullable<List<String>> excludedItemVariationIds);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AmountMoneyStage, TaxModeStage, _FinalStage {
        private Money amountMoney;

        private LoyaltyProgramAccrualRuleTaxMode taxMode;

        private Optional<List<String>> excludedItemVariationIds = Optional.empty();

        private Optional<List<String>> excludedCategoryIds = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LoyaltyProgramAccrualRuleSpendData other) {
            amountMoney(other.getAmountMoney());
            excludedCategoryIds(other.getExcludedCategoryIds());
            excludedItemVariationIds(other.getExcludedItemVariationIds());
            taxMode(other.getTaxMode());
            return this;
        }

        /**
         * <p>The amount that buyers must spend to earn points.
         * For example, given an &quot;Earn 1 point for every $10 spent&quot; accrual rule, a buyer who spends $105 earns 10 points.</p>
         * <p>The amount that buyers must spend to earn points.
         * For example, given an &quot;Earn 1 point for every $10 spent&quot; accrual rule, a buyer who spends $105 earns 10 points.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("amount_money")
        public TaxModeStage amountMoney(@NotNull Money amountMoney) {
            this.amountMoney = Objects.requireNonNull(amountMoney, "amountMoney must not be null");
            return this;
        }

        /**
         * <p>Indicates how taxes should be treated when calculating the purchase amount used for points accrual.
         * See <a href="#type-loyaltyprogramaccrualruletaxmode">LoyaltyProgramAccrualRuleTaxMode</a> for possible values</p>
         * <p>Indicates how taxes should be treated when calculating the purchase amount used for points accrual.
         * See <a href="#type-loyaltyprogramaccrualruletaxmode">LoyaltyProgramAccrualRuleTaxMode</a> for possible values</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("tax_mode")
        public _FinalStage taxMode(@NotNull LoyaltyProgramAccrualRuleTaxMode taxMode) {
            this.taxMode = Objects.requireNonNull(taxMode, "taxMode must not be null");
            return this;
        }

        /**
         * <p>The IDs of any <code>ITEM_VARIATION</code> catalog objects that are excluded from points accrual.</p>
         * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
         * endpoint to retrieve information about the excluded item variations.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage excludedItemVariationIds(Nullable<List<String>> excludedItemVariationIds) {
            if (excludedItemVariationIds.isNull()) {
                this.excludedItemVariationIds = null;
            } else if (excludedItemVariationIds.isEmpty()) {
                this.excludedItemVariationIds = Optional.empty();
            } else {
                this.excludedItemVariationIds = Optional.of(excludedItemVariationIds.get());
            }
            return this;
        }

        /**
         * <p>The IDs of any <code>ITEM_VARIATION</code> catalog objects that are excluded from points accrual.</p>
         * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
         * endpoint to retrieve information about the excluded item variations.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage excludedItemVariationIds(List<String> excludedItemVariationIds) {
            this.excludedItemVariationIds = Optional.ofNullable(excludedItemVariationIds);
            return this;
        }

        /**
         * <p>The IDs of any <code>ITEM_VARIATION</code> catalog objects that are excluded from points accrual.</p>
         * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
         * endpoint to retrieve information about the excluded item variations.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "excluded_item_variation_ids", nulls = Nulls.SKIP)
        public _FinalStage excludedItemVariationIds(Optional<List<String>> excludedItemVariationIds) {
            this.excludedItemVariationIds = excludedItemVariationIds;
            return this;
        }

        /**
         * <p>The IDs of any <code>CATEGORY</code> catalog objects that are excluded from points accrual.</p>
         * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
         * endpoint to retrieve information about the excluded categories.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage excludedCategoryIds(Nullable<List<String>> excludedCategoryIds) {
            if (excludedCategoryIds.isNull()) {
                this.excludedCategoryIds = null;
            } else if (excludedCategoryIds.isEmpty()) {
                this.excludedCategoryIds = Optional.empty();
            } else {
                this.excludedCategoryIds = Optional.of(excludedCategoryIds.get());
            }
            return this;
        }

        /**
         * <p>The IDs of any <code>CATEGORY</code> catalog objects that are excluded from points accrual.</p>
         * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
         * endpoint to retrieve information about the excluded categories.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage excludedCategoryIds(List<String> excludedCategoryIds) {
            this.excludedCategoryIds = Optional.ofNullable(excludedCategoryIds);
            return this;
        }

        /**
         * <p>The IDs of any <code>CATEGORY</code> catalog objects that are excluded from points accrual.</p>
         * <p>You can use the <a href="api-endpoint:Catalog-BatchRetrieveCatalogObjects">BatchRetrieveCatalogObjects</a>
         * endpoint to retrieve information about the excluded categories.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "excluded_category_ids", nulls = Nulls.SKIP)
        public _FinalStage excludedCategoryIds(Optional<List<String>> excludedCategoryIds) {
            this.excludedCategoryIds = excludedCategoryIds;
            return this;
        }

        @java.lang.Override
        public LoyaltyProgramAccrualRuleSpendData build() {
            return new LoyaltyProgramAccrualRuleSpendData(
                    amountMoney, excludedCategoryIds, excludedItemVariationIds, taxMode, additionalProperties);
        }
    }
}
