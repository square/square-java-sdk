/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PayoutEntry.Builder.class)
public final class PayoutEntry {
    private final String id;

    private final String payoutId;

    private final Optional<String> effectiveAt;

    private final Optional<ActivityType> type;

    private final Optional<Money> grossAmountMoney;

    private final Optional<Money> feeAmountMoney;

    private final Optional<Money> netAmountMoney;

    private final Optional<PaymentBalanceActivityAppFeeRevenueDetail> typeAppFeeRevenueDetails;

    private final Optional<PaymentBalanceActivityAppFeeRefundDetail> typeAppFeeRefundDetails;

    private final Optional<PaymentBalanceActivityAutomaticSavingsDetail> typeAutomaticSavingsDetails;

    private final Optional<PaymentBalanceActivityAutomaticSavingsReversedDetail> typeAutomaticSavingsReversedDetails;

    private final Optional<PaymentBalanceActivityChargeDetail> typeChargeDetails;

    private final Optional<PaymentBalanceActivityDepositFeeDetail> typeDepositFeeDetails;

    private final Optional<PaymentBalanceActivityDepositFeeReversedDetail> typeDepositFeeReversedDetails;

    private final Optional<PaymentBalanceActivityDisputeDetail> typeDisputeDetails;

    private final Optional<PaymentBalanceActivityFeeDetail> typeFeeDetails;

    private final Optional<PaymentBalanceActivityFreeProcessingDetail> typeFreeProcessingDetails;

    private final Optional<PaymentBalanceActivityHoldAdjustmentDetail> typeHoldAdjustmentDetails;

    private final Optional<PaymentBalanceActivityOpenDisputeDetail> typeOpenDisputeDetails;

    private final Optional<PaymentBalanceActivityOtherDetail> typeOtherDetails;

    private final Optional<PaymentBalanceActivityOtherAdjustmentDetail> typeOtherAdjustmentDetails;

    private final Optional<PaymentBalanceActivityRefundDetail> typeRefundDetails;

    private final Optional<PaymentBalanceActivityReleaseAdjustmentDetail> typeReleaseAdjustmentDetails;

    private final Optional<PaymentBalanceActivityReserveHoldDetail> typeReserveHoldDetails;

    private final Optional<PaymentBalanceActivityReserveReleaseDetail> typeReserveReleaseDetails;

    private final Optional<PaymentBalanceActivitySquareCapitalPaymentDetail> typeSquareCapitalPaymentDetails;

    private final Optional<PaymentBalanceActivitySquareCapitalReversedPaymentDetail>
            typeSquareCapitalReversedPaymentDetails;

    private final Optional<PaymentBalanceActivityTaxOnFeeDetail> typeTaxOnFeeDetails;

    private final Optional<PaymentBalanceActivityThirdPartyFeeDetail> typeThirdPartyFeeDetails;

    private final Optional<PaymentBalanceActivityThirdPartyFeeRefundDetail> typeThirdPartyFeeRefundDetails;

    private final Optional<PaymentBalanceActivitySquarePayrollTransferDetail> typeSquarePayrollTransferDetails;

    private final Optional<PaymentBalanceActivitySquarePayrollTransferReversedDetail>
            typeSquarePayrollTransferReversedDetails;

    private final Map<String, Object> additionalProperties;

    private PayoutEntry(
            String id,
            String payoutId,
            Optional<String> effectiveAt,
            Optional<ActivityType> type,
            Optional<Money> grossAmountMoney,
            Optional<Money> feeAmountMoney,
            Optional<Money> netAmountMoney,
            Optional<PaymentBalanceActivityAppFeeRevenueDetail> typeAppFeeRevenueDetails,
            Optional<PaymentBalanceActivityAppFeeRefundDetail> typeAppFeeRefundDetails,
            Optional<PaymentBalanceActivityAutomaticSavingsDetail> typeAutomaticSavingsDetails,
            Optional<PaymentBalanceActivityAutomaticSavingsReversedDetail> typeAutomaticSavingsReversedDetails,
            Optional<PaymentBalanceActivityChargeDetail> typeChargeDetails,
            Optional<PaymentBalanceActivityDepositFeeDetail> typeDepositFeeDetails,
            Optional<PaymentBalanceActivityDepositFeeReversedDetail> typeDepositFeeReversedDetails,
            Optional<PaymentBalanceActivityDisputeDetail> typeDisputeDetails,
            Optional<PaymentBalanceActivityFeeDetail> typeFeeDetails,
            Optional<PaymentBalanceActivityFreeProcessingDetail> typeFreeProcessingDetails,
            Optional<PaymentBalanceActivityHoldAdjustmentDetail> typeHoldAdjustmentDetails,
            Optional<PaymentBalanceActivityOpenDisputeDetail> typeOpenDisputeDetails,
            Optional<PaymentBalanceActivityOtherDetail> typeOtherDetails,
            Optional<PaymentBalanceActivityOtherAdjustmentDetail> typeOtherAdjustmentDetails,
            Optional<PaymentBalanceActivityRefundDetail> typeRefundDetails,
            Optional<PaymentBalanceActivityReleaseAdjustmentDetail> typeReleaseAdjustmentDetails,
            Optional<PaymentBalanceActivityReserveHoldDetail> typeReserveHoldDetails,
            Optional<PaymentBalanceActivityReserveReleaseDetail> typeReserveReleaseDetails,
            Optional<PaymentBalanceActivitySquareCapitalPaymentDetail> typeSquareCapitalPaymentDetails,
            Optional<PaymentBalanceActivitySquareCapitalReversedPaymentDetail> typeSquareCapitalReversedPaymentDetails,
            Optional<PaymentBalanceActivityTaxOnFeeDetail> typeTaxOnFeeDetails,
            Optional<PaymentBalanceActivityThirdPartyFeeDetail> typeThirdPartyFeeDetails,
            Optional<PaymentBalanceActivityThirdPartyFeeRefundDetail> typeThirdPartyFeeRefundDetails,
            Optional<PaymentBalanceActivitySquarePayrollTransferDetail> typeSquarePayrollTransferDetails,
            Optional<PaymentBalanceActivitySquarePayrollTransferReversedDetail>
                    typeSquarePayrollTransferReversedDetails,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.payoutId = payoutId;
        this.effectiveAt = effectiveAt;
        this.type = type;
        this.grossAmountMoney = grossAmountMoney;
        this.feeAmountMoney = feeAmountMoney;
        this.netAmountMoney = netAmountMoney;
        this.typeAppFeeRevenueDetails = typeAppFeeRevenueDetails;
        this.typeAppFeeRefundDetails = typeAppFeeRefundDetails;
        this.typeAutomaticSavingsDetails = typeAutomaticSavingsDetails;
        this.typeAutomaticSavingsReversedDetails = typeAutomaticSavingsReversedDetails;
        this.typeChargeDetails = typeChargeDetails;
        this.typeDepositFeeDetails = typeDepositFeeDetails;
        this.typeDepositFeeReversedDetails = typeDepositFeeReversedDetails;
        this.typeDisputeDetails = typeDisputeDetails;
        this.typeFeeDetails = typeFeeDetails;
        this.typeFreeProcessingDetails = typeFreeProcessingDetails;
        this.typeHoldAdjustmentDetails = typeHoldAdjustmentDetails;
        this.typeOpenDisputeDetails = typeOpenDisputeDetails;
        this.typeOtherDetails = typeOtherDetails;
        this.typeOtherAdjustmentDetails = typeOtherAdjustmentDetails;
        this.typeRefundDetails = typeRefundDetails;
        this.typeReleaseAdjustmentDetails = typeReleaseAdjustmentDetails;
        this.typeReserveHoldDetails = typeReserveHoldDetails;
        this.typeReserveReleaseDetails = typeReserveReleaseDetails;
        this.typeSquareCapitalPaymentDetails = typeSquareCapitalPaymentDetails;
        this.typeSquareCapitalReversedPaymentDetails = typeSquareCapitalReversedPaymentDetails;
        this.typeTaxOnFeeDetails = typeTaxOnFeeDetails;
        this.typeThirdPartyFeeDetails = typeThirdPartyFeeDetails;
        this.typeThirdPartyFeeRefundDetails = typeThirdPartyFeeRefundDetails;
        this.typeSquarePayrollTransferDetails = typeSquarePayrollTransferDetails;
        this.typeSquarePayrollTransferReversedDetails = typeSquarePayrollTransferReversedDetails;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A unique ID for the payout entry.
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The ID of the payout entriesâ€™ associated payout.
     */
    @JsonProperty("payout_id")
    public String getPayoutId() {
        return payoutId;
    }

    /**
     * @return The timestamp of when the payout entry affected the balance, in RFC 3339 format.
     */
    @JsonIgnore
    public Optional<String> getEffectiveAt() {
        if (effectiveAt == null) {
            return Optional.empty();
        }
        return effectiveAt;
    }

    /**
     * @return The type of activity associated with this payout entry.
     * See <a href="#type-activitytype">ActivityType</a> for possible values
     */
    @JsonProperty("type")
    public Optional<ActivityType> getType() {
        return type;
    }

    /**
     * @return The amount of money involved in this payout entry.
     */
    @JsonProperty("gross_amount_money")
    public Optional<Money> getGrossAmountMoney() {
        return grossAmountMoney;
    }

    /**
     * @return The amount of Square fees associated with this payout entry.
     */
    @JsonProperty("fee_amount_money")
    public Optional<Money> getFeeAmountMoney() {
        return feeAmountMoney;
    }

    /**
     * @return The net proceeds from this transaction after any fees.
     */
    @JsonProperty("net_amount_money")
    public Optional<Money> getNetAmountMoney() {
        return netAmountMoney;
    }

    /**
     * @return Details of any developer app fee revenue generated on a payment.
     */
    @JsonProperty("type_app_fee_revenue_details")
    public Optional<PaymentBalanceActivityAppFeeRevenueDetail> getTypeAppFeeRevenueDetails() {
        return typeAppFeeRevenueDetails;
    }

    /**
     * @return Details of a refund for an app fee on a payment.
     */
    @JsonProperty("type_app_fee_refund_details")
    public Optional<PaymentBalanceActivityAppFeeRefundDetail> getTypeAppFeeRefundDetails() {
        return typeAppFeeRefundDetails;
    }

    /**
     * @return Details of any automatic transfer from the payment processing balance to the Square Savings account. These are, generally, proportional to the merchant's sales.
     */
    @JsonProperty("type_automatic_savings_details")
    public Optional<PaymentBalanceActivityAutomaticSavingsDetail> getTypeAutomaticSavingsDetails() {
        return typeAutomaticSavingsDetails;
    }

    /**
     * @return Details of any automatic transfer from the Square Savings account back to the processing balance. These are, generally, proportional to the merchant's refunds.
     */
    @JsonProperty("type_automatic_savings_reversed_details")
    public Optional<PaymentBalanceActivityAutomaticSavingsReversedDetail> getTypeAutomaticSavingsReversedDetails() {
        return typeAutomaticSavingsReversedDetails;
    }

    /**
     * @return Details of credit card payment captures.
     */
    @JsonProperty("type_charge_details")
    public Optional<PaymentBalanceActivityChargeDetail> getTypeChargeDetails() {
        return typeChargeDetails;
    }

    /**
     * @return Details of any fees involved with deposits such as for instant deposits.
     */
    @JsonProperty("type_deposit_fee_details")
    public Optional<PaymentBalanceActivityDepositFeeDetail> getTypeDepositFeeDetails() {
        return typeDepositFeeDetails;
    }

    /**
     * @return Details of any reversal or refund of fees involved with deposits such as for instant deposits.
     */
    @JsonProperty("type_deposit_fee_reversed_details")
    public Optional<PaymentBalanceActivityDepositFeeReversedDetail> getTypeDepositFeeReversedDetails() {
        return typeDepositFeeReversedDetails;
    }

    /**
     * @return Details of any balance change due to a dispute event.
     */
    @JsonProperty("type_dispute_details")
    public Optional<PaymentBalanceActivityDisputeDetail> getTypeDisputeDetails() {
        return typeDisputeDetails;
    }

    /**
     * @return Details of adjustments due to the Square processing fee.
     */
    @JsonProperty("type_fee_details")
    public Optional<PaymentBalanceActivityFeeDetail> getTypeFeeDetails() {
        return typeFeeDetails;
    }

    /**
     * @return Square offers Free Payments Processing for a variety of business scenarios including seller referral or when Square wants to apologize for a bug, customer service, repricing complication, and so on. This entry represents details of any credit to the merchant for the purposes of Free Processing.
     */
    @JsonProperty("type_free_processing_details")
    public Optional<PaymentBalanceActivityFreeProcessingDetail> getTypeFreeProcessingDetails() {
        return typeFreeProcessingDetails;
    }

    /**
     * @return Details of any adjustment made by Square related to the holding or releasing of a payment.
     */
    @JsonProperty("type_hold_adjustment_details")
    public Optional<PaymentBalanceActivityHoldAdjustmentDetail> getTypeHoldAdjustmentDetails() {
        return typeHoldAdjustmentDetails;
    }

    /**
     * @return Details of any open disputes.
     */
    @JsonProperty("type_open_dispute_details")
    public Optional<PaymentBalanceActivityOpenDisputeDetail> getTypeOpenDisputeDetails() {
        return typeOpenDisputeDetails;
    }

    /**
     * @return Details of any other type that does not belong in the rest of the types.
     */
    @JsonProperty("type_other_details")
    public Optional<PaymentBalanceActivityOtherDetail> getTypeOtherDetails() {
        return typeOtherDetails;
    }

    /**
     * @return Details of any other type of adjustments that don't fall under existing types.
     */
    @JsonProperty("type_other_adjustment_details")
    public Optional<PaymentBalanceActivityOtherAdjustmentDetail> getTypeOtherAdjustmentDetails() {
        return typeOtherAdjustmentDetails;
    }

    /**
     * @return Details of a refund for an existing card payment.
     */
    @JsonProperty("type_refund_details")
    public Optional<PaymentBalanceActivityRefundDetail> getTypeRefundDetails() {
        return typeRefundDetails;
    }

    /**
     * @return Details of fees released for adjustments.
     */
    @JsonProperty("type_release_adjustment_details")
    public Optional<PaymentBalanceActivityReleaseAdjustmentDetail> getTypeReleaseAdjustmentDetails() {
        return typeReleaseAdjustmentDetails;
    }

    /**
     * @return Details of fees paid for funding risk reserve.
     */
    @JsonProperty("type_reserve_hold_details")
    public Optional<PaymentBalanceActivityReserveHoldDetail> getTypeReserveHoldDetails() {
        return typeReserveHoldDetails;
    }

    /**
     * @return Details of fees released from risk reserve.
     */
    @JsonProperty("type_reserve_release_details")
    public Optional<PaymentBalanceActivityReserveReleaseDetail> getTypeReserveReleaseDetails() {
        return typeReserveReleaseDetails;
    }

    /**
     * @return Details of capital merchant cash advance (MCA) assessments. These are, generally, proportional to the merchant's sales but may be issued for other reasons related to the MCA.
     */
    @JsonProperty("type_square_capital_payment_details")
    public Optional<PaymentBalanceActivitySquareCapitalPaymentDetail> getTypeSquareCapitalPaymentDetails() {
        return typeSquareCapitalPaymentDetails;
    }

    /**
     * @return Details of capital merchant cash advance (MCA) assessment refunds. These are, generally, proportional to the merchant's refunds but may be issued for other reasons related to the MCA.
     */
    @JsonProperty("type_square_capital_reversed_payment_details")
    public Optional<PaymentBalanceActivitySquareCapitalReversedPaymentDetail>
            getTypeSquareCapitalReversedPaymentDetails() {
        return typeSquareCapitalReversedPaymentDetails;
    }

    /**
     * @return Details of tax paid on fee amounts.
     */
    @JsonProperty("type_tax_on_fee_details")
    public Optional<PaymentBalanceActivityTaxOnFeeDetail> getTypeTaxOnFeeDetails() {
        return typeTaxOnFeeDetails;
    }

    /**
     * @return Details of fees collected by a 3rd party platform.
     */
    @JsonProperty("type_third_party_fee_details")
    public Optional<PaymentBalanceActivityThirdPartyFeeDetail> getTypeThirdPartyFeeDetails() {
        return typeThirdPartyFeeDetails;
    }

    /**
     * @return Details of refunded fees from a 3rd party platform.
     */
    @JsonProperty("type_third_party_fee_refund_details")
    public Optional<PaymentBalanceActivityThirdPartyFeeRefundDetail> getTypeThirdPartyFeeRefundDetails() {
        return typeThirdPartyFeeRefundDetails;
    }

    /**
     * @return Details of a payroll payment that was transferred to a team memberâ€™s bank account.
     */
    @JsonProperty("type_square_payroll_transfer_details")
    public Optional<PaymentBalanceActivitySquarePayrollTransferDetail> getTypeSquarePayrollTransferDetails() {
        return typeSquarePayrollTransferDetails;
    }

    /**
     * @return Details of a payroll payment to a team memberâ€™s bank account that was deposited back to the sellerâ€™s account by Square.
     */
    @JsonProperty("type_square_payroll_transfer_reversed_details")
    public Optional<PaymentBalanceActivitySquarePayrollTransferReversedDetail>
            getTypeSquarePayrollTransferReversedDetails() {
        return typeSquarePayrollTransferReversedDetails;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("effective_at")
    private Optional<String> _getEffectiveAt() {
        return effectiveAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PayoutEntry && equalTo((PayoutEntry) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PayoutEntry other) {
        return id.equals(other.id)
                && payoutId.equals(other.payoutId)
                && effectiveAt.equals(other.effectiveAt)
                && type.equals(other.type)
                && grossAmountMoney.equals(other.grossAmountMoney)
                && feeAmountMoney.equals(other.feeAmountMoney)
                && netAmountMoney.equals(other.netAmountMoney)
                && typeAppFeeRevenueDetails.equals(other.typeAppFeeRevenueDetails)
                && typeAppFeeRefundDetails.equals(other.typeAppFeeRefundDetails)
                && typeAutomaticSavingsDetails.equals(other.typeAutomaticSavingsDetails)
                && typeAutomaticSavingsReversedDetails.equals(other.typeAutomaticSavingsReversedDetails)
                && typeChargeDetails.equals(other.typeChargeDetails)
                && typeDepositFeeDetails.equals(other.typeDepositFeeDetails)
                && typeDepositFeeReversedDetails.equals(other.typeDepositFeeReversedDetails)
                && typeDisputeDetails.equals(other.typeDisputeDetails)
                && typeFeeDetails.equals(other.typeFeeDetails)
                && typeFreeProcessingDetails.equals(other.typeFreeProcessingDetails)
                && typeHoldAdjustmentDetails.equals(other.typeHoldAdjustmentDetails)
                && typeOpenDisputeDetails.equals(other.typeOpenDisputeDetails)
                && typeOtherDetails.equals(other.typeOtherDetails)
                && typeOtherAdjustmentDetails.equals(other.typeOtherAdjustmentDetails)
                && typeRefundDetails.equals(other.typeRefundDetails)
                && typeReleaseAdjustmentDetails.equals(other.typeReleaseAdjustmentDetails)
                && typeReserveHoldDetails.equals(other.typeReserveHoldDetails)
                && typeReserveReleaseDetails.equals(other.typeReserveReleaseDetails)
                && typeSquareCapitalPaymentDetails.equals(other.typeSquareCapitalPaymentDetails)
                && typeSquareCapitalReversedPaymentDetails.equals(other.typeSquareCapitalReversedPaymentDetails)
                && typeTaxOnFeeDetails.equals(other.typeTaxOnFeeDetails)
                && typeThirdPartyFeeDetails.equals(other.typeThirdPartyFeeDetails)
                && typeThirdPartyFeeRefundDetails.equals(other.typeThirdPartyFeeRefundDetails)
                && typeSquarePayrollTransferDetails.equals(other.typeSquarePayrollTransferDetails)
                && typeSquarePayrollTransferReversedDetails.equals(other.typeSquarePayrollTransferReversedDetails);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.payoutId,
                this.effectiveAt,
                this.type,
                this.grossAmountMoney,
                this.feeAmountMoney,
                this.netAmountMoney,
                this.typeAppFeeRevenueDetails,
                this.typeAppFeeRefundDetails,
                this.typeAutomaticSavingsDetails,
                this.typeAutomaticSavingsReversedDetails,
                this.typeChargeDetails,
                this.typeDepositFeeDetails,
                this.typeDepositFeeReversedDetails,
                this.typeDisputeDetails,
                this.typeFeeDetails,
                this.typeFreeProcessingDetails,
                this.typeHoldAdjustmentDetails,
                this.typeOpenDisputeDetails,
                this.typeOtherDetails,
                this.typeOtherAdjustmentDetails,
                this.typeRefundDetails,
                this.typeReleaseAdjustmentDetails,
                this.typeReserveHoldDetails,
                this.typeReserveReleaseDetails,
                this.typeSquareCapitalPaymentDetails,
                this.typeSquareCapitalReversedPaymentDetails,
                this.typeTaxOnFeeDetails,
                this.typeThirdPartyFeeDetails,
                this.typeThirdPartyFeeRefundDetails,
                this.typeSquarePayrollTransferDetails,
                this.typeSquarePayrollTransferReversedDetails);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        PayoutIdStage id(@NotNull String id);

        Builder from(PayoutEntry other);
    }

    public interface PayoutIdStage {
        _FinalStage payoutId(@NotNull String payoutId);
    }

    public interface _FinalStage {
        PayoutEntry build();

        _FinalStage effectiveAt(Optional<String> effectiveAt);

        _FinalStage effectiveAt(String effectiveAt);

        _FinalStage effectiveAt(Nullable<String> effectiveAt);

        _FinalStage type(Optional<ActivityType> type);

        _FinalStage type(ActivityType type);

        _FinalStage grossAmountMoney(Optional<Money> grossAmountMoney);

        _FinalStage grossAmountMoney(Money grossAmountMoney);

        _FinalStage feeAmountMoney(Optional<Money> feeAmountMoney);

        _FinalStage feeAmountMoney(Money feeAmountMoney);

        _FinalStage netAmountMoney(Optional<Money> netAmountMoney);

        _FinalStage netAmountMoney(Money netAmountMoney);

        _FinalStage typeAppFeeRevenueDetails(
                Optional<PaymentBalanceActivityAppFeeRevenueDetail> typeAppFeeRevenueDetails);

        _FinalStage typeAppFeeRevenueDetails(PaymentBalanceActivityAppFeeRevenueDetail typeAppFeeRevenueDetails);

        _FinalStage typeAppFeeRefundDetails(Optional<PaymentBalanceActivityAppFeeRefundDetail> typeAppFeeRefundDetails);

        _FinalStage typeAppFeeRefundDetails(PaymentBalanceActivityAppFeeRefundDetail typeAppFeeRefundDetails);

        _FinalStage typeAutomaticSavingsDetails(
                Optional<PaymentBalanceActivityAutomaticSavingsDetail> typeAutomaticSavingsDetails);

        _FinalStage typeAutomaticSavingsDetails(
                PaymentBalanceActivityAutomaticSavingsDetail typeAutomaticSavingsDetails);

        _FinalStage typeAutomaticSavingsReversedDetails(
                Optional<PaymentBalanceActivityAutomaticSavingsReversedDetail> typeAutomaticSavingsReversedDetails);

        _FinalStage typeAutomaticSavingsReversedDetails(
                PaymentBalanceActivityAutomaticSavingsReversedDetail typeAutomaticSavingsReversedDetails);

        _FinalStage typeChargeDetails(Optional<PaymentBalanceActivityChargeDetail> typeChargeDetails);

        _FinalStage typeChargeDetails(PaymentBalanceActivityChargeDetail typeChargeDetails);

        _FinalStage typeDepositFeeDetails(Optional<PaymentBalanceActivityDepositFeeDetail> typeDepositFeeDetails);

        _FinalStage typeDepositFeeDetails(PaymentBalanceActivityDepositFeeDetail typeDepositFeeDetails);

        _FinalStage typeDepositFeeReversedDetails(
                Optional<PaymentBalanceActivityDepositFeeReversedDetail> typeDepositFeeReversedDetails);

        _FinalStage typeDepositFeeReversedDetails(
                PaymentBalanceActivityDepositFeeReversedDetail typeDepositFeeReversedDetails);

        _FinalStage typeDisputeDetails(Optional<PaymentBalanceActivityDisputeDetail> typeDisputeDetails);

        _FinalStage typeDisputeDetails(PaymentBalanceActivityDisputeDetail typeDisputeDetails);

        _FinalStage typeFeeDetails(Optional<PaymentBalanceActivityFeeDetail> typeFeeDetails);

        _FinalStage typeFeeDetails(PaymentBalanceActivityFeeDetail typeFeeDetails);

        _FinalStage typeFreeProcessingDetails(
                Optional<PaymentBalanceActivityFreeProcessingDetail> typeFreeProcessingDetails);

        _FinalStage typeFreeProcessingDetails(PaymentBalanceActivityFreeProcessingDetail typeFreeProcessingDetails);

        _FinalStage typeHoldAdjustmentDetails(
                Optional<PaymentBalanceActivityHoldAdjustmentDetail> typeHoldAdjustmentDetails);

        _FinalStage typeHoldAdjustmentDetails(PaymentBalanceActivityHoldAdjustmentDetail typeHoldAdjustmentDetails);

        _FinalStage typeOpenDisputeDetails(Optional<PaymentBalanceActivityOpenDisputeDetail> typeOpenDisputeDetails);

        _FinalStage typeOpenDisputeDetails(PaymentBalanceActivityOpenDisputeDetail typeOpenDisputeDetails);

        _FinalStage typeOtherDetails(Optional<PaymentBalanceActivityOtherDetail> typeOtherDetails);

        _FinalStage typeOtherDetails(PaymentBalanceActivityOtherDetail typeOtherDetails);

        _FinalStage typeOtherAdjustmentDetails(
                Optional<PaymentBalanceActivityOtherAdjustmentDetail> typeOtherAdjustmentDetails);

        _FinalStage typeOtherAdjustmentDetails(PaymentBalanceActivityOtherAdjustmentDetail typeOtherAdjustmentDetails);

        _FinalStage typeRefundDetails(Optional<PaymentBalanceActivityRefundDetail> typeRefundDetails);

        _FinalStage typeRefundDetails(PaymentBalanceActivityRefundDetail typeRefundDetails);

        _FinalStage typeReleaseAdjustmentDetails(
                Optional<PaymentBalanceActivityReleaseAdjustmentDetail> typeReleaseAdjustmentDetails);

        _FinalStage typeReleaseAdjustmentDetails(
                PaymentBalanceActivityReleaseAdjustmentDetail typeReleaseAdjustmentDetails);

        _FinalStage typeReserveHoldDetails(Optional<PaymentBalanceActivityReserveHoldDetail> typeReserveHoldDetails);

        _FinalStage typeReserveHoldDetails(PaymentBalanceActivityReserveHoldDetail typeReserveHoldDetails);

        _FinalStage typeReserveReleaseDetails(
                Optional<PaymentBalanceActivityReserveReleaseDetail> typeReserveReleaseDetails);

        _FinalStage typeReserveReleaseDetails(PaymentBalanceActivityReserveReleaseDetail typeReserveReleaseDetails);

        _FinalStage typeSquareCapitalPaymentDetails(
                Optional<PaymentBalanceActivitySquareCapitalPaymentDetail> typeSquareCapitalPaymentDetails);

        _FinalStage typeSquareCapitalPaymentDetails(
                PaymentBalanceActivitySquareCapitalPaymentDetail typeSquareCapitalPaymentDetails);

        _FinalStage typeSquareCapitalReversedPaymentDetails(
                Optional<PaymentBalanceActivitySquareCapitalReversedPaymentDetail>
                        typeSquareCapitalReversedPaymentDetails);

        _FinalStage typeSquareCapitalReversedPaymentDetails(
                PaymentBalanceActivitySquareCapitalReversedPaymentDetail typeSquareCapitalReversedPaymentDetails);

        _FinalStage typeTaxOnFeeDetails(Optional<PaymentBalanceActivityTaxOnFeeDetail> typeTaxOnFeeDetails);

        _FinalStage typeTaxOnFeeDetails(PaymentBalanceActivityTaxOnFeeDetail typeTaxOnFeeDetails);

        _FinalStage typeThirdPartyFeeDetails(
                Optional<PaymentBalanceActivityThirdPartyFeeDetail> typeThirdPartyFeeDetails);

        _FinalStage typeThirdPartyFeeDetails(PaymentBalanceActivityThirdPartyFeeDetail typeThirdPartyFeeDetails);

        _FinalStage typeThirdPartyFeeRefundDetails(
                Optional<PaymentBalanceActivityThirdPartyFeeRefundDetail> typeThirdPartyFeeRefundDetails);

        _FinalStage typeThirdPartyFeeRefundDetails(
                PaymentBalanceActivityThirdPartyFeeRefundDetail typeThirdPartyFeeRefundDetails);

        _FinalStage typeSquarePayrollTransferDetails(
                Optional<PaymentBalanceActivitySquarePayrollTransferDetail> typeSquarePayrollTransferDetails);

        _FinalStage typeSquarePayrollTransferDetails(
                PaymentBalanceActivitySquarePayrollTransferDetail typeSquarePayrollTransferDetails);

        _FinalStage typeSquarePayrollTransferReversedDetails(
                Optional<PaymentBalanceActivitySquarePayrollTransferReversedDetail>
                        typeSquarePayrollTransferReversedDetails);

        _FinalStage typeSquarePayrollTransferReversedDetails(
                PaymentBalanceActivitySquarePayrollTransferReversedDetail typeSquarePayrollTransferReversedDetails);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, PayoutIdStage, _FinalStage {
        private String id;

        private String payoutId;

        private Optional<PaymentBalanceActivitySquarePayrollTransferReversedDetail>
                typeSquarePayrollTransferReversedDetails = Optional.empty();

        private Optional<PaymentBalanceActivitySquarePayrollTransferDetail> typeSquarePayrollTransferDetails =
                Optional.empty();

        private Optional<PaymentBalanceActivityThirdPartyFeeRefundDetail> typeThirdPartyFeeRefundDetails =
                Optional.empty();

        private Optional<PaymentBalanceActivityThirdPartyFeeDetail> typeThirdPartyFeeDetails = Optional.empty();

        private Optional<PaymentBalanceActivityTaxOnFeeDetail> typeTaxOnFeeDetails = Optional.empty();

        private Optional<PaymentBalanceActivitySquareCapitalReversedPaymentDetail>
                typeSquareCapitalReversedPaymentDetails = Optional.empty();

        private Optional<PaymentBalanceActivitySquareCapitalPaymentDetail> typeSquareCapitalPaymentDetails =
                Optional.empty();

        private Optional<PaymentBalanceActivityReserveReleaseDetail> typeReserveReleaseDetails = Optional.empty();

        private Optional<PaymentBalanceActivityReserveHoldDetail> typeReserveHoldDetails = Optional.empty();

        private Optional<PaymentBalanceActivityReleaseAdjustmentDetail> typeReleaseAdjustmentDetails = Optional.empty();

        private Optional<PaymentBalanceActivityRefundDetail> typeRefundDetails = Optional.empty();

        private Optional<PaymentBalanceActivityOtherAdjustmentDetail> typeOtherAdjustmentDetails = Optional.empty();

        private Optional<PaymentBalanceActivityOtherDetail> typeOtherDetails = Optional.empty();

        private Optional<PaymentBalanceActivityOpenDisputeDetail> typeOpenDisputeDetails = Optional.empty();

        private Optional<PaymentBalanceActivityHoldAdjustmentDetail> typeHoldAdjustmentDetails = Optional.empty();

        private Optional<PaymentBalanceActivityFreeProcessingDetail> typeFreeProcessingDetails = Optional.empty();

        private Optional<PaymentBalanceActivityFeeDetail> typeFeeDetails = Optional.empty();

        private Optional<PaymentBalanceActivityDisputeDetail> typeDisputeDetails = Optional.empty();

        private Optional<PaymentBalanceActivityDepositFeeReversedDetail> typeDepositFeeReversedDetails =
                Optional.empty();

        private Optional<PaymentBalanceActivityDepositFeeDetail> typeDepositFeeDetails = Optional.empty();

        private Optional<PaymentBalanceActivityChargeDetail> typeChargeDetails = Optional.empty();

        private Optional<PaymentBalanceActivityAutomaticSavingsReversedDetail> typeAutomaticSavingsReversedDetails =
                Optional.empty();

        private Optional<PaymentBalanceActivityAutomaticSavingsDetail> typeAutomaticSavingsDetails = Optional.empty();

        private Optional<PaymentBalanceActivityAppFeeRefundDetail> typeAppFeeRefundDetails = Optional.empty();

        private Optional<PaymentBalanceActivityAppFeeRevenueDetail> typeAppFeeRevenueDetails = Optional.empty();

        private Optional<Money> netAmountMoney = Optional.empty();

        private Optional<Money> feeAmountMoney = Optional.empty();

        private Optional<Money> grossAmountMoney = Optional.empty();

        private Optional<ActivityType> type = Optional.empty();

        private Optional<String> effectiveAt = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PayoutEntry other) {
            id(other.getId());
            payoutId(other.getPayoutId());
            effectiveAt(other.getEffectiveAt());
            type(other.getType());
            grossAmountMoney(other.getGrossAmountMoney());
            feeAmountMoney(other.getFeeAmountMoney());
            netAmountMoney(other.getNetAmountMoney());
            typeAppFeeRevenueDetails(other.getTypeAppFeeRevenueDetails());
            typeAppFeeRefundDetails(other.getTypeAppFeeRefundDetails());
            typeAutomaticSavingsDetails(other.getTypeAutomaticSavingsDetails());
            typeAutomaticSavingsReversedDetails(other.getTypeAutomaticSavingsReversedDetails());
            typeChargeDetails(other.getTypeChargeDetails());
            typeDepositFeeDetails(other.getTypeDepositFeeDetails());
            typeDepositFeeReversedDetails(other.getTypeDepositFeeReversedDetails());
            typeDisputeDetails(other.getTypeDisputeDetails());
            typeFeeDetails(other.getTypeFeeDetails());
            typeFreeProcessingDetails(other.getTypeFreeProcessingDetails());
            typeHoldAdjustmentDetails(other.getTypeHoldAdjustmentDetails());
            typeOpenDisputeDetails(other.getTypeOpenDisputeDetails());
            typeOtherDetails(other.getTypeOtherDetails());
            typeOtherAdjustmentDetails(other.getTypeOtherAdjustmentDetails());
            typeRefundDetails(other.getTypeRefundDetails());
            typeReleaseAdjustmentDetails(other.getTypeReleaseAdjustmentDetails());
            typeReserveHoldDetails(other.getTypeReserveHoldDetails());
            typeReserveReleaseDetails(other.getTypeReserveReleaseDetails());
            typeSquareCapitalPaymentDetails(other.getTypeSquareCapitalPaymentDetails());
            typeSquareCapitalReversedPaymentDetails(other.getTypeSquareCapitalReversedPaymentDetails());
            typeTaxOnFeeDetails(other.getTypeTaxOnFeeDetails());
            typeThirdPartyFeeDetails(other.getTypeThirdPartyFeeDetails());
            typeThirdPartyFeeRefundDetails(other.getTypeThirdPartyFeeRefundDetails());
            typeSquarePayrollTransferDetails(other.getTypeSquarePayrollTransferDetails());
            typeSquarePayrollTransferReversedDetails(other.getTypeSquarePayrollTransferReversedDetails());
            return this;
        }

        /**
         * <p>A unique ID for the payout entry.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public PayoutIdStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The ID of the payout entriesâ€™ associated payout.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("payout_id")
        public _FinalStage payoutId(@NotNull String payoutId) {
            this.payoutId = Objects.requireNonNull(payoutId, "payoutId must not be null");
            return this;
        }

        /**
         * <p>Details of a payroll payment to a team memberâ€™s bank account that was deposited back to the sellerâ€™s account by Square.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeSquarePayrollTransferReversedDetails(
                PaymentBalanceActivitySquarePayrollTransferReversedDetail typeSquarePayrollTransferReversedDetails) {
            this.typeSquarePayrollTransferReversedDetails =
                    Optional.ofNullable(typeSquarePayrollTransferReversedDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_square_payroll_transfer_reversed_details", nulls = Nulls.SKIP)
        public _FinalStage typeSquarePayrollTransferReversedDetails(
                Optional<PaymentBalanceActivitySquarePayrollTransferReversedDetail>
                        typeSquarePayrollTransferReversedDetails) {
            this.typeSquarePayrollTransferReversedDetails = typeSquarePayrollTransferReversedDetails;
            return this;
        }

        /**
         * <p>Details of a payroll payment that was transferred to a team memberâ€™s bank account.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeSquarePayrollTransferDetails(
                PaymentBalanceActivitySquarePayrollTransferDetail typeSquarePayrollTransferDetails) {
            this.typeSquarePayrollTransferDetails = Optional.ofNullable(typeSquarePayrollTransferDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_square_payroll_transfer_details", nulls = Nulls.SKIP)
        public _FinalStage typeSquarePayrollTransferDetails(
                Optional<PaymentBalanceActivitySquarePayrollTransferDetail> typeSquarePayrollTransferDetails) {
            this.typeSquarePayrollTransferDetails = typeSquarePayrollTransferDetails;
            return this;
        }

        /**
         * <p>Details of refunded fees from a 3rd party platform.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeThirdPartyFeeRefundDetails(
                PaymentBalanceActivityThirdPartyFeeRefundDetail typeThirdPartyFeeRefundDetails) {
            this.typeThirdPartyFeeRefundDetails = Optional.ofNullable(typeThirdPartyFeeRefundDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_third_party_fee_refund_details", nulls = Nulls.SKIP)
        public _FinalStage typeThirdPartyFeeRefundDetails(
                Optional<PaymentBalanceActivityThirdPartyFeeRefundDetail> typeThirdPartyFeeRefundDetails) {
            this.typeThirdPartyFeeRefundDetails = typeThirdPartyFeeRefundDetails;
            return this;
        }

        /**
         * <p>Details of fees collected by a 3rd party platform.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeThirdPartyFeeDetails(
                PaymentBalanceActivityThirdPartyFeeDetail typeThirdPartyFeeDetails) {
            this.typeThirdPartyFeeDetails = Optional.ofNullable(typeThirdPartyFeeDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_third_party_fee_details", nulls = Nulls.SKIP)
        public _FinalStage typeThirdPartyFeeDetails(
                Optional<PaymentBalanceActivityThirdPartyFeeDetail> typeThirdPartyFeeDetails) {
            this.typeThirdPartyFeeDetails = typeThirdPartyFeeDetails;
            return this;
        }

        /**
         * <p>Details of tax paid on fee amounts.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeTaxOnFeeDetails(PaymentBalanceActivityTaxOnFeeDetail typeTaxOnFeeDetails) {
            this.typeTaxOnFeeDetails = Optional.ofNullable(typeTaxOnFeeDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_tax_on_fee_details", nulls = Nulls.SKIP)
        public _FinalStage typeTaxOnFeeDetails(Optional<PaymentBalanceActivityTaxOnFeeDetail> typeTaxOnFeeDetails) {
            this.typeTaxOnFeeDetails = typeTaxOnFeeDetails;
            return this;
        }

        /**
         * <p>Details of capital merchant cash advance (MCA) assessment refunds. These are, generally, proportional to the merchant's refunds but may be issued for other reasons related to the MCA.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeSquareCapitalReversedPaymentDetails(
                PaymentBalanceActivitySquareCapitalReversedPaymentDetail typeSquareCapitalReversedPaymentDetails) {
            this.typeSquareCapitalReversedPaymentDetails = Optional.ofNullable(typeSquareCapitalReversedPaymentDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_square_capital_reversed_payment_details", nulls = Nulls.SKIP)
        public _FinalStage typeSquareCapitalReversedPaymentDetails(
                Optional<PaymentBalanceActivitySquareCapitalReversedPaymentDetail>
                        typeSquareCapitalReversedPaymentDetails) {
            this.typeSquareCapitalReversedPaymentDetails = typeSquareCapitalReversedPaymentDetails;
            return this;
        }

        /**
         * <p>Details of capital merchant cash advance (MCA) assessments. These are, generally, proportional to the merchant's sales but may be issued for other reasons related to the MCA.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeSquareCapitalPaymentDetails(
                PaymentBalanceActivitySquareCapitalPaymentDetail typeSquareCapitalPaymentDetails) {
            this.typeSquareCapitalPaymentDetails = Optional.ofNullable(typeSquareCapitalPaymentDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_square_capital_payment_details", nulls = Nulls.SKIP)
        public _FinalStage typeSquareCapitalPaymentDetails(
                Optional<PaymentBalanceActivitySquareCapitalPaymentDetail> typeSquareCapitalPaymentDetails) {
            this.typeSquareCapitalPaymentDetails = typeSquareCapitalPaymentDetails;
            return this;
        }

        /**
         * <p>Details of fees released from risk reserve.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeReserveReleaseDetails(
                PaymentBalanceActivityReserveReleaseDetail typeReserveReleaseDetails) {
            this.typeReserveReleaseDetails = Optional.ofNullable(typeReserveReleaseDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_reserve_release_details", nulls = Nulls.SKIP)
        public _FinalStage typeReserveReleaseDetails(
                Optional<PaymentBalanceActivityReserveReleaseDetail> typeReserveReleaseDetails) {
            this.typeReserveReleaseDetails = typeReserveReleaseDetails;
            return this;
        }

        /**
         * <p>Details of fees paid for funding risk reserve.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeReserveHoldDetails(PaymentBalanceActivityReserveHoldDetail typeReserveHoldDetails) {
            this.typeReserveHoldDetails = Optional.ofNullable(typeReserveHoldDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_reserve_hold_details", nulls = Nulls.SKIP)
        public _FinalStage typeReserveHoldDetails(
                Optional<PaymentBalanceActivityReserveHoldDetail> typeReserveHoldDetails) {
            this.typeReserveHoldDetails = typeReserveHoldDetails;
            return this;
        }

        /**
         * <p>Details of fees released for adjustments.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeReleaseAdjustmentDetails(
                PaymentBalanceActivityReleaseAdjustmentDetail typeReleaseAdjustmentDetails) {
            this.typeReleaseAdjustmentDetails = Optional.ofNullable(typeReleaseAdjustmentDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_release_adjustment_details", nulls = Nulls.SKIP)
        public _FinalStage typeReleaseAdjustmentDetails(
                Optional<PaymentBalanceActivityReleaseAdjustmentDetail> typeReleaseAdjustmentDetails) {
            this.typeReleaseAdjustmentDetails = typeReleaseAdjustmentDetails;
            return this;
        }

        /**
         * <p>Details of a refund for an existing card payment.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeRefundDetails(PaymentBalanceActivityRefundDetail typeRefundDetails) {
            this.typeRefundDetails = Optional.ofNullable(typeRefundDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_refund_details", nulls = Nulls.SKIP)
        public _FinalStage typeRefundDetails(Optional<PaymentBalanceActivityRefundDetail> typeRefundDetails) {
            this.typeRefundDetails = typeRefundDetails;
            return this;
        }

        /**
         * <p>Details of any other type of adjustments that don't fall under existing types.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeOtherAdjustmentDetails(
                PaymentBalanceActivityOtherAdjustmentDetail typeOtherAdjustmentDetails) {
            this.typeOtherAdjustmentDetails = Optional.ofNullable(typeOtherAdjustmentDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_other_adjustment_details", nulls = Nulls.SKIP)
        public _FinalStage typeOtherAdjustmentDetails(
                Optional<PaymentBalanceActivityOtherAdjustmentDetail> typeOtherAdjustmentDetails) {
            this.typeOtherAdjustmentDetails = typeOtherAdjustmentDetails;
            return this;
        }

        /**
         * <p>Details of any other type that does not belong in the rest of the types.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeOtherDetails(PaymentBalanceActivityOtherDetail typeOtherDetails) {
            this.typeOtherDetails = Optional.ofNullable(typeOtherDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_other_details", nulls = Nulls.SKIP)
        public _FinalStage typeOtherDetails(Optional<PaymentBalanceActivityOtherDetail> typeOtherDetails) {
            this.typeOtherDetails = typeOtherDetails;
            return this;
        }

        /**
         * <p>Details of any open disputes.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeOpenDisputeDetails(PaymentBalanceActivityOpenDisputeDetail typeOpenDisputeDetails) {
            this.typeOpenDisputeDetails = Optional.ofNullable(typeOpenDisputeDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_open_dispute_details", nulls = Nulls.SKIP)
        public _FinalStage typeOpenDisputeDetails(
                Optional<PaymentBalanceActivityOpenDisputeDetail> typeOpenDisputeDetails) {
            this.typeOpenDisputeDetails = typeOpenDisputeDetails;
            return this;
        }

        /**
         * <p>Details of any adjustment made by Square related to the holding or releasing of a payment.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeHoldAdjustmentDetails(
                PaymentBalanceActivityHoldAdjustmentDetail typeHoldAdjustmentDetails) {
            this.typeHoldAdjustmentDetails = Optional.ofNullable(typeHoldAdjustmentDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_hold_adjustment_details", nulls = Nulls.SKIP)
        public _FinalStage typeHoldAdjustmentDetails(
                Optional<PaymentBalanceActivityHoldAdjustmentDetail> typeHoldAdjustmentDetails) {
            this.typeHoldAdjustmentDetails = typeHoldAdjustmentDetails;
            return this;
        }

        /**
         * <p>Square offers Free Payments Processing for a variety of business scenarios including seller referral or when Square wants to apologize for a bug, customer service, repricing complication, and so on. This entry represents details of any credit to the merchant for the purposes of Free Processing.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeFreeProcessingDetails(
                PaymentBalanceActivityFreeProcessingDetail typeFreeProcessingDetails) {
            this.typeFreeProcessingDetails = Optional.ofNullable(typeFreeProcessingDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_free_processing_details", nulls = Nulls.SKIP)
        public _FinalStage typeFreeProcessingDetails(
                Optional<PaymentBalanceActivityFreeProcessingDetail> typeFreeProcessingDetails) {
            this.typeFreeProcessingDetails = typeFreeProcessingDetails;
            return this;
        }

        /**
         * <p>Details of adjustments due to the Square processing fee.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeFeeDetails(PaymentBalanceActivityFeeDetail typeFeeDetails) {
            this.typeFeeDetails = Optional.ofNullable(typeFeeDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_fee_details", nulls = Nulls.SKIP)
        public _FinalStage typeFeeDetails(Optional<PaymentBalanceActivityFeeDetail> typeFeeDetails) {
            this.typeFeeDetails = typeFeeDetails;
            return this;
        }

        /**
         * <p>Details of any balance change due to a dispute event.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeDisputeDetails(PaymentBalanceActivityDisputeDetail typeDisputeDetails) {
            this.typeDisputeDetails = Optional.ofNullable(typeDisputeDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_dispute_details", nulls = Nulls.SKIP)
        public _FinalStage typeDisputeDetails(Optional<PaymentBalanceActivityDisputeDetail> typeDisputeDetails) {
            this.typeDisputeDetails = typeDisputeDetails;
            return this;
        }

        /**
         * <p>Details of any reversal or refund of fees involved with deposits such as for instant deposits.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeDepositFeeReversedDetails(
                PaymentBalanceActivityDepositFeeReversedDetail typeDepositFeeReversedDetails) {
            this.typeDepositFeeReversedDetails = Optional.ofNullable(typeDepositFeeReversedDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_deposit_fee_reversed_details", nulls = Nulls.SKIP)
        public _FinalStage typeDepositFeeReversedDetails(
                Optional<PaymentBalanceActivityDepositFeeReversedDetail> typeDepositFeeReversedDetails) {
            this.typeDepositFeeReversedDetails = typeDepositFeeReversedDetails;
            return this;
        }

        /**
         * <p>Details of any fees involved with deposits such as for instant deposits.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeDepositFeeDetails(PaymentBalanceActivityDepositFeeDetail typeDepositFeeDetails) {
            this.typeDepositFeeDetails = Optional.ofNullable(typeDepositFeeDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_deposit_fee_details", nulls = Nulls.SKIP)
        public _FinalStage typeDepositFeeDetails(
                Optional<PaymentBalanceActivityDepositFeeDetail> typeDepositFeeDetails) {
            this.typeDepositFeeDetails = typeDepositFeeDetails;
            return this;
        }

        /**
         * <p>Details of credit card payment captures.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeChargeDetails(PaymentBalanceActivityChargeDetail typeChargeDetails) {
            this.typeChargeDetails = Optional.ofNullable(typeChargeDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_charge_details", nulls = Nulls.SKIP)
        public _FinalStage typeChargeDetails(Optional<PaymentBalanceActivityChargeDetail> typeChargeDetails) {
            this.typeChargeDetails = typeChargeDetails;
            return this;
        }

        /**
         * <p>Details of any automatic transfer from the Square Savings account back to the processing balance. These are, generally, proportional to the merchant's refunds.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeAutomaticSavingsReversedDetails(
                PaymentBalanceActivityAutomaticSavingsReversedDetail typeAutomaticSavingsReversedDetails) {
            this.typeAutomaticSavingsReversedDetails = Optional.ofNullable(typeAutomaticSavingsReversedDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_automatic_savings_reversed_details", nulls = Nulls.SKIP)
        public _FinalStage typeAutomaticSavingsReversedDetails(
                Optional<PaymentBalanceActivityAutomaticSavingsReversedDetail> typeAutomaticSavingsReversedDetails) {
            this.typeAutomaticSavingsReversedDetails = typeAutomaticSavingsReversedDetails;
            return this;
        }

        /**
         * <p>Details of any automatic transfer from the payment processing balance to the Square Savings account. These are, generally, proportional to the merchant's sales.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeAutomaticSavingsDetails(
                PaymentBalanceActivityAutomaticSavingsDetail typeAutomaticSavingsDetails) {
            this.typeAutomaticSavingsDetails = Optional.ofNullable(typeAutomaticSavingsDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_automatic_savings_details", nulls = Nulls.SKIP)
        public _FinalStage typeAutomaticSavingsDetails(
                Optional<PaymentBalanceActivityAutomaticSavingsDetail> typeAutomaticSavingsDetails) {
            this.typeAutomaticSavingsDetails = typeAutomaticSavingsDetails;
            return this;
        }

        /**
         * <p>Details of a refund for an app fee on a payment.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeAppFeeRefundDetails(PaymentBalanceActivityAppFeeRefundDetail typeAppFeeRefundDetails) {
            this.typeAppFeeRefundDetails = Optional.ofNullable(typeAppFeeRefundDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_app_fee_refund_details", nulls = Nulls.SKIP)
        public _FinalStage typeAppFeeRefundDetails(
                Optional<PaymentBalanceActivityAppFeeRefundDetail> typeAppFeeRefundDetails) {
            this.typeAppFeeRefundDetails = typeAppFeeRefundDetails;
            return this;
        }

        /**
         * <p>Details of any developer app fee revenue generated on a payment.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage typeAppFeeRevenueDetails(
                PaymentBalanceActivityAppFeeRevenueDetail typeAppFeeRevenueDetails) {
            this.typeAppFeeRevenueDetails = Optional.ofNullable(typeAppFeeRevenueDetails);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type_app_fee_revenue_details", nulls = Nulls.SKIP)
        public _FinalStage typeAppFeeRevenueDetails(
                Optional<PaymentBalanceActivityAppFeeRevenueDetail> typeAppFeeRevenueDetails) {
            this.typeAppFeeRevenueDetails = typeAppFeeRevenueDetails;
            return this;
        }

        /**
         * <p>The net proceeds from this transaction after any fees.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage netAmountMoney(Money netAmountMoney) {
            this.netAmountMoney = Optional.ofNullable(netAmountMoney);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "net_amount_money", nulls = Nulls.SKIP)
        public _FinalStage netAmountMoney(Optional<Money> netAmountMoney) {
            this.netAmountMoney = netAmountMoney;
            return this;
        }

        /**
         * <p>The amount of Square fees associated with this payout entry.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage feeAmountMoney(Money feeAmountMoney) {
            this.feeAmountMoney = Optional.ofNullable(feeAmountMoney);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "fee_amount_money", nulls = Nulls.SKIP)
        public _FinalStage feeAmountMoney(Optional<Money> feeAmountMoney) {
            this.feeAmountMoney = feeAmountMoney;
            return this;
        }

        /**
         * <p>The amount of money involved in this payout entry.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage grossAmountMoney(Money grossAmountMoney) {
            this.grossAmountMoney = Optional.ofNullable(grossAmountMoney);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "gross_amount_money", nulls = Nulls.SKIP)
        public _FinalStage grossAmountMoney(Optional<Money> grossAmountMoney) {
            this.grossAmountMoney = grossAmountMoney;
            return this;
        }

        /**
         * <p>The type of activity associated with this payout entry.
         * See <a href="#type-activitytype">ActivityType</a> for possible values</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage type(ActivityType type) {
            this.type = Optional.ofNullable(type);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type", nulls = Nulls.SKIP)
        public _FinalStage type(Optional<ActivityType> type) {
            this.type = type;
            return this;
        }

        /**
         * <p>The timestamp of when the payout entry affected the balance, in RFC 3339 format.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage effectiveAt(Nullable<String> effectiveAt) {
            if (effectiveAt.isNull()) {
                this.effectiveAt = null;
            } else if (effectiveAt.isEmpty()) {
                this.effectiveAt = Optional.empty();
            } else {
                this.effectiveAt = Optional.of(effectiveAt.get());
            }
            return this;
        }

        /**
         * <p>The timestamp of when the payout entry affected the balance, in RFC 3339 format.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage effectiveAt(String effectiveAt) {
            this.effectiveAt = Optional.ofNullable(effectiveAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "effective_at", nulls = Nulls.SKIP)
        public _FinalStage effectiveAt(Optional<String> effectiveAt) {
            this.effectiveAt = effectiveAt;
            return this;
        }

        @java.lang.Override
        public PayoutEntry build() {
            return new PayoutEntry(
                    id,
                    payoutId,
                    effectiveAt,
                    type,
                    grossAmountMoney,
                    feeAmountMoney,
                    netAmountMoney,
                    typeAppFeeRevenueDetails,
                    typeAppFeeRefundDetails,
                    typeAutomaticSavingsDetails,
                    typeAutomaticSavingsReversedDetails,
                    typeChargeDetails,
                    typeDepositFeeDetails,
                    typeDepositFeeReversedDetails,
                    typeDisputeDetails,
                    typeFeeDetails,
                    typeFreeProcessingDetails,
                    typeHoldAdjustmentDetails,
                    typeOpenDisputeDetails,
                    typeOtherDetails,
                    typeOtherAdjustmentDetails,
                    typeRefundDetails,
                    typeReleaseAdjustmentDetails,
                    typeReserveHoldDetails,
                    typeReserveReleaseDetails,
                    typeSquareCapitalPaymentDetails,
                    typeSquareCapitalReversedPaymentDetails,
                    typeTaxOnFeeDetails,
                    typeThirdPartyFeeDetails,
                    typeThirdPartyFeeRefundDetails,
                    typeSquarePayrollTransferDetails,
                    typeSquarePayrollTransferReversedDetails,
                    additionalProperties);
        }
    }
}
