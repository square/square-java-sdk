/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SegmentFilter.Builder.class)
public final class SegmentFilter {
    private final String serviceVariationId;

    private final Optional<FilterValue> teamMemberIdFilter;

    private final Map<String, Object> additionalProperties;

    private SegmentFilter(
            String serviceVariationId,
            Optional<FilterValue> teamMemberIdFilter,
            Map<String, Object> additionalProperties) {
        this.serviceVariationId = serviceVariationId;
        this.teamMemberIdFilter = teamMemberIdFilter;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the <a href="entity:CatalogItemVariation">CatalogItemVariation</a> object representing the service booked in this segment.
     */
    @JsonProperty("service_variation_id")
    public String getServiceVariationId() {
        return serviceVariationId;
    }

    /**
     * @return A query filter to search for buyer-accessible appointment segments with service-providing team members matching the specified list of team member IDs.  Supported query expressions are
     * <ul>
     * <li><code>ANY</code>: return the appointment segments with team members whose IDs match any member in this list.</li>
     * <li><code>NONE</code>: return the appointment segments with team members whose IDs are not in this list.</li>
     * <li><code>ALL</code>: not supported.</li>
     * </ul>
     * <p>When no expression is specified, any service-providing team member is eligible to fulfill the Booking.</p>
     */
    @JsonProperty("team_member_id_filter")
    public Optional<FilterValue> getTeamMemberIdFilter() {
        return teamMemberIdFilter;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SegmentFilter && equalTo((SegmentFilter) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SegmentFilter other) {
        return serviceVariationId.equals(other.serviceVariationId)
                && teamMemberIdFilter.equals(other.teamMemberIdFilter);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.serviceVariationId, this.teamMemberIdFilter);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ServiceVariationIdStage builder() {
        return new Builder();
    }

    public interface ServiceVariationIdStage {
        _FinalStage serviceVariationId(@NotNull String serviceVariationId);

        Builder from(SegmentFilter other);
    }

    public interface _FinalStage {
        SegmentFilter build();

        _FinalStage teamMemberIdFilter(Optional<FilterValue> teamMemberIdFilter);

        _FinalStage teamMemberIdFilter(FilterValue teamMemberIdFilter);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ServiceVariationIdStage, _FinalStage {
        private String serviceVariationId;

        private Optional<FilterValue> teamMemberIdFilter = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SegmentFilter other) {
            serviceVariationId(other.getServiceVariationId());
            teamMemberIdFilter(other.getTeamMemberIdFilter());
            return this;
        }

        /**
         * <p>The ID of the <a href="entity:CatalogItemVariation">CatalogItemVariation</a> object representing the service booked in this segment.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("service_variation_id")
        public _FinalStage serviceVariationId(@NotNull String serviceVariationId) {
            this.serviceVariationId = Objects.requireNonNull(serviceVariationId, "serviceVariationId must not be null");
            return this;
        }

        /**
         * <p>A query filter to search for buyer-accessible appointment segments with service-providing team members matching the specified list of team member IDs.  Supported query expressions are</p>
         * <ul>
         * <li><code>ANY</code>: return the appointment segments with team members whose IDs match any member in this list.</li>
         * <li><code>NONE</code>: return the appointment segments with team members whose IDs are not in this list.</li>
         * <li><code>ALL</code>: not supported.</li>
         * </ul>
         * <p>When no expression is specified, any service-providing team member is eligible to fulfill the Booking.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage teamMemberIdFilter(FilterValue teamMemberIdFilter) {
            this.teamMemberIdFilter = Optional.ofNullable(teamMemberIdFilter);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "team_member_id_filter", nulls = Nulls.SKIP)
        public _FinalStage teamMemberIdFilter(Optional<FilterValue> teamMemberIdFilter) {
            this.teamMemberIdFilter = teamMemberIdFilter;
            return this;
        }

        @java.lang.Override
        public SegmentFilter build() {
            return new SegmentFilter(serviceVariationId, teamMemberIdFilter, additionalProperties);
        }
    }
}
