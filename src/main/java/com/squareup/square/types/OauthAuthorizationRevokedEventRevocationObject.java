/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = OauthAuthorizationRevokedEventRevocationObject.Builder.class)
public final class OauthAuthorizationRevokedEventRevocationObject {
    private final Optional<String> revokedAt;

    private final Optional<OauthAuthorizationRevokedEventRevokerType> revokerType;

    private final Map<String, Object> additionalProperties;

    private OauthAuthorizationRevokedEventRevocationObject(
            Optional<String> revokedAt,
            Optional<OauthAuthorizationRevokedEventRevokerType> revokerType,
            Map<String, Object> additionalProperties) {
        this.revokedAt = revokedAt;
        this.revokerType = revokerType;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Timestamp of when the revocation event occurred, in RFC 3339 format.
     */
    @JsonIgnore
    public Optional<String> getRevokedAt() {
        if (revokedAt == null) {
            return Optional.empty();
        }
        return revokedAt;
    }

    /**
     * @return Type of client that performed the revocation, either APPLICATION, MERCHANT, or SQUARE.
     * See <a href="#type-oauthauthorizationrevokedeventrevokertype">OauthAuthorizationRevokedEventRevokerType</a> for possible values
     */
    @JsonProperty("revoker_type")
    public Optional<OauthAuthorizationRevokedEventRevokerType> getRevokerType() {
        return revokerType;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("revoked_at")
    private Optional<String> _getRevokedAt() {
        return revokedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof OauthAuthorizationRevokedEventRevocationObject
                && equalTo((OauthAuthorizationRevokedEventRevocationObject) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(OauthAuthorizationRevokedEventRevocationObject other) {
        return revokedAt.equals(other.revokedAt) && revokerType.equals(other.revokerType);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.revokedAt, this.revokerType);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> revokedAt = Optional.empty();

        private Optional<OauthAuthorizationRevokedEventRevokerType> revokerType = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(OauthAuthorizationRevokedEventRevocationObject other) {
            revokedAt(other.getRevokedAt());
            revokerType(other.getRevokerType());
            return this;
        }

        /**
         * <p>Timestamp of when the revocation event occurred, in RFC 3339 format.</p>
         */
        @JsonSetter(value = "revoked_at", nulls = Nulls.SKIP)
        public Builder revokedAt(Optional<String> revokedAt) {
            this.revokedAt = revokedAt;
            return this;
        }

        public Builder revokedAt(String revokedAt) {
            this.revokedAt = Optional.ofNullable(revokedAt);
            return this;
        }

        public Builder revokedAt(Nullable<String> revokedAt) {
            if (revokedAt.isNull()) {
                this.revokedAt = null;
            } else if (revokedAt.isEmpty()) {
                this.revokedAt = Optional.empty();
            } else {
                this.revokedAt = Optional.of(revokedAt.get());
            }
            return this;
        }

        /**
         * <p>Type of client that performed the revocation, either APPLICATION, MERCHANT, or SQUARE.
         * See <a href="#type-oauthauthorizationrevokedeventrevokertype">OauthAuthorizationRevokedEventRevokerType</a> for possible values</p>
         */
        @JsonSetter(value = "revoker_type", nulls = Nulls.SKIP)
        public Builder revokerType(Optional<OauthAuthorizationRevokedEventRevokerType> revokerType) {
            this.revokerType = revokerType;
            return this;
        }

        public Builder revokerType(OauthAuthorizationRevokedEventRevokerType revokerType) {
            this.revokerType = Optional.ofNullable(revokerType);
            return this;
        }

        public OauthAuthorizationRevokedEventRevocationObject build() {
            return new OauthAuthorizationRevokedEventRevocationObject(revokedAt, revokerType, additionalProperties);
        }
    }
}
