/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PublishScheduledShiftRequest.Builder.class)
public final class PublishScheduledShiftRequest {
    private final String id;

    private final String idempotencyKey;

    private final Optional<Integer> version;

    private final Optional<ScheduledShiftNotificationAudience> scheduledShiftNotificationAudience;

    private final Map<String, Object> additionalProperties;

    private PublishScheduledShiftRequest(
            String id,
            String idempotencyKey,
            Optional<Integer> version,
            Optional<ScheduledShiftNotificationAudience> scheduledShiftNotificationAudience,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.idempotencyKey = idempotencyKey;
        this.version = version;
        this.scheduledShiftNotificationAudience = scheduledShiftNotificationAudience;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the scheduled shift to publish.
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return A unique identifier for the <code>PublishScheduledShift</code> request, used to ensure the
     * <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">idempotency</a>
     * of the operation.
     */
    @JsonProperty("idempotency_key")
    public String getIdempotencyKey() {
        return idempotencyKey;
    }

    /**
     * @return The current version of the scheduled shift, used to enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
     * control. If the provided version doesn't match the server version, the request fails.
     * If omitted, Square executes a blind write, potentially overwriting data from another publish request.
     */
    @JsonProperty("version")
    public Optional<Integer> getVersion() {
        return version;
    }

    /**
     * @return Indicates whether Square should send an email notification to team members and
     * which team members should receive the notification. The default value is <code>AFFECTED</code>.
     * See <a href="#type-scheduledshiftnotificationaudience">ScheduledShiftNotificationAudience</a> for possible values
     */
    @JsonProperty("scheduled_shift_notification_audience")
    public Optional<ScheduledShiftNotificationAudience> getScheduledShiftNotificationAudience() {
        return scheduledShiftNotificationAudience;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PublishScheduledShiftRequest && equalTo((PublishScheduledShiftRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PublishScheduledShiftRequest other) {
        return id.equals(other.id)
                && idempotencyKey.equals(other.idempotencyKey)
                && version.equals(other.version)
                && scheduledShiftNotificationAudience.equals(other.scheduledShiftNotificationAudience);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.idempotencyKey, this.version, this.scheduledShiftNotificationAudience);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>The ID of the scheduled shift to publish.</p>
         */
        IdempotencyKeyStage id(@NotNull String id);

        Builder from(PublishScheduledShiftRequest other);
    }

    public interface IdempotencyKeyStage {
        /**
         * <p>A unique identifier for the <code>PublishScheduledShift</code> request, used to ensure the
         * <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">idempotency</a>
         * of the operation.</p>
         */
        _FinalStage idempotencyKey(@NotNull String idempotencyKey);
    }

    public interface _FinalStage {
        PublishScheduledShiftRequest build();

        /**
         * <p>The current version of the scheduled shift, used to enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
         * control. If the provided version doesn't match the server version, the request fails.
         * If omitted, Square executes a blind write, potentially overwriting data from another publish request.</p>
         */
        _FinalStage version(Optional<Integer> version);

        _FinalStage version(Integer version);

        /**
         * <p>Indicates whether Square should send an email notification to team members and
         * which team members should receive the notification. The default value is <code>AFFECTED</code>.
         * See <a href="#type-scheduledshiftnotificationaudience">ScheduledShiftNotificationAudience</a> for possible values</p>
         */
        _FinalStage scheduledShiftNotificationAudience(
                Optional<ScheduledShiftNotificationAudience> scheduledShiftNotificationAudience);

        _FinalStage scheduledShiftNotificationAudience(
                ScheduledShiftNotificationAudience scheduledShiftNotificationAudience);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, IdempotencyKeyStage, _FinalStage {
        private String id;

        private String idempotencyKey;

        private Optional<ScheduledShiftNotificationAudience> scheduledShiftNotificationAudience = Optional.empty();

        private Optional<Integer> version = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PublishScheduledShiftRequest other) {
            id(other.getId());
            idempotencyKey(other.getIdempotencyKey());
            version(other.getVersion());
            scheduledShiftNotificationAudience(other.getScheduledShiftNotificationAudience());
            return this;
        }

        /**
         * <p>The ID of the scheduled shift to publish.</p>
         * <p>The ID of the scheduled shift to publish.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public IdempotencyKeyStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>A unique identifier for the <code>PublishScheduledShift</code> request, used to ensure the
         * <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">idempotency</a>
         * of the operation.</p>
         * <p>A unique identifier for the <code>PublishScheduledShift</code> request, used to ensure the
         * <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">idempotency</a>
         * of the operation.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("idempotency_key")
        public _FinalStage idempotencyKey(@NotNull String idempotencyKey) {
            this.idempotencyKey = Objects.requireNonNull(idempotencyKey, "idempotencyKey must not be null");
            return this;
        }

        /**
         * <p>Indicates whether Square should send an email notification to team members and
         * which team members should receive the notification. The default value is <code>AFFECTED</code>.
         * See <a href="#type-scheduledshiftnotificationaudience">ScheduledShiftNotificationAudience</a> for possible values</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage scheduledShiftNotificationAudience(
                ScheduledShiftNotificationAudience scheduledShiftNotificationAudience) {
            this.scheduledShiftNotificationAudience = Optional.ofNullable(scheduledShiftNotificationAudience);
            return this;
        }

        /**
         * <p>Indicates whether Square should send an email notification to team members and
         * which team members should receive the notification. The default value is <code>AFFECTED</code>.
         * See <a href="#type-scheduledshiftnotificationaudience">ScheduledShiftNotificationAudience</a> for possible values</p>
         */
        @java.lang.Override
        @JsonSetter(value = "scheduled_shift_notification_audience", nulls = Nulls.SKIP)
        public _FinalStage scheduledShiftNotificationAudience(
                Optional<ScheduledShiftNotificationAudience> scheduledShiftNotificationAudience) {
            this.scheduledShiftNotificationAudience = scheduledShiftNotificationAudience;
            return this;
        }

        /**
         * <p>The current version of the scheduled shift, used to enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
         * control. If the provided version doesn't match the server version, the request fails.
         * If omitted, Square executes a blind write, potentially overwriting data from another publish request.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage version(Integer version) {
            this.version = Optional.ofNullable(version);
            return this;
        }

        /**
         * <p>The current version of the scheduled shift, used to enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
         * control. If the provided version doesn't match the server version, the request fails.
         * If omitted, Square executes a blind write, potentially overwriting data from another publish request.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "version", nulls = Nulls.SKIP)
        public _FinalStage version(Optional<Integer> version) {
            this.version = version;
            return this;
        }

        @java.lang.Override
        public PublishScheduledShiftRequest build() {
            return new PublishScheduledShiftRequest(
                    id, idempotencyKey, version, scheduledShiftNotificationAudience, additionalProperties);
        }
    }
}
