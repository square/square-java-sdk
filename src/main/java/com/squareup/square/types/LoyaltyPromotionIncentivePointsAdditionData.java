/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = LoyaltyPromotionIncentivePointsAdditionData.Builder.class)
public final class LoyaltyPromotionIncentivePointsAdditionData {
    private final int pointsAddition;

    private final Map<String, Object> additionalProperties;

    private LoyaltyPromotionIncentivePointsAdditionData(int pointsAddition, Map<String, Object> additionalProperties) {
        this.pointsAddition = pointsAddition;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The number of additional points to earn each time the promotion is triggered. For example,
     * suppose a purchase qualifies for 5 points from the base loyalty program. If the purchase also
     * qualifies for a <code>POINTS_ADDITION</code> promotion incentive with a <code>points_addition</code> of 3, the buyer
     * earns a total of 8 points (5 program points + 3 promotion points = 8 points).
     */
    @JsonProperty("points_addition")
    public int getPointsAddition() {
        return pointsAddition;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LoyaltyPromotionIncentivePointsAdditionData
                && equalTo((LoyaltyPromotionIncentivePointsAdditionData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LoyaltyPromotionIncentivePointsAdditionData other) {
        return pointsAddition == other.pointsAddition;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.pointsAddition);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PointsAdditionStage builder() {
        return new Builder();
    }

    public interface PointsAdditionStage {
        /**
         * <p>The number of additional points to earn each time the promotion is triggered. For example,
         * suppose a purchase qualifies for 5 points from the base loyalty program. If the purchase also
         * qualifies for a <code>POINTS_ADDITION</code> promotion incentive with a <code>points_addition</code> of 3, the buyer
         * earns a total of 8 points (5 program points + 3 promotion points = 8 points).</p>
         */
        _FinalStage pointsAddition(int pointsAddition);

        Builder from(LoyaltyPromotionIncentivePointsAdditionData other);
    }

    public interface _FinalStage {
        LoyaltyPromotionIncentivePointsAdditionData build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PointsAdditionStage, _FinalStage {
        private int pointsAddition;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LoyaltyPromotionIncentivePointsAdditionData other) {
            pointsAddition(other.getPointsAddition());
            return this;
        }

        /**
         * <p>The number of additional points to earn each time the promotion is triggered. For example,
         * suppose a purchase qualifies for 5 points from the base loyalty program. If the purchase also
         * qualifies for a <code>POINTS_ADDITION</code> promotion incentive with a <code>points_addition</code> of 3, the buyer
         * earns a total of 8 points (5 program points + 3 promotion points = 8 points).</p>
         * <p>The number of additional points to earn each time the promotion is triggered. For example,
         * suppose a purchase qualifies for 5 points from the base loyalty program. If the purchase also
         * qualifies for a <code>POINTS_ADDITION</code> promotion incentive with a <code>points_addition</code> of 3, the buyer
         * earns a total of 8 points (5 program points + 3 promotion points = 8 points).</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("points_addition")
        public _FinalStage pointsAddition(int pointsAddition) {
            this.pointsAddition = pointsAddition;
            return this;
        }

        @java.lang.Override
        public LoyaltyPromotionIncentivePointsAdditionData build() {
            return new LoyaltyPromotionIncentivePointsAdditionData(pointsAddition, additionalProperties);
        }
    }
}
