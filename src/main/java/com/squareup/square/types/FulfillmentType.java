/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class FulfillmentType {
    public static final FulfillmentType PICKUP = new FulfillmentType(Value.PICKUP, "PICKUP");

    public static final FulfillmentType SHIPMENT = new FulfillmentType(Value.SHIPMENT, "SHIPMENT");

    public static final FulfillmentType DELIVERY = new FulfillmentType(Value.DELIVERY, "DELIVERY");

    private final Value value;

    private final String string;

    FulfillmentType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof FulfillmentType && this.string.equals(((FulfillmentType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case PICKUP:
                return visitor.visitPickup();
            case SHIPMENT:
                return visitor.visitShipment();
            case DELIVERY:
                return visitor.visitDelivery();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static FulfillmentType valueOf(String value) {
        switch (value) {
            case "PICKUP":
                return PICKUP;
            case "SHIPMENT":
                return SHIPMENT;
            case "DELIVERY":
                return DELIVERY;
            default:
                return new FulfillmentType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        PICKUP,

        SHIPMENT,

        DELIVERY,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitPickup();

        T visitShipment();

        T visitDelivery();

        T visitUnknown(String unknownType);
    }
}
