/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CustomerCustomAttributeFilter.Builder.class)
public final class CustomerCustomAttributeFilter {
    private final String key;

    private final Optional<CustomerCustomAttributeFilterValue> filter;

    private final Optional<TimeRange> updatedAt;

    private final Map<String, Object> additionalProperties;

    private CustomerCustomAttributeFilter(
            String key,
            Optional<CustomerCustomAttributeFilterValue> filter,
            Optional<TimeRange> updatedAt,
            Map<String, Object> additionalProperties) {
        this.key = key;
        this.filter = filter;
        this.updatedAt = updatedAt;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The <code>key</code> of the <a href="entity:CustomAttribute">custom attribute</a> to filter by. The key is the identifier of the custom attribute
     * (and the corresponding custom attribute definition) and can be retrieved using the <a href="api:CustomerCustomAttributes">Customer Custom Attributes API</a>.
     */
    @JsonProperty("key")
    public String getKey() {
        return key;
    }

    /**
     * @return A filter that corresponds to the data type of the target custom attribute. For example, provide the <code>phone</code> filter to
     * search based on the value of a <code>PhoneNumber</code>-type custom attribute. The data type is specified by the schema field of the custom attribute definition,
     * which can be retrieved using the <a href="api:CustomerCustomAttributes">Customer Custom Attributes API</a>.
     * <p>You must provide this <code>filter</code> field, the <code>updated_at</code> field, or both.</p>
     */
    @JsonProperty("filter")
    public Optional<CustomerCustomAttributeFilterValue> getFilter() {
        return filter;
    }

    /**
     * @return The date range for when the custom attribute was last updated. The date range can include <code>start_at</code>, <code>end_at</code>, or
     * both. Range boundaries are inclusive. Dates are specified as RFC 3339 timestamps.
     * <p>You must provide this <code>updated_at</code> field, the <code>filter</code> field, or both.</p>
     */
    @JsonProperty("updated_at")
    public Optional<TimeRange> getUpdatedAt() {
        return updatedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CustomerCustomAttributeFilter && equalTo((CustomerCustomAttributeFilter) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CustomerCustomAttributeFilter other) {
        return key.equals(other.key) && filter.equals(other.filter) && updatedAt.equals(other.updatedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.key, this.filter, this.updatedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static KeyStage builder() {
        return new Builder();
    }

    public interface KeyStage {
        _FinalStage key(@NotNull String key);

        Builder from(CustomerCustomAttributeFilter other);
    }

    public interface _FinalStage {
        CustomerCustomAttributeFilter build();

        _FinalStage filter(Optional<CustomerCustomAttributeFilterValue> filter);

        _FinalStage filter(CustomerCustomAttributeFilterValue filter);

        _FinalStage updatedAt(Optional<TimeRange> updatedAt);

        _FinalStage updatedAt(TimeRange updatedAt);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements KeyStage, _FinalStage {
        private String key;

        private Optional<TimeRange> updatedAt = Optional.empty();

        private Optional<CustomerCustomAttributeFilterValue> filter = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CustomerCustomAttributeFilter other) {
            key(other.getKey());
            filter(other.getFilter());
            updatedAt(other.getUpdatedAt());
            return this;
        }

        /**
         * <p>The <code>key</code> of the <a href="entity:CustomAttribute">custom attribute</a> to filter by. The key is the identifier of the custom attribute
         * (and the corresponding custom attribute definition) and can be retrieved using the <a href="api:CustomerCustomAttributes">Customer Custom Attributes API</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("key")
        public _FinalStage key(@NotNull String key) {
            this.key = Objects.requireNonNull(key, "key must not be null");
            return this;
        }

        /**
         * <p>The date range for when the custom attribute was last updated. The date range can include <code>start_at</code>, <code>end_at</code>, or
         * both. Range boundaries are inclusive. Dates are specified as RFC 3339 timestamps.</p>
         * <p>You must provide this <code>updated_at</code> field, the <code>filter</code> field, or both.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage updatedAt(TimeRange updatedAt) {
            this.updatedAt = Optional.ofNullable(updatedAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "updated_at", nulls = Nulls.SKIP)
        public _FinalStage updatedAt(Optional<TimeRange> updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * <p>A filter that corresponds to the data type of the target custom attribute. For example, provide the <code>phone</code> filter to
         * search based on the value of a <code>PhoneNumber</code>-type custom attribute. The data type is specified by the schema field of the custom attribute definition,
         * which can be retrieved using the <a href="api:CustomerCustomAttributes">Customer Custom Attributes API</a>.</p>
         * <p>You must provide this <code>filter</code> field, the <code>updated_at</code> field, or both.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage filter(CustomerCustomAttributeFilterValue filter) {
            this.filter = Optional.ofNullable(filter);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "filter", nulls = Nulls.SKIP)
        public _FinalStage filter(Optional<CustomerCustomAttributeFilterValue> filter) {
            this.filter = filter;
            return this;
        }

        @java.lang.Override
        public CustomerCustomAttributeFilter build() {
            return new CustomerCustomAttributeFilter(key, filter, updatedAt, additionalProperties);
        }
    }
}
