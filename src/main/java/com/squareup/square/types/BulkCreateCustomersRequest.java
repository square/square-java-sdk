/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BulkCreateCustomersRequest.Builder.class)
public final class BulkCreateCustomersRequest {
    private final Map<String, BulkCreateCustomerData> customers;

    private final Map<String, Object> additionalProperties;

    private BulkCreateCustomersRequest(
            Map<String, BulkCreateCustomerData> customers, Map<String, Object> additionalProperties) {
        this.customers = customers;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A map of 1 to 100 individual create requests, represented by <code>idempotency key: { customer data }</code>
     * key-value pairs.
     * <p>Each key is an <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">idempotency key</a>
     * that uniquely identifies the create request. Each value contains the customer data used to create the
     * customer profile.</p>
     */
    @JsonProperty("customers")
    public Map<String, BulkCreateCustomerData> getCustomers() {
        return customers;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkCreateCustomersRequest && equalTo((BulkCreateCustomersRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkCreateCustomersRequest other) {
        return customers.equals(other.customers);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.customers);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Map<String, BulkCreateCustomerData> customers = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BulkCreateCustomersRequest other) {
            customers(other.getCustomers());
            return this;
        }

        /**
         * <p>A map of 1 to 100 individual create requests, represented by <code>idempotency key: { customer data }</code>
         * key-value pairs.</p>
         * <p>Each key is an <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">idempotency key</a>
         * that uniquely identifies the create request. Each value contains the customer data used to create the
         * customer profile.</p>
         */
        @JsonSetter(value = "customers", nulls = Nulls.SKIP)
        public Builder customers(Map<String, BulkCreateCustomerData> customers) {
            this.customers.clear();
            this.customers.putAll(customers);
            return this;
        }

        public Builder putAllCustomers(Map<String, BulkCreateCustomerData> customers) {
            this.customers.putAll(customers);
            return this;
        }

        public Builder customers(String key, BulkCreateCustomerData value) {
            this.customers.put(key, value);
            return this;
        }

        public BulkCreateCustomersRequest build() {
            return new BulkCreateCustomersRequest(customers, additionalProperties);
        }
    }
}
