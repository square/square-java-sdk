/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = DeletePaymentLinkResponse.Builder.class)
public final class DeletePaymentLinkResponse {
    private final Optional<List<Error>> errors;

    private final Optional<String> id;

    private final Optional<String> cancelledOrderId;

    private final Map<String, Object> additionalProperties;

    private DeletePaymentLinkResponse(
            Optional<List<Error>> errors,
            Optional<String> id,
            Optional<String> cancelledOrderId,
            Map<String, Object> additionalProperties) {
        this.errors = errors;
        this.id = id;
        this.cancelledOrderId = cancelledOrderId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("errors")
    public Optional<List<Error>> getErrors() {
        return errors;
    }

    /**
     * @return The ID of the link that is deleted.
     */
    @JsonProperty("id")
    public Optional<String> getId() {
        return id;
    }

    /**
     * @return The ID of the order that is canceled. When a payment link is deleted, Square updates the
     * the <code>state</code> (of the order that the checkout link created) to CANCELED.
     */
    @JsonProperty("cancelled_order_id")
    public Optional<String> getCancelledOrderId() {
        return cancelledOrderId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof DeletePaymentLinkResponse && equalTo((DeletePaymentLinkResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(DeletePaymentLinkResponse other) {
        return errors.equals(other.errors) && id.equals(other.id) && cancelledOrderId.equals(other.cancelledOrderId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.errors, this.id, this.cancelledOrderId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<Error>> errors = Optional.empty();

        private Optional<String> id = Optional.empty();

        private Optional<String> cancelledOrderId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(DeletePaymentLinkResponse other) {
            errors(other.getErrors());
            id(other.getId());
            cancelledOrderId(other.getCancelledOrderId());
            return this;
        }

        @JsonSetter(value = "errors", nulls = Nulls.SKIP)
        public Builder errors(Optional<List<Error>> errors) {
            this.errors = errors;
            return this;
        }

        public Builder errors(List<Error> errors) {
            this.errors = Optional.ofNullable(errors);
            return this;
        }

        /**
         * <p>The ID of the link that is deleted.</p>
         */
        @JsonSetter(value = "id", nulls = Nulls.SKIP)
        public Builder id(Optional<String> id) {
            this.id = id;
            return this;
        }

        public Builder id(String id) {
            this.id = Optional.ofNullable(id);
            return this;
        }

        /**
         * <p>The ID of the order that is canceled. When a payment link is deleted, Square updates the
         * the <code>state</code> (of the order that the checkout link created) to CANCELED.</p>
         */
        @JsonSetter(value = "cancelled_order_id", nulls = Nulls.SKIP)
        public Builder cancelledOrderId(Optional<String> cancelledOrderId) {
            this.cancelledOrderId = cancelledOrderId;
            return this;
        }

        public Builder cancelledOrderId(String cancelledOrderId) {
            this.cancelledOrderId = Optional.ofNullable(cancelledOrderId);
            return this;
        }

        public DeletePaymentLinkResponse build() {
            return new DeletePaymentLinkResponse(errors, id, cancelledOrderId, additionalProperties);
        }
    }
}
