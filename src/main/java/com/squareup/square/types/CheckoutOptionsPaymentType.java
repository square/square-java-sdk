/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class CheckoutOptionsPaymentType {
    public static final CheckoutOptionsPaymentType FELICA_TRANSPORTATION_GROUP =
            new CheckoutOptionsPaymentType(Value.FELICA_TRANSPORTATION_GROUP, "FELICA_TRANSPORTATION_GROUP");

    public static final CheckoutOptionsPaymentType FELICA_QUICPAY =
            new CheckoutOptionsPaymentType(Value.FELICA_QUICPAY, "FELICA_QUICPAY");

    public static final CheckoutOptionsPaymentType FELICA_ALL =
            new CheckoutOptionsPaymentType(Value.FELICA_ALL, "FELICA_ALL");

    public static final CheckoutOptionsPaymentType CARD_PRESENT =
            new CheckoutOptionsPaymentType(Value.CARD_PRESENT, "CARD_PRESENT");

    public static final CheckoutOptionsPaymentType FELICA_ID =
            new CheckoutOptionsPaymentType(Value.FELICA_ID, "FELICA_ID");

    public static final CheckoutOptionsPaymentType PAYPAY = new CheckoutOptionsPaymentType(Value.PAYPAY, "PAYPAY");

    public static final CheckoutOptionsPaymentType QR_CODE = new CheckoutOptionsPaymentType(Value.QR_CODE, "QR_CODE");

    public static final CheckoutOptionsPaymentType MANUAL_CARD_ENTRY =
            new CheckoutOptionsPaymentType(Value.MANUAL_CARD_ENTRY, "MANUAL_CARD_ENTRY");

    private final Value value;

    private final String string;

    CheckoutOptionsPaymentType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof CheckoutOptionsPaymentType
                        && this.string.equals(((CheckoutOptionsPaymentType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case FELICA_TRANSPORTATION_GROUP:
                return visitor.visitFelicaTransportationGroup();
            case FELICA_QUICPAY:
                return visitor.visitFelicaQuicpay();
            case FELICA_ALL:
                return visitor.visitFelicaAll();
            case CARD_PRESENT:
                return visitor.visitCardPresent();
            case FELICA_ID:
                return visitor.visitFelicaId();
            case PAYPAY:
                return visitor.visitPaypay();
            case QR_CODE:
                return visitor.visitQrCode();
            case MANUAL_CARD_ENTRY:
                return visitor.visitManualCardEntry();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static CheckoutOptionsPaymentType valueOf(String value) {
        switch (value) {
            case "FELICA_TRANSPORTATION_GROUP":
                return FELICA_TRANSPORTATION_GROUP;
            case "FELICA_QUICPAY":
                return FELICA_QUICPAY;
            case "FELICA_ALL":
                return FELICA_ALL;
            case "CARD_PRESENT":
                return CARD_PRESENT;
            case "FELICA_ID":
                return FELICA_ID;
            case "PAYPAY":
                return PAYPAY;
            case "QR_CODE":
                return QR_CODE;
            case "MANUAL_CARD_ENTRY":
                return MANUAL_CARD_ENTRY;
            default:
                return new CheckoutOptionsPaymentType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        CARD_PRESENT,

        MANUAL_CARD_ENTRY,

        FELICA_ID,

        FELICA_QUICPAY,

        FELICA_TRANSPORTATION_GROUP,

        FELICA_ALL,

        PAYPAY,

        QR_CODE,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitCardPresent();

        T visitManualCardEntry();

        T visitFelicaId();

        T visitFelicaQuicpay();

        T visitFelicaTransportationGroup();

        T visitFelicaAll();

        T visitPaypay();

        T visitQrCode();

        T visitUnknown(String unknownType);
    }
}
