/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = LoyaltyAccountExpiringPointDeadline.Builder.class)
public final class LoyaltyAccountExpiringPointDeadline {
    private final int points;

    private final String expiresAt;

    private final Map<String, Object> additionalProperties;

    private LoyaltyAccountExpiringPointDeadline(
            int points, String expiresAt, Map<String, Object> additionalProperties) {
        this.points = points;
        this.expiresAt = expiresAt;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The number of points scheduled to expire at the <code>expires_at</code> timestamp.
     */
    @JsonProperty("points")
    public int getPoints() {
        return points;
    }

    /**
     * @return The timestamp of when the points are scheduled to expire, in RFC 3339 format.
     */
    @JsonProperty("expires_at")
    public String getExpiresAt() {
        return expiresAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LoyaltyAccountExpiringPointDeadline
                && equalTo((LoyaltyAccountExpiringPointDeadline) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LoyaltyAccountExpiringPointDeadline other) {
        return points == other.points && expiresAt.equals(other.expiresAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.points, this.expiresAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PointsStage builder() {
        return new Builder();
    }

    public interface PointsStage {
        /**
         * <p>The number of points scheduled to expire at the <code>expires_at</code> timestamp.</p>
         */
        ExpiresAtStage points(int points);

        Builder from(LoyaltyAccountExpiringPointDeadline other);
    }

    public interface ExpiresAtStage {
        /**
         * <p>The timestamp of when the points are scheduled to expire, in RFC 3339 format.</p>
         */
        _FinalStage expiresAt(@NotNull String expiresAt);
    }

    public interface _FinalStage {
        LoyaltyAccountExpiringPointDeadline build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PointsStage, ExpiresAtStage, _FinalStage {
        private int points;

        private String expiresAt;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LoyaltyAccountExpiringPointDeadline other) {
            points(other.getPoints());
            expiresAt(other.getExpiresAt());
            return this;
        }

        /**
         * <p>The number of points scheduled to expire at the <code>expires_at</code> timestamp.</p>
         * <p>The number of points scheduled to expire at the <code>expires_at</code> timestamp.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("points")
        public ExpiresAtStage points(int points) {
            this.points = points;
            return this;
        }

        /**
         * <p>The timestamp of when the points are scheduled to expire, in RFC 3339 format.</p>
         * <p>The timestamp of when the points are scheduled to expire, in RFC 3339 format.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("expires_at")
        public _FinalStage expiresAt(@NotNull String expiresAt) {
            this.expiresAt = Objects.requireNonNull(expiresAt, "expiresAt must not be null");
            return this;
        }

        @java.lang.Override
        public LoyaltyAccountExpiringPointDeadline build() {
            return new LoyaltyAccountExpiringPointDeadline(points, expiresAt, additionalProperties);
        }
    }
}
