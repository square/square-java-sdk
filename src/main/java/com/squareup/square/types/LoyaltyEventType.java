/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class LoyaltyEventType {
    public static final LoyaltyEventType CREATE_REWARD = new LoyaltyEventType(Value.CREATE_REWARD, "CREATE_REWARD");

    public static final LoyaltyEventType OTHER = new LoyaltyEventType(Value.OTHER, "OTHER");

    public static final LoyaltyEventType ACCUMULATE_PROMOTION_POINTS =
            new LoyaltyEventType(Value.ACCUMULATE_PROMOTION_POINTS, "ACCUMULATE_PROMOTION_POINTS");

    public static final LoyaltyEventType EXPIRE_POINTS = new LoyaltyEventType(Value.EXPIRE_POINTS, "EXPIRE_POINTS");

    public static final LoyaltyEventType ADJUST_POINTS = new LoyaltyEventType(Value.ADJUST_POINTS, "ADJUST_POINTS");

    public static final LoyaltyEventType ACCUMULATE_POINTS =
            new LoyaltyEventType(Value.ACCUMULATE_POINTS, "ACCUMULATE_POINTS");

    public static final LoyaltyEventType REDEEM_REWARD = new LoyaltyEventType(Value.REDEEM_REWARD, "REDEEM_REWARD");

    public static final LoyaltyEventType DELETE_REWARD = new LoyaltyEventType(Value.DELETE_REWARD, "DELETE_REWARD");

    private final Value value;

    private final String string;

    LoyaltyEventType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof LoyaltyEventType && this.string.equals(((LoyaltyEventType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case CREATE_REWARD:
                return visitor.visitCreateReward();
            case OTHER:
                return visitor.visitOther();
            case ACCUMULATE_PROMOTION_POINTS:
                return visitor.visitAccumulatePromotionPoints();
            case EXPIRE_POINTS:
                return visitor.visitExpirePoints();
            case ADJUST_POINTS:
                return visitor.visitAdjustPoints();
            case ACCUMULATE_POINTS:
                return visitor.visitAccumulatePoints();
            case REDEEM_REWARD:
                return visitor.visitRedeemReward();
            case DELETE_REWARD:
                return visitor.visitDeleteReward();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static LoyaltyEventType valueOf(String value) {
        switch (value) {
            case "CREATE_REWARD":
                return CREATE_REWARD;
            case "OTHER":
                return OTHER;
            case "ACCUMULATE_PROMOTION_POINTS":
                return ACCUMULATE_PROMOTION_POINTS;
            case "EXPIRE_POINTS":
                return EXPIRE_POINTS;
            case "ADJUST_POINTS":
                return ADJUST_POINTS;
            case "ACCUMULATE_POINTS":
                return ACCUMULATE_POINTS;
            case "REDEEM_REWARD":
                return REDEEM_REWARD;
            case "DELETE_REWARD":
                return DELETE_REWARD;
            default:
                return new LoyaltyEventType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ACCUMULATE_POINTS,

        CREATE_REWARD,

        REDEEM_REWARD,

        DELETE_REWARD,

        ADJUST_POINTS,

        EXPIRE_POINTS,

        OTHER,

        ACCUMULATE_PROMOTION_POINTS,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitAccumulatePoints();

        T visitCreateReward();

        T visitRedeemReward();

        T visitDeleteReward();

        T visitAdjustPoints();

        T visitExpirePoints();

        T visitOther();

        T visitAccumulatePromotionPoints();

        T visitUnknown(String unknownType);
    }
}
