/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateCustomerRequest.Builder.class)
public final class UpdateCustomerRequest {
    private final String customerId;

    private final Optional<String> givenName;

    private final Optional<String> familyName;

    private final Optional<String> companyName;

    private final Optional<String> nickname;

    private final Optional<String> emailAddress;

    private final Optional<Address> address;

    private final Optional<String> phoneNumber;

    private final Optional<String> referenceId;

    private final Optional<String> note;

    private final Optional<String> birthday;

    private final Optional<Long> version;

    private final Optional<CustomerTaxIds> taxIds;

    private final Map<String, Object> additionalProperties;

    private UpdateCustomerRequest(
            String customerId,
            Optional<String> givenName,
            Optional<String> familyName,
            Optional<String> companyName,
            Optional<String> nickname,
            Optional<String> emailAddress,
            Optional<Address> address,
            Optional<String> phoneNumber,
            Optional<String> referenceId,
            Optional<String> note,
            Optional<String> birthday,
            Optional<Long> version,
            Optional<CustomerTaxIds> taxIds,
            Map<String, Object> additionalProperties) {
        this.customerId = customerId;
        this.givenName = givenName;
        this.familyName = familyName;
        this.companyName = companyName;
        this.nickname = nickname;
        this.emailAddress = emailAddress;
        this.address = address;
        this.phoneNumber = phoneNumber;
        this.referenceId = referenceId;
        this.note = note;
        this.birthday = birthday;
        this.version = version;
        this.taxIds = taxIds;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the customer to update.
     */
    @JsonProperty("customer_id")
    public String getCustomerId() {
        return customerId;
    }

    /**
     * @return The given name (that is, the first name) associated with the customer profile.
     * <p>The maximum length for this value is 300 characters.</p>
     */
    @JsonIgnore
    public Optional<String> getGivenName() {
        if (givenName == null) {
            return Optional.empty();
        }
        return givenName;
    }

    /**
     * @return The family name (that is, the last name) associated with the customer profile.
     * <p>The maximum length for this value is 300 characters.</p>
     */
    @JsonIgnore
    public Optional<String> getFamilyName() {
        if (familyName == null) {
            return Optional.empty();
        }
        return familyName;
    }

    /**
     * @return A business name associated with the customer profile.
     * <p>The maximum length for this value is 500 characters.</p>
     */
    @JsonIgnore
    public Optional<String> getCompanyName() {
        if (companyName == null) {
            return Optional.empty();
        }
        return companyName;
    }

    /**
     * @return A nickname for the customer profile.
     * <p>The maximum length for this value is 100 characters.</p>
     */
    @JsonIgnore
    public Optional<String> getNickname() {
        if (nickname == null) {
            return Optional.empty();
        }
        return nickname;
    }

    /**
     * @return The email address associated with the customer profile.
     * <p>The maximum length for this value is 254 characters.</p>
     */
    @JsonIgnore
    public Optional<String> getEmailAddress() {
        if (emailAddress == null) {
            return Optional.empty();
        }
        return emailAddress;
    }

    /**
     * @return The physical address associated with the customer profile. Only new or changed fields are required in the request.
     * <p>For maximum length constraints, see <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#address">Customer addresses</a>.
     * The <code>first_name</code> and <code>last_name</code> fields are ignored if they are present in the request.</p>
     */
    @JsonProperty("address")
    public Optional<Address> getAddress() {
        return address;
    }

    /**
     * @return The phone number associated with the customer profile. The phone number must be valid and can contain
     * 9â€“16 digits, with an optional <code>+</code> prefix and country code. For more information, see
     * <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#phone-number">Customer phone numbers</a>.
     */
    @JsonIgnore
    public Optional<String> getPhoneNumber() {
        if (phoneNumber == null) {
            return Optional.empty();
        }
        return phoneNumber;
    }

    /**
     * @return An optional second ID used to associate the customer profile with an
     * entity in another system.
     * <p>The maximum length for this value is 100 characters.</p>
     */
    @JsonIgnore
    public Optional<String> getReferenceId() {
        if (referenceId == null) {
            return Optional.empty();
        }
        return referenceId;
    }

    /**
     * @return A custom note associated with the customer profile.
     */
    @JsonIgnore
    public Optional<String> getNote() {
        if (note == null) {
            return Optional.empty();
        }
        return note;
    }

    /**
     * @return The birthday associated with the customer profile, in <code>YYYY-MM-DD</code> or <code>MM-DD</code> format. For example,
     * specify <code>1998-09-21</code> for September 21, 1998, or <code>09-21</code> for September 21. Birthdays are returned in <code>YYYY-MM-DD</code>
     * format, where <code>YYYY</code> is the specified birth year or <code>0000</code> if a birth year is not specified.
     */
    @JsonIgnore
    public Optional<String> getBirthday() {
        if (birthday == null) {
            return Optional.empty();
        }
        return birthday;
    }

    /**
     * @return The current version of the customer profile.
     * <p>As a best practice, you should include this field to enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a> control. For more information, see <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#update-a-customer-profile">Update a customer profile</a>.</p>
     */
    @JsonProperty("version")
    public Optional<Long> getVersion() {
        return version;
    }

    /**
     * @return The tax ID associated with the customer profile. This field is available only for customers of sellers
     * in EU countries or the United Kingdom. For more information,
     * see <a href="https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids">Customer tax IDs</a>.
     */
    @JsonProperty("tax_ids")
    public Optional<CustomerTaxIds> getTaxIds() {
        return taxIds;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("given_name")
    private Optional<String> _getGivenName() {
        return givenName;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("family_name")
    private Optional<String> _getFamilyName() {
        return familyName;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("company_name")
    private Optional<String> _getCompanyName() {
        return companyName;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("nickname")
    private Optional<String> _getNickname() {
        return nickname;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("email_address")
    private Optional<String> _getEmailAddress() {
        return emailAddress;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("phone_number")
    private Optional<String> _getPhoneNumber() {
        return phoneNumber;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("reference_id")
    private Optional<String> _getReferenceId() {
        return referenceId;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("note")
    private Optional<String> _getNote() {
        return note;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("birthday")
    private Optional<String> _getBirthday() {
        return birthday;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateCustomerRequest && equalTo((UpdateCustomerRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateCustomerRequest other) {
        return customerId.equals(other.customerId)
                && givenName.equals(other.givenName)
                && familyName.equals(other.familyName)
                && companyName.equals(other.companyName)
                && nickname.equals(other.nickname)
                && emailAddress.equals(other.emailAddress)
                && address.equals(other.address)
                && phoneNumber.equals(other.phoneNumber)
                && referenceId.equals(other.referenceId)
                && note.equals(other.note)
                && birthday.equals(other.birthday)
                && version.equals(other.version)
                && taxIds.equals(other.taxIds);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.customerId,
                this.givenName,
                this.familyName,
                this.companyName,
                this.nickname,
                this.emailAddress,
                this.address,
                this.phoneNumber,
                this.referenceId,
                this.note,
                this.birthday,
                this.version,
                this.taxIds);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CustomerIdStage builder() {
        return new Builder();
    }

    public interface CustomerIdStage {
        /**
         * <p>The ID of the customer to update.</p>
         */
        _FinalStage customerId(@NotNull String customerId);

        Builder from(UpdateCustomerRequest other);
    }

    public interface _FinalStage {
        UpdateCustomerRequest build();

        /**
         * <p>The given name (that is, the first name) associated with the customer profile.</p>
         * <p>The maximum length for this value is 300 characters.</p>
         */
        _FinalStage givenName(Optional<String> givenName);

        _FinalStage givenName(String givenName);

        _FinalStage givenName(Nullable<String> givenName);

        /**
         * <p>The family name (that is, the last name) associated with the customer profile.</p>
         * <p>The maximum length for this value is 300 characters.</p>
         */
        _FinalStage familyName(Optional<String> familyName);

        _FinalStage familyName(String familyName);

        _FinalStage familyName(Nullable<String> familyName);

        /**
         * <p>A business name associated with the customer profile.</p>
         * <p>The maximum length for this value is 500 characters.</p>
         */
        _FinalStage companyName(Optional<String> companyName);

        _FinalStage companyName(String companyName);

        _FinalStage companyName(Nullable<String> companyName);

        /**
         * <p>A nickname for the customer profile.</p>
         * <p>The maximum length for this value is 100 characters.</p>
         */
        _FinalStage nickname(Optional<String> nickname);

        _FinalStage nickname(String nickname);

        _FinalStage nickname(Nullable<String> nickname);

        /**
         * <p>The email address associated with the customer profile.</p>
         * <p>The maximum length for this value is 254 characters.</p>
         */
        _FinalStage emailAddress(Optional<String> emailAddress);

        _FinalStage emailAddress(String emailAddress);

        _FinalStage emailAddress(Nullable<String> emailAddress);

        /**
         * <p>The physical address associated with the customer profile. Only new or changed fields are required in the request.</p>
         * <p>For maximum length constraints, see <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#address">Customer addresses</a>.
         * The <code>first_name</code> and <code>last_name</code> fields are ignored if they are present in the request.</p>
         */
        _FinalStage address(Optional<Address> address);

        _FinalStage address(Address address);

        /**
         * <p>The phone number associated with the customer profile. The phone number must be valid and can contain
         * 9â€“16 digits, with an optional <code>+</code> prefix and country code. For more information, see
         * <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#phone-number">Customer phone numbers</a>.</p>
         */
        _FinalStage phoneNumber(Optional<String> phoneNumber);

        _FinalStage phoneNumber(String phoneNumber);

        _FinalStage phoneNumber(Nullable<String> phoneNumber);

        /**
         * <p>An optional second ID used to associate the customer profile with an
         * entity in another system.</p>
         * <p>The maximum length for this value is 100 characters.</p>
         */
        _FinalStage referenceId(Optional<String> referenceId);

        _FinalStage referenceId(String referenceId);

        _FinalStage referenceId(Nullable<String> referenceId);

        /**
         * <p>A custom note associated with the customer profile.</p>
         */
        _FinalStage note(Optional<String> note);

        _FinalStage note(String note);

        _FinalStage note(Nullable<String> note);

        /**
         * <p>The birthday associated with the customer profile, in <code>YYYY-MM-DD</code> or <code>MM-DD</code> format. For example,
         * specify <code>1998-09-21</code> for September 21, 1998, or <code>09-21</code> for September 21. Birthdays are returned in <code>YYYY-MM-DD</code>
         * format, where <code>YYYY</code> is the specified birth year or <code>0000</code> if a birth year is not specified.</p>
         */
        _FinalStage birthday(Optional<String> birthday);

        _FinalStage birthday(String birthday);

        _FinalStage birthday(Nullable<String> birthday);

        /**
         * <p>The current version of the customer profile.</p>
         * <p>As a best practice, you should include this field to enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a> control. For more information, see <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#update-a-customer-profile">Update a customer profile</a>.</p>
         */
        _FinalStage version(Optional<Long> version);

        _FinalStage version(Long version);

        /**
         * <p>The tax ID associated with the customer profile. This field is available only for customers of sellers
         * in EU countries or the United Kingdom. For more information,
         * see <a href="https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids">Customer tax IDs</a>.</p>
         */
        _FinalStage taxIds(Optional<CustomerTaxIds> taxIds);

        _FinalStage taxIds(CustomerTaxIds taxIds);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CustomerIdStage, _FinalStage {
        private String customerId;

        private Optional<CustomerTaxIds> taxIds = Optional.empty();

        private Optional<Long> version = Optional.empty();

        private Optional<String> birthday = Optional.empty();

        private Optional<String> note = Optional.empty();

        private Optional<String> referenceId = Optional.empty();

        private Optional<String> phoneNumber = Optional.empty();

        private Optional<Address> address = Optional.empty();

        private Optional<String> emailAddress = Optional.empty();

        private Optional<String> nickname = Optional.empty();

        private Optional<String> companyName = Optional.empty();

        private Optional<String> familyName = Optional.empty();

        private Optional<String> givenName = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UpdateCustomerRequest other) {
            customerId(other.getCustomerId());
            givenName(other.getGivenName());
            familyName(other.getFamilyName());
            companyName(other.getCompanyName());
            nickname(other.getNickname());
            emailAddress(other.getEmailAddress());
            address(other.getAddress());
            phoneNumber(other.getPhoneNumber());
            referenceId(other.getReferenceId());
            note(other.getNote());
            birthday(other.getBirthday());
            version(other.getVersion());
            taxIds(other.getTaxIds());
            return this;
        }

        /**
         * <p>The ID of the customer to update.</p>
         * <p>The ID of the customer to update.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("customer_id")
        public _FinalStage customerId(@NotNull String customerId) {
            this.customerId = Objects.requireNonNull(customerId, "customerId must not be null");
            return this;
        }

        /**
         * <p>The tax ID associated with the customer profile. This field is available only for customers of sellers
         * in EU countries or the United Kingdom. For more information,
         * see <a href="https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids">Customer tax IDs</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage taxIds(CustomerTaxIds taxIds) {
            this.taxIds = Optional.ofNullable(taxIds);
            return this;
        }

        /**
         * <p>The tax ID associated with the customer profile. This field is available only for customers of sellers
         * in EU countries or the United Kingdom. For more information,
         * see <a href="https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids">Customer tax IDs</a>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "tax_ids", nulls = Nulls.SKIP)
        public _FinalStage taxIds(Optional<CustomerTaxIds> taxIds) {
            this.taxIds = taxIds;
            return this;
        }

        /**
         * <p>The current version of the customer profile.</p>
         * <p>As a best practice, you should include this field to enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a> control. For more information, see <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#update-a-customer-profile">Update a customer profile</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage version(Long version) {
            this.version = Optional.ofNullable(version);
            return this;
        }

        /**
         * <p>The current version of the customer profile.</p>
         * <p>As a best practice, you should include this field to enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a> control. For more information, see <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#update-a-customer-profile">Update a customer profile</a>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "version", nulls = Nulls.SKIP)
        public _FinalStage version(Optional<Long> version) {
            this.version = version;
            return this;
        }

        /**
         * <p>The birthday associated with the customer profile, in <code>YYYY-MM-DD</code> or <code>MM-DD</code> format. For example,
         * specify <code>1998-09-21</code> for September 21, 1998, or <code>09-21</code> for September 21. Birthdays are returned in <code>YYYY-MM-DD</code>
         * format, where <code>YYYY</code> is the specified birth year or <code>0000</code> if a birth year is not specified.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage birthday(Nullable<String> birthday) {
            if (birthday.isNull()) {
                this.birthday = null;
            } else if (birthday.isEmpty()) {
                this.birthday = Optional.empty();
            } else {
                this.birthday = Optional.of(birthday.get());
            }
            return this;
        }

        /**
         * <p>The birthday associated with the customer profile, in <code>YYYY-MM-DD</code> or <code>MM-DD</code> format. For example,
         * specify <code>1998-09-21</code> for September 21, 1998, or <code>09-21</code> for September 21. Birthdays are returned in <code>YYYY-MM-DD</code>
         * format, where <code>YYYY</code> is the specified birth year or <code>0000</code> if a birth year is not specified.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage birthday(String birthday) {
            this.birthday = Optional.ofNullable(birthday);
            return this;
        }

        /**
         * <p>The birthday associated with the customer profile, in <code>YYYY-MM-DD</code> or <code>MM-DD</code> format. For example,
         * specify <code>1998-09-21</code> for September 21, 1998, or <code>09-21</code> for September 21. Birthdays are returned in <code>YYYY-MM-DD</code>
         * format, where <code>YYYY</code> is the specified birth year or <code>0000</code> if a birth year is not specified.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "birthday", nulls = Nulls.SKIP)
        public _FinalStage birthday(Optional<String> birthday) {
            this.birthday = birthday;
            return this;
        }

        /**
         * <p>A custom note associated with the customer profile.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage note(Nullable<String> note) {
            if (note.isNull()) {
                this.note = null;
            } else if (note.isEmpty()) {
                this.note = Optional.empty();
            } else {
                this.note = Optional.of(note.get());
            }
            return this;
        }

        /**
         * <p>A custom note associated with the customer profile.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage note(String note) {
            this.note = Optional.ofNullable(note);
            return this;
        }

        /**
         * <p>A custom note associated with the customer profile.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "note", nulls = Nulls.SKIP)
        public _FinalStage note(Optional<String> note) {
            this.note = note;
            return this;
        }

        /**
         * <p>An optional second ID used to associate the customer profile with an
         * entity in another system.</p>
         * <p>The maximum length for this value is 100 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage referenceId(Nullable<String> referenceId) {
            if (referenceId.isNull()) {
                this.referenceId = null;
            } else if (referenceId.isEmpty()) {
                this.referenceId = Optional.empty();
            } else {
                this.referenceId = Optional.of(referenceId.get());
            }
            return this;
        }

        /**
         * <p>An optional second ID used to associate the customer profile with an
         * entity in another system.</p>
         * <p>The maximum length for this value is 100 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage referenceId(String referenceId) {
            this.referenceId = Optional.ofNullable(referenceId);
            return this;
        }

        /**
         * <p>An optional second ID used to associate the customer profile with an
         * entity in another system.</p>
         * <p>The maximum length for this value is 100 characters.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "reference_id", nulls = Nulls.SKIP)
        public _FinalStage referenceId(Optional<String> referenceId) {
            this.referenceId = referenceId;
            return this;
        }

        /**
         * <p>The phone number associated with the customer profile. The phone number must be valid and can contain
         * 9â€“16 digits, with an optional <code>+</code> prefix and country code. For more information, see
         * <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#phone-number">Customer phone numbers</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage phoneNumber(Nullable<String> phoneNumber) {
            if (phoneNumber.isNull()) {
                this.phoneNumber = null;
            } else if (phoneNumber.isEmpty()) {
                this.phoneNumber = Optional.empty();
            } else {
                this.phoneNumber = Optional.of(phoneNumber.get());
            }
            return this;
        }

        /**
         * <p>The phone number associated with the customer profile. The phone number must be valid and can contain
         * 9â€“16 digits, with an optional <code>+</code> prefix and country code. For more information, see
         * <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#phone-number">Customer phone numbers</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage phoneNumber(String phoneNumber) {
            this.phoneNumber = Optional.ofNullable(phoneNumber);
            return this;
        }

        /**
         * <p>The phone number associated with the customer profile. The phone number must be valid and can contain
         * 9â€“16 digits, with an optional <code>+</code> prefix and country code. For more information, see
         * <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#phone-number">Customer phone numbers</a>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "phone_number", nulls = Nulls.SKIP)
        public _FinalStage phoneNumber(Optional<String> phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * <p>The physical address associated with the customer profile. Only new or changed fields are required in the request.</p>
         * <p>For maximum length constraints, see <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#address">Customer addresses</a>.
         * The <code>first_name</code> and <code>last_name</code> fields are ignored if they are present in the request.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage address(Address address) {
            this.address = Optional.ofNullable(address);
            return this;
        }

        /**
         * <p>The physical address associated with the customer profile. Only new or changed fields are required in the request.</p>
         * <p>For maximum length constraints, see <a href="https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#address">Customer addresses</a>.
         * The <code>first_name</code> and <code>last_name</code> fields are ignored if they are present in the request.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "address", nulls = Nulls.SKIP)
        public _FinalStage address(Optional<Address> address) {
            this.address = address;
            return this;
        }

        /**
         * <p>The email address associated with the customer profile.</p>
         * <p>The maximum length for this value is 254 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage emailAddress(Nullable<String> emailAddress) {
            if (emailAddress.isNull()) {
                this.emailAddress = null;
            } else if (emailAddress.isEmpty()) {
                this.emailAddress = Optional.empty();
            } else {
                this.emailAddress = Optional.of(emailAddress.get());
            }
            return this;
        }

        /**
         * <p>The email address associated with the customer profile.</p>
         * <p>The maximum length for this value is 254 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage emailAddress(String emailAddress) {
            this.emailAddress = Optional.ofNullable(emailAddress);
            return this;
        }

        /**
         * <p>The email address associated with the customer profile.</p>
         * <p>The maximum length for this value is 254 characters.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "email_address", nulls = Nulls.SKIP)
        public _FinalStage emailAddress(Optional<String> emailAddress) {
            this.emailAddress = emailAddress;
            return this;
        }

        /**
         * <p>A nickname for the customer profile.</p>
         * <p>The maximum length for this value is 100 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage nickname(Nullable<String> nickname) {
            if (nickname.isNull()) {
                this.nickname = null;
            } else if (nickname.isEmpty()) {
                this.nickname = Optional.empty();
            } else {
                this.nickname = Optional.of(nickname.get());
            }
            return this;
        }

        /**
         * <p>A nickname for the customer profile.</p>
         * <p>The maximum length for this value is 100 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage nickname(String nickname) {
            this.nickname = Optional.ofNullable(nickname);
            return this;
        }

        /**
         * <p>A nickname for the customer profile.</p>
         * <p>The maximum length for this value is 100 characters.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "nickname", nulls = Nulls.SKIP)
        public _FinalStage nickname(Optional<String> nickname) {
            this.nickname = nickname;
            return this;
        }

        /**
         * <p>A business name associated with the customer profile.</p>
         * <p>The maximum length for this value is 500 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage companyName(Nullable<String> companyName) {
            if (companyName.isNull()) {
                this.companyName = null;
            } else if (companyName.isEmpty()) {
                this.companyName = Optional.empty();
            } else {
                this.companyName = Optional.of(companyName.get());
            }
            return this;
        }

        /**
         * <p>A business name associated with the customer profile.</p>
         * <p>The maximum length for this value is 500 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage companyName(String companyName) {
            this.companyName = Optional.ofNullable(companyName);
            return this;
        }

        /**
         * <p>A business name associated with the customer profile.</p>
         * <p>The maximum length for this value is 500 characters.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "company_name", nulls = Nulls.SKIP)
        public _FinalStage companyName(Optional<String> companyName) {
            this.companyName = companyName;
            return this;
        }

        /**
         * <p>The family name (that is, the last name) associated with the customer profile.</p>
         * <p>The maximum length for this value is 300 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage familyName(Nullable<String> familyName) {
            if (familyName.isNull()) {
                this.familyName = null;
            } else if (familyName.isEmpty()) {
                this.familyName = Optional.empty();
            } else {
                this.familyName = Optional.of(familyName.get());
            }
            return this;
        }

        /**
         * <p>The family name (that is, the last name) associated with the customer profile.</p>
         * <p>The maximum length for this value is 300 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage familyName(String familyName) {
            this.familyName = Optional.ofNullable(familyName);
            return this;
        }

        /**
         * <p>The family name (that is, the last name) associated with the customer profile.</p>
         * <p>The maximum length for this value is 300 characters.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "family_name", nulls = Nulls.SKIP)
        public _FinalStage familyName(Optional<String> familyName) {
            this.familyName = familyName;
            return this;
        }

        /**
         * <p>The given name (that is, the first name) associated with the customer profile.</p>
         * <p>The maximum length for this value is 300 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage givenName(Nullable<String> givenName) {
            if (givenName.isNull()) {
                this.givenName = null;
            } else if (givenName.isEmpty()) {
                this.givenName = Optional.empty();
            } else {
                this.givenName = Optional.of(givenName.get());
            }
            return this;
        }

        /**
         * <p>The given name (that is, the first name) associated with the customer profile.</p>
         * <p>The maximum length for this value is 300 characters.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage givenName(String givenName) {
            this.givenName = Optional.ofNullable(givenName);
            return this;
        }

        /**
         * <p>The given name (that is, the first name) associated with the customer profile.</p>
         * <p>The maximum length for this value is 300 characters.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "given_name", nulls = Nulls.SKIP)
        public _FinalStage givenName(Optional<String> givenName) {
            this.givenName = givenName;
            return this;
        }

        @java.lang.Override
        public UpdateCustomerRequest build() {
            return new UpdateCustomerRequest(
                    customerId,
                    givenName,
                    familyName,
                    companyName,
                    nickname,
                    emailAddress,
                    address,
                    phoneNumber,
                    referenceId,
                    note,
                    birthday,
                    version,
                    taxIds,
                    additionalProperties);
        }
    }
}
