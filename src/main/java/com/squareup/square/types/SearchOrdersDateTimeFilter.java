/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SearchOrdersDateTimeFilter.Builder.class)
public final class SearchOrdersDateTimeFilter {
    private final Optional<TimeRange> createdAt;

    private final Optional<TimeRange> updatedAt;

    private final Optional<TimeRange> closedAt;

    private final Map<String, Object> additionalProperties;

    private SearchOrdersDateTimeFilter(
            Optional<TimeRange> createdAt,
            Optional<TimeRange> updatedAt,
            Optional<TimeRange> closedAt,
            Map<String, Object> additionalProperties) {
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.closedAt = closedAt;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The time range for filtering on the <code>created_at</code> timestamp. If you use this
     * value, you must set the <code>sort_field</code> in the <code>OrdersSearchSort</code> object to
     * <code>CREATED_AT</code>.
     */
    @JsonProperty("created_at")
    public Optional<TimeRange> getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The time range for filtering on the <code>updated_at</code> timestamp. If you use this
     * value, you must set the <code>sort_field</code> in the <code>OrdersSearchSort</code> object to
     * <code>UPDATED_AT</code>.
     */
    @JsonProperty("updated_at")
    public Optional<TimeRange> getUpdatedAt() {
        return updatedAt;
    }

    /**
     * @return The time range for filtering on the <code>closed_at</code> timestamp. If you use this
     * value, you must set the <code>sort_field</code> in the <code>OrdersSearchSort</code> object to
     * <code>CLOSED_AT</code>.
     */
    @JsonProperty("closed_at")
    public Optional<TimeRange> getClosedAt() {
        return closedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SearchOrdersDateTimeFilter && equalTo((SearchOrdersDateTimeFilter) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SearchOrdersDateTimeFilter other) {
        return createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && closedAt.equals(other.closedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.createdAt, this.updatedAt, this.closedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<TimeRange> createdAt = Optional.empty();

        private Optional<TimeRange> updatedAt = Optional.empty();

        private Optional<TimeRange> closedAt = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(SearchOrdersDateTimeFilter other) {
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            closedAt(other.getClosedAt());
            return this;
        }

        /**
         * <p>The time range for filtering on the <code>created_at</code> timestamp. If you use this
         * value, you must set the <code>sort_field</code> in the <code>OrdersSearchSort</code> object to
         * <code>CREATED_AT</code>.</p>
         */
        @JsonSetter(value = "created_at", nulls = Nulls.SKIP)
        public Builder createdAt(Optional<TimeRange> createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(TimeRange createdAt) {
            this.createdAt = Optional.ofNullable(createdAt);
            return this;
        }

        /**
         * <p>The time range for filtering on the <code>updated_at</code> timestamp. If you use this
         * value, you must set the <code>sort_field</code> in the <code>OrdersSearchSort</code> object to
         * <code>UPDATED_AT</code>.</p>
         */
        @JsonSetter(value = "updated_at", nulls = Nulls.SKIP)
        public Builder updatedAt(Optional<TimeRange> updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedAt(TimeRange updatedAt) {
            this.updatedAt = Optional.ofNullable(updatedAt);
            return this;
        }

        /**
         * <p>The time range for filtering on the <code>closed_at</code> timestamp. If you use this
         * value, you must set the <code>sort_field</code> in the <code>OrdersSearchSort</code> object to
         * <code>CLOSED_AT</code>.</p>
         */
        @JsonSetter(value = "closed_at", nulls = Nulls.SKIP)
        public Builder closedAt(Optional<TimeRange> closedAt) {
            this.closedAt = closedAt;
            return this;
        }

        public Builder closedAt(TimeRange closedAt) {
            this.closedAt = Optional.ofNullable(closedAt);
            return this;
        }

        public SearchOrdersDateTimeFilter build() {
            return new SearchOrdersDateTimeFilter(createdAt, updatedAt, closedAt, additionalProperties);
        }
    }
}
