/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GiftCard.Builder.class)
public final class GiftCard {
    private final Optional<String> id;

    private final GiftCardType type;

    private final Optional<GiftCardGanSource> ganSource;

    private final Optional<GiftCardStatus> state;

    private final Optional<Money> balanceMoney;

    private final Optional<String> gan;

    private final Optional<String> createdAt;

    private final Optional<List<String>> customerIds;

    private final Map<String, Object> additionalProperties;

    private GiftCard(
            Optional<String> id,
            GiftCardType type,
            Optional<GiftCardGanSource> ganSource,
            Optional<GiftCardStatus> state,
            Optional<Money> balanceMoney,
            Optional<String> gan,
            Optional<String> createdAt,
            Optional<List<String>> customerIds,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.type = type;
        this.ganSource = ganSource;
        this.state = state;
        this.balanceMoney = balanceMoney;
        this.gan = gan;
        this.createdAt = createdAt;
        this.customerIds = customerIds;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The Square-assigned ID of the gift card.
     */
    @JsonProperty("id")
    public Optional<String> getId() {
        return id;
    }

    /**
     * @return The gift card type.
     * See <a href="#type-type">Type</a> for possible values
     */
    @JsonProperty("type")
    public GiftCardType getType() {
        return type;
    }

    /**
     * @return The source that generated the gift card account number (GAN). The default value is <code>SQUARE</code>.
     * See <a href="#type-gansource">GANSource</a> for possible values
     */
    @JsonProperty("gan_source")
    public Optional<GiftCardGanSource> getGanSource() {
        return ganSource;
    }

    /**
     * @return The current gift card state.
     * See <a href="#type-status">Status</a> for possible values
     */
    @JsonProperty("state")
    public Optional<GiftCardStatus> getState() {
        return state;
    }

    /**
     * @return The current gift card balance. This balance is always greater than or equal to zero.
     */
    @JsonProperty("balance_money")
    public Optional<Money> getBalanceMoney() {
        return balanceMoney;
    }

    /**
     * @return The gift card account number (GAN). Buyers can use the GAN to make purchases or check
     * the gift card balance.
     */
    @JsonIgnore
    public Optional<String> getGan() {
        if (gan == null) {
            return Optional.empty();
        }
        return gan;
    }

    /**
     * @return The timestamp when the gift card was created, in RFC 3339 format.
     * In the case of a digital gift card, it is the time when you create a card
     * (using the Square Point of Sale application, Seller Dashboard, or Gift Cards API).
     * In the case of a plastic gift card, it is the time when Square associates the card with the
     * seller at the time of activation.
     */
    @JsonProperty("created_at")
    public Optional<String> getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The IDs of the <a href="entity:Customer">customer profiles</a> to whom this gift card is linked.
     */
    @JsonProperty("customer_ids")
    public Optional<List<String>> getCustomerIds() {
        return customerIds;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("gan")
    private Optional<String> _getGan() {
        return gan;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GiftCard && equalTo((GiftCard) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GiftCard other) {
        return id.equals(other.id)
                && type.equals(other.type)
                && ganSource.equals(other.ganSource)
                && state.equals(other.state)
                && balanceMoney.equals(other.balanceMoney)
                && gan.equals(other.gan)
                && createdAt.equals(other.createdAt)
                && customerIds.equals(other.customerIds);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.type,
                this.ganSource,
                this.state,
                this.balanceMoney,
                this.gan,
                this.createdAt,
                this.customerIds);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TypeStage builder() {
        return new Builder();
    }

    public interface TypeStage {
        /**
         * <p>The gift card type.
         * See <a href="#type-type">Type</a> for possible values</p>
         */
        _FinalStage type(@NotNull GiftCardType type);

        Builder from(GiftCard other);
    }

    public interface _FinalStage {
        GiftCard build();

        /**
         * <p>The Square-assigned ID of the gift card.</p>
         */
        _FinalStage id(Optional<String> id);

        _FinalStage id(String id);

        /**
         * <p>The source that generated the gift card account number (GAN). The default value is <code>SQUARE</code>.
         * See <a href="#type-gansource">GANSource</a> for possible values</p>
         */
        _FinalStage ganSource(Optional<GiftCardGanSource> ganSource);

        _FinalStage ganSource(GiftCardGanSource ganSource);

        /**
         * <p>The current gift card state.
         * See <a href="#type-status">Status</a> for possible values</p>
         */
        _FinalStage state(Optional<GiftCardStatus> state);

        _FinalStage state(GiftCardStatus state);

        /**
         * <p>The current gift card balance. This balance is always greater than or equal to zero.</p>
         */
        _FinalStage balanceMoney(Optional<Money> balanceMoney);

        _FinalStage balanceMoney(Money balanceMoney);

        /**
         * <p>The gift card account number (GAN). Buyers can use the GAN to make purchases or check
         * the gift card balance.</p>
         */
        _FinalStage gan(Optional<String> gan);

        _FinalStage gan(String gan);

        _FinalStage gan(Nullable<String> gan);

        /**
         * <p>The timestamp when the gift card was created, in RFC 3339 format.
         * In the case of a digital gift card, it is the time when you create a card
         * (using the Square Point of Sale application, Seller Dashboard, or Gift Cards API).
         * In the case of a plastic gift card, it is the time when Square associates the card with the
         * seller at the time of activation.</p>
         */
        _FinalStage createdAt(Optional<String> createdAt);

        _FinalStage createdAt(String createdAt);

        /**
         * <p>The IDs of the <a href="entity:Customer">customer profiles</a> to whom this gift card is linked.</p>
         */
        _FinalStage customerIds(Optional<List<String>> customerIds);

        _FinalStage customerIds(List<String> customerIds);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TypeStage, _FinalStage {
        private GiftCardType type;

        private Optional<List<String>> customerIds = Optional.empty();

        private Optional<String> createdAt = Optional.empty();

        private Optional<String> gan = Optional.empty();

        private Optional<Money> balanceMoney = Optional.empty();

        private Optional<GiftCardStatus> state = Optional.empty();

        private Optional<GiftCardGanSource> ganSource = Optional.empty();

        private Optional<String> id = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GiftCard other) {
            id(other.getId());
            type(other.getType());
            ganSource(other.getGanSource());
            state(other.getState());
            balanceMoney(other.getBalanceMoney());
            gan(other.getGan());
            createdAt(other.getCreatedAt());
            customerIds(other.getCustomerIds());
            return this;
        }

        /**
         * <p>The gift card type.
         * See <a href="#type-type">Type</a> for possible values</p>
         * <p>The gift card type.
         * See <a href="#type-type">Type</a> for possible values</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("type")
        public _FinalStage type(@NotNull GiftCardType type) {
            this.type = Objects.requireNonNull(type, "type must not be null");
            return this;
        }

        /**
         * <p>The IDs of the <a href="entity:Customer">customer profiles</a> to whom this gift card is linked.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage customerIds(List<String> customerIds) {
            this.customerIds = Optional.ofNullable(customerIds);
            return this;
        }

        /**
         * <p>The IDs of the <a href="entity:Customer">customer profiles</a> to whom this gift card is linked.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "customer_ids", nulls = Nulls.SKIP)
        public _FinalStage customerIds(Optional<List<String>> customerIds) {
            this.customerIds = customerIds;
            return this;
        }

        /**
         * <p>The timestamp when the gift card was created, in RFC 3339 format.
         * In the case of a digital gift card, it is the time when you create a card
         * (using the Square Point of Sale application, Seller Dashboard, or Gift Cards API).
         * In the case of a plastic gift card, it is the time when Square associates the card with the
         * seller at the time of activation.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage createdAt(String createdAt) {
            this.createdAt = Optional.ofNullable(createdAt);
            return this;
        }

        /**
         * <p>The timestamp when the gift card was created, in RFC 3339 format.
         * In the case of a digital gift card, it is the time when you create a card
         * (using the Square Point of Sale application, Seller Dashboard, or Gift Cards API).
         * In the case of a plastic gift card, it is the time when Square associates the card with the
         * seller at the time of activation.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "created_at", nulls = Nulls.SKIP)
        public _FinalStage createdAt(Optional<String> createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * <p>The gift card account number (GAN). Buyers can use the GAN to make purchases or check
         * the gift card balance.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage gan(Nullable<String> gan) {
            if (gan.isNull()) {
                this.gan = null;
            } else if (gan.isEmpty()) {
                this.gan = Optional.empty();
            } else {
                this.gan = Optional.of(gan.get());
            }
            return this;
        }

        /**
         * <p>The gift card account number (GAN). Buyers can use the GAN to make purchases or check
         * the gift card balance.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage gan(String gan) {
            this.gan = Optional.ofNullable(gan);
            return this;
        }

        /**
         * <p>The gift card account number (GAN). Buyers can use the GAN to make purchases or check
         * the gift card balance.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "gan", nulls = Nulls.SKIP)
        public _FinalStage gan(Optional<String> gan) {
            this.gan = gan;
            return this;
        }

        /**
         * <p>The current gift card balance. This balance is always greater than or equal to zero.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage balanceMoney(Money balanceMoney) {
            this.balanceMoney = Optional.ofNullable(balanceMoney);
            return this;
        }

        /**
         * <p>The current gift card balance. This balance is always greater than or equal to zero.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "balance_money", nulls = Nulls.SKIP)
        public _FinalStage balanceMoney(Optional<Money> balanceMoney) {
            this.balanceMoney = balanceMoney;
            return this;
        }

        /**
         * <p>The current gift card state.
         * See <a href="#type-status">Status</a> for possible values</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage state(GiftCardStatus state) {
            this.state = Optional.ofNullable(state);
            return this;
        }

        /**
         * <p>The current gift card state.
         * See <a href="#type-status">Status</a> for possible values</p>
         */
        @java.lang.Override
        @JsonSetter(value = "state", nulls = Nulls.SKIP)
        public _FinalStage state(Optional<GiftCardStatus> state) {
            this.state = state;
            return this;
        }

        /**
         * <p>The source that generated the gift card account number (GAN). The default value is <code>SQUARE</code>.
         * See <a href="#type-gansource">GANSource</a> for possible values</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage ganSource(GiftCardGanSource ganSource) {
            this.ganSource = Optional.ofNullable(ganSource);
            return this;
        }

        /**
         * <p>The source that generated the gift card account number (GAN). The default value is <code>SQUARE</code>.
         * See <a href="#type-gansource">GANSource</a> for possible values</p>
         */
        @java.lang.Override
        @JsonSetter(value = "gan_source", nulls = Nulls.SKIP)
        public _FinalStage ganSource(Optional<GiftCardGanSource> ganSource) {
            this.ganSource = ganSource;
            return this;
        }

        /**
         * <p>The Square-assigned ID of the gift card.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage id(String id) {
            this.id = Optional.ofNullable(id);
            return this;
        }

        /**
         * <p>The Square-assigned ID of the gift card.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "id", nulls = Nulls.SKIP)
        public _FinalStage id(Optional<String> id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        public GiftCard build() {
            return new GiftCard(
                    id, type, ganSource, state, balanceMoney, gan, createdAt, customerIds, additionalProperties);
        }
    }
}
