/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetBookingsRequest.Builder.class)
public final class GetBookingsRequest {
    private final String bookingId;

    private final Map<String, Object> additionalProperties;

    private GetBookingsRequest(String bookingId, Map<String, Object> additionalProperties) {
        this.bookingId = bookingId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the <a href="entity:Booking">Booking</a> object representing the to-be-retrieved booking.
     */
    @JsonProperty("booking_id")
    public String getBookingId() {
        return bookingId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetBookingsRequest && equalTo((GetBookingsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetBookingsRequest other) {
        return bookingId.equals(other.bookingId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.bookingId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BookingIdStage builder() {
        return new Builder();
    }

    public interface BookingIdStage {
        /**
         * <p>The ID of the <a href="entity:Booking">Booking</a> object representing the to-be-retrieved booking.</p>
         */
        _FinalStage bookingId(@NotNull String bookingId);

        Builder from(GetBookingsRequest other);
    }

    public interface _FinalStage {
        GetBookingsRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements BookingIdStage, _FinalStage {
        private String bookingId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetBookingsRequest other) {
            bookingId(other.getBookingId());
            return this;
        }

        /**
         * <p>The ID of the <a href="entity:Booking">Booking</a> object representing the to-be-retrieved booking.</p>
         * <p>The ID of the <a href="entity:Booking">Booking</a> object representing the to-be-retrieved booking.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("booking_id")
        public _FinalStage bookingId(@NotNull String bookingId) {
            this.bookingId = Objects.requireNonNull(bookingId, "bookingId must not be null");
            return this;
        }

        @java.lang.Override
        public GetBookingsRequest build() {
            return new GetBookingsRequest(bookingId, additionalProperties);
        }
    }
}
