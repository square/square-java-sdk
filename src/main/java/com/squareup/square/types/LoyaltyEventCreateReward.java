/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = LoyaltyEventCreateReward.Builder.class)
public final class LoyaltyEventCreateReward {
    private final String loyaltyProgramId;

    private final Optional<String> rewardId;

    private final int points;

    private final Map<String, Object> additionalProperties;

    private LoyaltyEventCreateReward(
            String loyaltyProgramId, Optional<String> rewardId, int points, Map<String, Object> additionalProperties) {
        this.loyaltyProgramId = loyaltyProgramId;
        this.rewardId = rewardId;
        this.points = points;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the <a href="entity:LoyaltyProgram">loyalty program</a>.
     */
    @JsonProperty("loyalty_program_id")
    public String getLoyaltyProgramId() {
        return loyaltyProgramId;
    }

    /**
     * @return The Square-assigned ID of the created <a href="entity:LoyaltyReward">loyalty reward</a>.
     * This field is returned only if the event source is <code>LOYALTY_API</code>.
     */
    @JsonProperty("reward_id")
    public Optional<String> getRewardId() {
        return rewardId;
    }

    /**
     * @return The loyalty points used to create the reward.
     */
    @JsonProperty("points")
    public int getPoints() {
        return points;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LoyaltyEventCreateReward && equalTo((LoyaltyEventCreateReward) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LoyaltyEventCreateReward other) {
        return loyaltyProgramId.equals(other.loyaltyProgramId)
                && rewardId.equals(other.rewardId)
                && points == other.points;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.loyaltyProgramId, this.rewardId, this.points);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static LoyaltyProgramIdStage builder() {
        return new Builder();
    }

    public interface LoyaltyProgramIdStage {
        PointsStage loyaltyProgramId(@NotNull String loyaltyProgramId);

        Builder from(LoyaltyEventCreateReward other);
    }

    public interface PointsStage {
        _FinalStage points(int points);
    }

    public interface _FinalStage {
        LoyaltyEventCreateReward build();

        _FinalStage rewardId(Optional<String> rewardId);

        _FinalStage rewardId(String rewardId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements LoyaltyProgramIdStage, PointsStage, _FinalStage {
        private String loyaltyProgramId;

        private int points;

        private Optional<String> rewardId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LoyaltyEventCreateReward other) {
            loyaltyProgramId(other.getLoyaltyProgramId());
            rewardId(other.getRewardId());
            points(other.getPoints());
            return this;
        }

        /**
         * <p>The ID of the <a href="entity:LoyaltyProgram">loyalty program</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("loyalty_program_id")
        public PointsStage loyaltyProgramId(@NotNull String loyaltyProgramId) {
            this.loyaltyProgramId = Objects.requireNonNull(loyaltyProgramId, "loyaltyProgramId must not be null");
            return this;
        }

        /**
         * <p>The loyalty points used to create the reward.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("points")
        public _FinalStage points(int points) {
            this.points = points;
            return this;
        }

        /**
         * <p>The Square-assigned ID of the created <a href="entity:LoyaltyReward">loyalty reward</a>.
         * This field is returned only if the event source is <code>LOYALTY_API</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage rewardId(String rewardId) {
            this.rewardId = Optional.ofNullable(rewardId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "reward_id", nulls = Nulls.SKIP)
        public _FinalStage rewardId(Optional<String> rewardId) {
            this.rewardId = rewardId;
            return this;
        }

        @java.lang.Override
        public LoyaltyEventCreateReward build() {
            return new LoyaltyEventCreateReward(loyaltyProgramId, rewardId, points, additionalProperties);
        }
    }
}
