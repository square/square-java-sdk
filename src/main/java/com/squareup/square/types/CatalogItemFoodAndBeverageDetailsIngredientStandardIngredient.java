/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient {
    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient FISH =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.FISH, "FISH");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient GLUTEN =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.GLUTEN, "GLUTEN");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient CELERY =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.CELERY, "CELERY");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient MILK =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.MILK, "MILK");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient SESAME =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.SESAME, "SESAME");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient MUSTARD =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.MUSTARD, "MUSTARD");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient CRUSTACEANS =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.CRUSTACEANS, "CRUSTACEANS");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient MOLLUSCS =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.MOLLUSCS, "MOLLUSCS");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient PEANUTS =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.PEANUTS, "PEANUTS");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient SOY =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.SOY, "SOY");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient TREE_NUTS =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.TREE_NUTS, "TREE_NUTS");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient LUPIN =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.LUPIN, "LUPIN");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient EGGS =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.EGGS, "EGGS");

    public static final CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient SULPHITES =
            new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.SULPHITES, "SULPHITES");

    private final Value value;

    private final String string;

    CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient
                        && this.string.equals(
                                ((CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case FISH:
                return visitor.visitFish();
            case GLUTEN:
                return visitor.visitGluten();
            case CELERY:
                return visitor.visitCelery();
            case MILK:
                return visitor.visitMilk();
            case SESAME:
                return visitor.visitSesame();
            case MUSTARD:
                return visitor.visitMustard();
            case CRUSTACEANS:
                return visitor.visitCrustaceans();
            case MOLLUSCS:
                return visitor.visitMolluscs();
            case PEANUTS:
                return visitor.visitPeanuts();
            case SOY:
                return visitor.visitSoy();
            case TREE_NUTS:
                return visitor.visitTreeNuts();
            case LUPIN:
                return visitor.visitLupin();
            case EGGS:
                return visitor.visitEggs();
            case SULPHITES:
                return visitor.visitSulphites();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient valueOf(String value) {
        switch (value) {
            case "FISH":
                return FISH;
            case "GLUTEN":
                return GLUTEN;
            case "CELERY":
                return CELERY;
            case "MILK":
                return MILK;
            case "SESAME":
                return SESAME;
            case "MUSTARD":
                return MUSTARD;
            case "CRUSTACEANS":
                return CRUSTACEANS;
            case "MOLLUSCS":
                return MOLLUSCS;
            case "PEANUTS":
                return PEANUTS;
            case "SOY":
                return SOY;
            case "TREE_NUTS":
                return TREE_NUTS;
            case "LUPIN":
                return LUPIN;
            case "EGGS":
                return EGGS;
            case "SULPHITES":
                return SULPHITES;
            default:
                return new CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        CELERY,

        CRUSTACEANS,

        EGGS,

        FISH,

        GLUTEN,

        LUPIN,

        MILK,

        MOLLUSCS,

        MUSTARD,

        PEANUTS,

        SESAME,

        SOY,

        SULPHITES,

        TREE_NUTS,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitCelery();

        T visitCrustaceans();

        T visitEggs();

        T visitFish();

        T visitGluten();

        T visitLupin();

        T visitMilk();

        T visitMolluscs();

        T visitMustard();

        T visitPeanuts();

        T visitSesame();

        T visitSoy();

        T visitSulphites();

        T visitTreeNuts();

        T visitUnknown(String unknownType);
    }
}
