/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class TenderBuyNowPayLaterDetailsStatus {
    public static final TenderBuyNowPayLaterDetailsStatus AUTHORIZED =
            new TenderBuyNowPayLaterDetailsStatus(Value.AUTHORIZED, "AUTHORIZED");

    public static final TenderBuyNowPayLaterDetailsStatus CAPTURED =
            new TenderBuyNowPayLaterDetailsStatus(Value.CAPTURED, "CAPTURED");

    public static final TenderBuyNowPayLaterDetailsStatus VOIDED =
            new TenderBuyNowPayLaterDetailsStatus(Value.VOIDED, "VOIDED");

    public static final TenderBuyNowPayLaterDetailsStatus FAILED =
            new TenderBuyNowPayLaterDetailsStatus(Value.FAILED, "FAILED");

    private final Value value;

    private final String string;

    TenderBuyNowPayLaterDetailsStatus(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof TenderBuyNowPayLaterDetailsStatus
                        && this.string.equals(((TenderBuyNowPayLaterDetailsStatus) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case AUTHORIZED:
                return visitor.visitAuthorized();
            case CAPTURED:
                return visitor.visitCaptured();
            case VOIDED:
                return visitor.visitVoided();
            case FAILED:
                return visitor.visitFailed();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static TenderBuyNowPayLaterDetailsStatus valueOf(String value) {
        switch (value) {
            case "AUTHORIZED":
                return AUTHORIZED;
            case "CAPTURED":
                return CAPTURED;
            case "VOIDED":
                return VOIDED;
            case "FAILED":
                return FAILED;
            default:
                return new TenderBuyNowPayLaterDetailsStatus(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        AUTHORIZED,

        CAPTURED,

        VOIDED,

        FAILED,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitAuthorized();

        T visitCaptured();

        T visitVoided();

        T visitFailed();

        T visitUnknown(String unknownType);
    }
}
