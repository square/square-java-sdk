/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TenderBuyNowPayLaterDetails.Builder.class)
public final class TenderBuyNowPayLaterDetails {
    private final Optional<TenderBuyNowPayLaterDetailsBrand> buyNowPayLaterBrand;

    private final Optional<TenderBuyNowPayLaterDetailsStatus> status;

    private final Map<String, Object> additionalProperties;

    private TenderBuyNowPayLaterDetails(
            Optional<TenderBuyNowPayLaterDetailsBrand> buyNowPayLaterBrand,
            Optional<TenderBuyNowPayLaterDetailsStatus> status,
            Map<String, Object> additionalProperties) {
        this.buyNowPayLaterBrand = buyNowPayLaterBrand;
        this.status = status;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The Buy Now Pay Later brand.
     * See <a href="#type-brand">Brand</a> for possible values
     */
    @JsonProperty("buy_now_pay_later_brand")
    public Optional<TenderBuyNowPayLaterDetailsBrand> getBuyNowPayLaterBrand() {
        return buyNowPayLaterBrand;
    }

    /**
     * @return The buy now pay later payment's current state (such as <code>AUTHORIZED</code> or
     * <code>CAPTURED</code>). See <a href="entity:TenderBuyNowPayLaterDetailsStatus">TenderBuyNowPayLaterDetailsStatus</a>
     * for possible values.
     * See <a href="#type-status">Status</a> for possible values
     */
    @JsonProperty("status")
    public Optional<TenderBuyNowPayLaterDetailsStatus> getStatus() {
        return status;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TenderBuyNowPayLaterDetails && equalTo((TenderBuyNowPayLaterDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TenderBuyNowPayLaterDetails other) {
        return buyNowPayLaterBrand.equals(other.buyNowPayLaterBrand) && status.equals(other.status);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.buyNowPayLaterBrand, this.status);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<TenderBuyNowPayLaterDetailsBrand> buyNowPayLaterBrand = Optional.empty();

        private Optional<TenderBuyNowPayLaterDetailsStatus> status = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(TenderBuyNowPayLaterDetails other) {
            buyNowPayLaterBrand(other.getBuyNowPayLaterBrand());
            status(other.getStatus());
            return this;
        }

        /**
         * <p>The Buy Now Pay Later brand.
         * See <a href="#type-brand">Brand</a> for possible values</p>
         */
        @JsonSetter(value = "buy_now_pay_later_brand", nulls = Nulls.SKIP)
        public Builder buyNowPayLaterBrand(Optional<TenderBuyNowPayLaterDetailsBrand> buyNowPayLaterBrand) {
            this.buyNowPayLaterBrand = buyNowPayLaterBrand;
            return this;
        }

        public Builder buyNowPayLaterBrand(TenderBuyNowPayLaterDetailsBrand buyNowPayLaterBrand) {
            this.buyNowPayLaterBrand = Optional.ofNullable(buyNowPayLaterBrand);
            return this;
        }

        /**
         * <p>The buy now pay later payment's current state (such as <code>AUTHORIZED</code> or
         * <code>CAPTURED</code>). See <a href="entity:TenderBuyNowPayLaterDetailsStatus">TenderBuyNowPayLaterDetailsStatus</a>
         * for possible values.
         * See <a href="#type-status">Status</a> for possible values</p>
         */
        @JsonSetter(value = "status", nulls = Nulls.SKIP)
        public Builder status(Optional<TenderBuyNowPayLaterDetailsStatus> status) {
            this.status = status;
            return this;
        }

        public Builder status(TenderBuyNowPayLaterDetailsStatus status) {
            this.status = Optional.ofNullable(status);
            return this;
        }

        public TenderBuyNowPayLaterDetails build() {
            return new TenderBuyNowPayLaterDetails(buyNowPayLaterBrand, status, additionalProperties);
        }
    }
}
