/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class SubscriptionActionType {
    public static final SubscriptionActionType RESUME = new SubscriptionActionType(Value.RESUME, "RESUME");

    public static final SubscriptionActionType CHANGE_BILLING_ANCHOR_DATE =
            new SubscriptionActionType(Value.CHANGE_BILLING_ANCHOR_DATE, "CHANGE_BILLING_ANCHOR_DATE");

    public static final SubscriptionActionType CANCEL = new SubscriptionActionType(Value.CANCEL, "CANCEL");

    public static final SubscriptionActionType SWAP_PLAN = new SubscriptionActionType(Value.SWAP_PLAN, "SWAP_PLAN");

    public static final SubscriptionActionType PAUSE = new SubscriptionActionType(Value.PAUSE, "PAUSE");

    public static final SubscriptionActionType COMPLETE = new SubscriptionActionType(Value.COMPLETE, "COMPLETE");

    private final Value value;

    private final String string;

    SubscriptionActionType(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof SubscriptionActionType
                        && this.string.equals(((SubscriptionActionType) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case RESUME:
                return visitor.visitResume();
            case CHANGE_BILLING_ANCHOR_DATE:
                return visitor.visitChangeBillingAnchorDate();
            case CANCEL:
                return visitor.visitCancel();
            case SWAP_PLAN:
                return visitor.visitSwapPlan();
            case PAUSE:
                return visitor.visitPause();
            case COMPLETE:
                return visitor.visitComplete();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static SubscriptionActionType valueOf(String value) {
        switch (value) {
            case "RESUME":
                return RESUME;
            case "CHANGE_BILLING_ANCHOR_DATE":
                return CHANGE_BILLING_ANCHOR_DATE;
            case "CANCEL":
                return CANCEL;
            case "SWAP_PLAN":
                return SWAP_PLAN;
            case "PAUSE":
                return PAUSE;
            case "COMPLETE":
                return COMPLETE;
            default:
                return new SubscriptionActionType(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        CANCEL,

        PAUSE,

        RESUME,

        SWAP_PLAN,

        CHANGE_BILLING_ANCHOR_DATE,

        COMPLETE,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitCancel();

        T visitPause();

        T visitResume();

        T visitSwapPlan();

        T visitChangeBillingAnchorDate();

        T visitComplete();

        T visitUnknown(String unknownType);
    }
}
