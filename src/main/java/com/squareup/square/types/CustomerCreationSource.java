/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class CustomerCreationSource {
    public static final CustomerCreationSource EGIFTING = new CustomerCreationSource(Value.EGIFTING, "EGIFTING");

    public static final CustomerCreationSource TERMINAL = new CustomerCreationSource(Value.TERMINAL, "TERMINAL");

    public static final CustomerCreationSource INVOICES = new CustomerCreationSource(Value.INVOICES, "INVOICES");

    public static final CustomerCreationSource UNMERGE_RECOVERY =
            new CustomerCreationSource(Value.UNMERGE_RECOVERY, "UNMERGE_RECOVERY");

    public static final CustomerCreationSource INSTANT_PROFILE =
            new CustomerCreationSource(Value.INSTANT_PROFILE, "INSTANT_PROFILE");

    public static final CustomerCreationSource THIRD_PARTY =
            new CustomerCreationSource(Value.THIRD_PARTY, "THIRD_PARTY");

    public static final CustomerCreationSource MARKETING = new CustomerCreationSource(Value.MARKETING, "MARKETING");

    public static final CustomerCreationSource DELETION_RECOVERY =
            new CustomerCreationSource(Value.DELETION_RECOVERY, "DELETION_RECOVERY");

    public static final CustomerCreationSource OTHER = new CustomerCreationSource(Value.OTHER, "OTHER");

    public static final CustomerCreationSource APPOINTMENTS =
            new CustomerCreationSource(Value.APPOINTMENTS, "APPOINTMENTS");

    public static final CustomerCreationSource COUPON = new CustomerCreationSource(Value.COUPON, "COUPON");

    public static final CustomerCreationSource THIRD_PARTY_IMPORT =
            new CustomerCreationSource(Value.THIRD_PARTY_IMPORT, "THIRD_PARTY_IMPORT");

    public static final CustomerCreationSource MERGE = new CustomerCreationSource(Value.MERGE, "MERGE");

    public static final CustomerCreationSource EMAIL_COLLECTION =
            new CustomerCreationSource(Value.EMAIL_COLLECTION, "EMAIL_COLLECTION");

    public static final CustomerCreationSource LOYALTY = new CustomerCreationSource(Value.LOYALTY, "LOYALTY");

    public static final CustomerCreationSource IMPORT = new CustomerCreationSource(Value.IMPORT, "IMPORT");

    public static final CustomerCreationSource DIRECTORY = new CustomerCreationSource(Value.DIRECTORY, "DIRECTORY");

    public static final CustomerCreationSource FEEDBACK = new CustomerCreationSource(Value.FEEDBACK, "FEEDBACK");

    public static final CustomerCreationSource ONLINE_STORE =
            new CustomerCreationSource(Value.ONLINE_STORE, "ONLINE_STORE");

    private final Value value;

    private final String string;

    CustomerCreationSource(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof CustomerCreationSource
                        && this.string.equals(((CustomerCreationSource) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case EGIFTING:
                return visitor.visitEgifting();
            case TERMINAL:
                return visitor.visitTerminal();
            case INVOICES:
                return visitor.visitInvoices();
            case UNMERGE_RECOVERY:
                return visitor.visitUnmergeRecovery();
            case INSTANT_PROFILE:
                return visitor.visitInstantProfile();
            case THIRD_PARTY:
                return visitor.visitThirdParty();
            case MARKETING:
                return visitor.visitMarketing();
            case DELETION_RECOVERY:
                return visitor.visitDeletionRecovery();
            case OTHER:
                return visitor.visitOther();
            case APPOINTMENTS:
                return visitor.visitAppointments();
            case COUPON:
                return visitor.visitCoupon();
            case THIRD_PARTY_IMPORT:
                return visitor.visitThirdPartyImport();
            case MERGE:
                return visitor.visitMerge();
            case EMAIL_COLLECTION:
                return visitor.visitEmailCollection();
            case LOYALTY:
                return visitor.visitLoyalty();
            case IMPORT:
                return visitor.visitImport();
            case DIRECTORY:
                return visitor.visitDirectory();
            case FEEDBACK:
                return visitor.visitFeedback();
            case ONLINE_STORE:
                return visitor.visitOnlineStore();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static CustomerCreationSource valueOf(String value) {
        switch (value) {
            case "EGIFTING":
                return EGIFTING;
            case "TERMINAL":
                return TERMINAL;
            case "INVOICES":
                return INVOICES;
            case "UNMERGE_RECOVERY":
                return UNMERGE_RECOVERY;
            case "INSTANT_PROFILE":
                return INSTANT_PROFILE;
            case "THIRD_PARTY":
                return THIRD_PARTY;
            case "MARKETING":
                return MARKETING;
            case "DELETION_RECOVERY":
                return DELETION_RECOVERY;
            case "OTHER":
                return OTHER;
            case "APPOINTMENTS":
                return APPOINTMENTS;
            case "COUPON":
                return COUPON;
            case "THIRD_PARTY_IMPORT":
                return THIRD_PARTY_IMPORT;
            case "MERGE":
                return MERGE;
            case "EMAIL_COLLECTION":
                return EMAIL_COLLECTION;
            case "LOYALTY":
                return LOYALTY;
            case "IMPORT":
                return IMPORT;
            case "DIRECTORY":
                return DIRECTORY;
            case "FEEDBACK":
                return FEEDBACK;
            case "ONLINE_STORE":
                return ONLINE_STORE;
            default:
                return new CustomerCreationSource(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        OTHER,

        APPOINTMENTS,

        COUPON,

        DELETION_RECOVERY,

        DIRECTORY,

        EGIFTING,

        EMAIL_COLLECTION,

        FEEDBACK,

        IMPORT,

        INVOICES,

        LOYALTY,

        MARKETING,

        MERGE,

        ONLINE_STORE,

        INSTANT_PROFILE,

        TERMINAL,

        THIRD_PARTY,

        THIRD_PARTY_IMPORT,

        UNMERGE_RECOVERY,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitOther();

        T visitAppointments();

        T visitCoupon();

        T visitDeletionRecovery();

        T visitDirectory();

        T visitEgifting();

        T visitEmailCollection();

        T visitFeedback();

        T visitImport();

        T visitInvoices();

        T visitLoyalty();

        T visitMarketing();

        T visitMerge();

        T visitOnlineStore();

        T visitInstantProfile();

        T visitTerminal();

        T visitThirdParty();

        T visitThirdPartyImport();

        T visitUnmergeRecovery();

        T visitUnknown(String unknownType);
    }
}
