/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BatchDeleteCatalogObjectsResponse.Builder.class)
public final class BatchDeleteCatalogObjectsResponse {
    private final Optional<List<Error>> errors;

    private final Optional<List<String>> deletedObjectIds;

    private final Optional<String> deletedAt;

    private final Map<String, Object> additionalProperties;

    private BatchDeleteCatalogObjectsResponse(
            Optional<List<Error>> errors,
            Optional<List<String>> deletedObjectIds,
            Optional<String> deletedAt,
            Map<String, Object> additionalProperties) {
        this.errors = errors;
        this.deletedObjectIds = deletedObjectIds;
        this.deletedAt = deletedAt;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Any errors that occurred during the request.
     */
    @JsonProperty("errors")
    public Optional<List<Error>> getErrors() {
        return errors;
    }

    /**
     * @return The IDs of all CatalogObjects deleted by this request.
     */
    @JsonProperty("deleted_object_ids")
    public Optional<List<String>> getDeletedObjectIds() {
        return deletedObjectIds;
    }

    /**
     * @return The database <a href="https://developer.squareup.com/docs/build-basics/working-with-dates">timestamp</a> of this deletion in RFC 3339 format, e.g., &quot;2016-09-04T23:59:33.123Z&quot;.
     */
    @JsonProperty("deleted_at")
    public Optional<String> getDeletedAt() {
        return deletedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BatchDeleteCatalogObjectsResponse && equalTo((BatchDeleteCatalogObjectsResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BatchDeleteCatalogObjectsResponse other) {
        return errors.equals(other.errors)
                && deletedObjectIds.equals(other.deletedObjectIds)
                && deletedAt.equals(other.deletedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.errors, this.deletedObjectIds, this.deletedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<Error>> errors = Optional.empty();

        private Optional<List<String>> deletedObjectIds = Optional.empty();

        private Optional<String> deletedAt = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BatchDeleteCatalogObjectsResponse other) {
            errors(other.getErrors());
            deletedObjectIds(other.getDeletedObjectIds());
            deletedAt(other.getDeletedAt());
            return this;
        }

        /**
         * <p>Any errors that occurred during the request.</p>
         */
        @JsonSetter(value = "errors", nulls = Nulls.SKIP)
        public Builder errors(Optional<List<Error>> errors) {
            this.errors = errors;
            return this;
        }

        public Builder errors(List<Error> errors) {
            this.errors = Optional.ofNullable(errors);
            return this;
        }

        /**
         * <p>The IDs of all CatalogObjects deleted by this request.</p>
         */
        @JsonSetter(value = "deleted_object_ids", nulls = Nulls.SKIP)
        public Builder deletedObjectIds(Optional<List<String>> deletedObjectIds) {
            this.deletedObjectIds = deletedObjectIds;
            return this;
        }

        public Builder deletedObjectIds(List<String> deletedObjectIds) {
            this.deletedObjectIds = Optional.ofNullable(deletedObjectIds);
            return this;
        }

        /**
         * <p>The database <a href="https://developer.squareup.com/docs/build-basics/working-with-dates">timestamp</a> of this deletion in RFC 3339 format, e.g., &quot;2016-09-04T23:59:33.123Z&quot;.</p>
         */
        @JsonSetter(value = "deleted_at", nulls = Nulls.SKIP)
        public Builder deletedAt(Optional<String> deletedAt) {
            this.deletedAt = deletedAt;
            return this;
        }

        public Builder deletedAt(String deletedAt) {
            this.deletedAt = Optional.ofNullable(deletedAt);
            return this;
        }

        public BatchDeleteCatalogObjectsResponse build() {
            return new BatchDeleteCatalogObjectsResponse(errors, deletedObjectIds, deletedAt, additionalProperties);
        }
    }
}
