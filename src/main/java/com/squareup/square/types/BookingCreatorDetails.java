/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BookingCreatorDetails.Builder.class)
public final class BookingCreatorDetails {
    private final Optional<BookingCreatorDetailsCreatorType> creatorType;

    private final Optional<String> teamMemberId;

    private final Optional<String> customerId;

    private final Map<String, Object> additionalProperties;

    private BookingCreatorDetails(
            Optional<BookingCreatorDetailsCreatorType> creatorType,
            Optional<String> teamMemberId,
            Optional<String> customerId,
            Map<String, Object> additionalProperties) {
        this.creatorType = creatorType;
        this.teamMemberId = teamMemberId;
        this.customerId = customerId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The seller-accessible type of the creator of the booking.
     * See <a href="#type-bookingcreatordetailscreatortype">BookingCreatorDetailsCreatorType</a> for possible values
     */
    @JsonProperty("creator_type")
    public Optional<BookingCreatorDetailsCreatorType> getCreatorType() {
        return creatorType;
    }

    /**
     * @return The ID of the team member who created the booking, when the booking creator is of the <code>TEAM_MEMBER</code> type.
     * Access to this field requires seller-level permissions.
     */
    @JsonProperty("team_member_id")
    public Optional<String> getTeamMemberId() {
        return teamMemberId;
    }

    /**
     * @return The ID of the customer who created the booking, when the booking creator is of the <code>CUSTOMER</code> type.
     * Access to this field requires seller-level permissions.
     */
    @JsonProperty("customer_id")
    public Optional<String> getCustomerId() {
        return customerId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BookingCreatorDetails && equalTo((BookingCreatorDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BookingCreatorDetails other) {
        return creatorType.equals(other.creatorType)
                && teamMemberId.equals(other.teamMemberId)
                && customerId.equals(other.customerId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.creatorType, this.teamMemberId, this.customerId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<BookingCreatorDetailsCreatorType> creatorType = Optional.empty();

        private Optional<String> teamMemberId = Optional.empty();

        private Optional<String> customerId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BookingCreatorDetails other) {
            creatorType(other.getCreatorType());
            teamMemberId(other.getTeamMemberId());
            customerId(other.getCustomerId());
            return this;
        }

        /**
         * <p>The seller-accessible type of the creator of the booking.
         * See <a href="#type-bookingcreatordetailscreatortype">BookingCreatorDetailsCreatorType</a> for possible values</p>
         */
        @JsonSetter(value = "creator_type", nulls = Nulls.SKIP)
        public Builder creatorType(Optional<BookingCreatorDetailsCreatorType> creatorType) {
            this.creatorType = creatorType;
            return this;
        }

        public Builder creatorType(BookingCreatorDetailsCreatorType creatorType) {
            this.creatorType = Optional.ofNullable(creatorType);
            return this;
        }

        /**
         * <p>The ID of the team member who created the booking, when the booking creator is of the <code>TEAM_MEMBER</code> type.
         * Access to this field requires seller-level permissions.</p>
         */
        @JsonSetter(value = "team_member_id", nulls = Nulls.SKIP)
        public Builder teamMemberId(Optional<String> teamMemberId) {
            this.teamMemberId = teamMemberId;
            return this;
        }

        public Builder teamMemberId(String teamMemberId) {
            this.teamMemberId = Optional.ofNullable(teamMemberId);
            return this;
        }

        /**
         * <p>The ID of the customer who created the booking, when the booking creator is of the <code>CUSTOMER</code> type.
         * Access to this field requires seller-level permissions.</p>
         */
        @JsonSetter(value = "customer_id", nulls = Nulls.SKIP)
        public Builder customerId(Optional<String> customerId) {
            this.customerId = customerId;
            return this;
        }

        public Builder customerId(String customerId) {
            this.customerId = Optional.ofNullable(customerId);
            return this;
        }

        public BookingCreatorDetails build() {
            return new BookingCreatorDetails(creatorType, teamMemberId, customerId, additionalProperties);
        }
    }
}
