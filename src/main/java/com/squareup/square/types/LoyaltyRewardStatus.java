/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class LoyaltyRewardStatus {
    public static final LoyaltyRewardStatus DELETED = new LoyaltyRewardStatus(Value.DELETED, "DELETED");

    public static final LoyaltyRewardStatus ISSUED = new LoyaltyRewardStatus(Value.ISSUED, "ISSUED");

    public static final LoyaltyRewardStatus REDEEMED = new LoyaltyRewardStatus(Value.REDEEMED, "REDEEMED");

    private final Value value;

    private final String string;

    LoyaltyRewardStatus(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof LoyaltyRewardStatus && this.string.equals(((LoyaltyRewardStatus) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case DELETED:
                return visitor.visitDeleted();
            case ISSUED:
                return visitor.visitIssued();
            case REDEEMED:
                return visitor.visitRedeemed();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static LoyaltyRewardStatus valueOf(String value) {
        switch (value) {
            case "DELETED":
                return DELETED;
            case "ISSUED":
                return ISSUED;
            case "REDEEMED":
                return REDEEMED;
            default:
                return new LoyaltyRewardStatus(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ISSUED,

        REDEEMED,

        DELETED,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitIssued();

        T visitRedeemed();

        T visitDeleted();

        T visitUnknown(String unknownType);
    }
}
