/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class V1TenderEntryMethod {
    public static final V1TenderEntryMethod WEB_FORM = new V1TenderEntryMethod(Value.WEB_FORM, "WEB_FORM");

    public static final V1TenderEntryMethod SQUARE_CASH = new V1TenderEntryMethod(Value.SQUARE_CASH, "SQUARE_CASH");

    public static final V1TenderEntryMethod OTHER = new V1TenderEntryMethod(Value.OTHER, "OTHER");

    public static final V1TenderEntryMethod MANUAL = new V1TenderEntryMethod(Value.MANUAL, "MANUAL");

    public static final V1TenderEntryMethod SCANNED = new V1TenderEntryMethod(Value.SCANNED, "SCANNED");

    public static final V1TenderEntryMethod SWIPED = new V1TenderEntryMethod(Value.SWIPED, "SWIPED");

    public static final V1TenderEntryMethod SQUARE_WALLET =
            new V1TenderEntryMethod(Value.SQUARE_WALLET, "SQUARE_WALLET");

    private final Value value;

    private final String string;

    V1TenderEntryMethod(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof V1TenderEntryMethod && this.string.equals(((V1TenderEntryMethod) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case WEB_FORM:
                return visitor.visitWebForm();
            case SQUARE_CASH:
                return visitor.visitSquareCash();
            case OTHER:
                return visitor.visitOther();
            case MANUAL:
                return visitor.visitManual();
            case SCANNED:
                return visitor.visitScanned();
            case SWIPED:
                return visitor.visitSwiped();
            case SQUARE_WALLET:
                return visitor.visitSquareWallet();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static V1TenderEntryMethod valueOf(String value) {
        switch (value) {
            case "WEB_FORM":
                return WEB_FORM;
            case "SQUARE_CASH":
                return SQUARE_CASH;
            case "OTHER":
                return OTHER;
            case "MANUAL":
                return MANUAL;
            case "SCANNED":
                return SCANNED;
            case "SWIPED":
                return SWIPED;
            case "SQUARE_WALLET":
                return SQUARE_WALLET;
            default:
                return new V1TenderEntryMethod(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        MANUAL,

        SCANNED,

        SQUARE_CASH,

        SQUARE_WALLET,

        SWIPED,

        WEB_FORM,

        OTHER,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitManual();

        T visitScanned();

        T visitSquareCash();

        T visitSquareWallet();

        T visitSwiped();

        T visitWebForm();

        T visitOther();

        T visitUnknown(String unknownType);
    }
}
