/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.devices;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.SyncPagingIterable;
import com.squareup.square.devices.types.CreateDeviceCodeRequest;
import com.squareup.square.devices.types.GetCodesRequest;
import com.squareup.square.devices.types.ListCodesRequest;
import com.squareup.square.types.CreateDeviceCodeResponse;
import com.squareup.square.types.DeviceCode;
import com.squareup.square.types.GetDeviceCodeResponse;

public class CodesClient {
    protected final ClientOptions clientOptions;

    private final RawCodesClient rawClient;

    public CodesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawCodesClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawCodesClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Lists all DeviceCodes associated with the merchant.
     */
    public SyncPagingIterable<DeviceCode> list() {
        return this.rawClient.list().body();
    }

    /**
     * Lists all DeviceCodes associated with the merchant.
     */
    public SyncPagingIterable<DeviceCode> list(ListCodesRequest request) {
        return this.rawClient.list(request).body();
    }

    /**
     * Lists all DeviceCodes associated with the merchant.
     */
    public SyncPagingIterable<DeviceCode> list(ListCodesRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).body();
    }

    /**
     * Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected
     * terminal mode.
     */
    public CreateDeviceCodeResponse create(CreateDeviceCodeRequest request) {
        return this.rawClient.create(request).body();
    }

    /**
     * Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected
     * terminal mode.
     */
    public CreateDeviceCodeResponse create(CreateDeviceCodeRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).body();
    }

    /**
     * Retrieves DeviceCode with the associated ID.
     */
    public GetDeviceCodeResponse get(GetCodesRequest request) {
        return this.rawClient.get(request).body();
    }

    /**
     * Retrieves DeviceCode with the associated ID.
     */
    public GetDeviceCodeResponse get(GetCodesRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).body();
    }
}
