/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.types.CreateJobRequest;
import com.squareup.square.types.CreateJobResponse;
import com.squareup.square.types.ListJobsRequest;
import com.squareup.square.types.ListJobsResponse;
import com.squareup.square.types.RetrieveJobRequest;
import com.squareup.square.types.RetrieveJobResponse;
import com.squareup.square.types.UpdateJobRequest;
import com.squareup.square.types.UpdateJobResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncTeamClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawTeamClient rawClient;

    public AsyncTeamClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawTeamClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawTeamClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Lists jobs in a seller account. Results are sorted by title in ascending order.
     */
    public CompletableFuture<ListJobsResponse> listJobs() {
        return this.rawClient.listJobs().thenApply(response -> response.body());
    }

    /**
     * Lists jobs in a seller account. Results are sorted by title in ascending order.
     */
    public CompletableFuture<ListJobsResponse> listJobs(ListJobsRequest request) {
        return this.rawClient.listJobs(request).thenApply(response -> response.body());
    }

    /**
     * Lists jobs in a seller account. Results are sorted by title in ascending order.
     */
    public CompletableFuture<ListJobsResponse> listJobs(ListJobsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listJobs(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates a job in a seller account. A job defines a title and tip eligibility. Note that
     * compensation is defined in a <a href="entity:JobAssignment">job assignment</a> in a team member's wage setting.
     */
    public CompletableFuture<CreateJobResponse> createJob(CreateJobRequest request) {
        return this.rawClient.createJob(request).thenApply(response -> response.body());
    }

    /**
     * Creates a job in a seller account. A job defines a title and tip eligibility. Note that
     * compensation is defined in a <a href="entity:JobAssignment">job assignment</a> in a team member's wage setting.
     */
    public CompletableFuture<CreateJobResponse> createJob(CreateJobRequest request, RequestOptions requestOptions) {
        return this.rawClient.createJob(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a specified job.
     */
    public CompletableFuture<RetrieveJobResponse> retrieveJob(RetrieveJobRequest request) {
        return this.rawClient.retrieveJob(request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a specified job.
     */
    public CompletableFuture<RetrieveJobResponse> retrieveJob(
            RetrieveJobRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieveJob(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates the title or tip eligibility of a job. Changes to the title propagate to all
     * <code>JobAssignment</code>, <code>Shift</code>, and <code>TeamMemberWage</code> objects that reference the job ID. Changes to
     * tip eligibility propagate to all <code>TeamMemberWage</code> objects that reference the job ID.
     */
    public CompletableFuture<UpdateJobResponse> updateJob(UpdateJobRequest request) {
        return this.rawClient.updateJob(request).thenApply(response -> response.body());
    }

    /**
     * Updates the title or tip eligibility of a job. Changes to the title propagate to all
     * <code>JobAssignment</code>, <code>Shift</code>, and <code>TeamMemberWage</code> objects that reference the job ID. Changes to
     * tip eligibility propagate to all <code>TeamMemberWage</code> objects that reference the job ID.
     */
    public CompletableFuture<UpdateJobResponse> updateJob(UpdateJobRequest request, RequestOptions requestOptions) {
        return this.rawClient.updateJob(request, requestOptions).thenApply(response -> response.body());
    }
}
