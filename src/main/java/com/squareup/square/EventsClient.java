/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.types.DisableEventsResponse;
import com.squareup.square.types.EnableEventsResponse;
import com.squareup.square.types.ListEventTypesRequest;
import com.squareup.square.types.ListEventTypesResponse;
import com.squareup.square.types.SearchEventsRequest;
import com.squareup.square.types.SearchEventsResponse;

public class EventsClient {
    protected final ClientOptions clientOptions;

    private final RawEventsClient rawClient;

    public EventsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawEventsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawEventsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Search for Square API events that occur within a 28-day timeframe.
     */
    public SearchEventsResponse searchEvents() {
        return this.rawClient.searchEvents().body();
    }

    /**
     * Search for Square API events that occur within a 28-day timeframe.
     */
    public SearchEventsResponse searchEvents(SearchEventsRequest request) {
        return this.rawClient.searchEvents(request).body();
    }

    /**
     * Search for Square API events that occur within a 28-day timeframe.
     */
    public SearchEventsResponse searchEvents(SearchEventsRequest request, RequestOptions requestOptions) {
        return this.rawClient.searchEvents(request, requestOptions).body();
    }

    /**
     * Disables events to prevent them from being searchable.
     * All events are disabled by default. You must enable events to make them searchable.
     * Disabling events for a specific time period prevents them from being searchable, even if you re-enable them later.
     */
    public DisableEventsResponse disableEvents() {
        return this.rawClient.disableEvents().body();
    }

    /**
     * Disables events to prevent them from being searchable.
     * All events are disabled by default. You must enable events to make them searchable.
     * Disabling events for a specific time period prevents them from being searchable, even if you re-enable them later.
     */
    public DisableEventsResponse disableEvents(RequestOptions requestOptions) {
        return this.rawClient.disableEvents(requestOptions).body();
    }

    /**
     * Enables events to make them searchable. Only events that occur while in the enabled state are searchable.
     */
    public EnableEventsResponse enableEvents() {
        return this.rawClient.enableEvents().body();
    }

    /**
     * Enables events to make them searchable. Only events that occur while in the enabled state are searchable.
     */
    public EnableEventsResponse enableEvents(RequestOptions requestOptions) {
        return this.rawClient.enableEvents(requestOptions).body();
    }

    /**
     * Lists all event types that you can subscribe to as webhooks or query using the Events API.
     */
    public ListEventTypesResponse listEventTypes() {
        return this.rawClient.listEventTypes().body();
    }

    /**
     * Lists all event types that you can subscribe to as webhooks or query using the Events API.
     */
    public ListEventTypesResponse listEventTypes(ListEventTypesRequest request) {
        return this.rawClient.listEventTypes(request).body();
    }

    /**
     * Lists all event types that you can subscribe to as webhooks or query using the Events API.
     */
    public ListEventTypesResponse listEventTypes(ListEventTypesRequest request, RequestOptions requestOptions) {
        return this.rawClient.listEventTypes(request, requestOptions).body();
    }
}
