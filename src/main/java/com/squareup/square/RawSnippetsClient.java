/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.MediaTypes;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.SquareApiException;
import com.squareup.square.core.SquareClientHttpResponse;
import com.squareup.square.core.SquareException;
import com.squareup.square.types.DeleteSnippetResponse;
import com.squareup.square.types.DeleteSnippetsRequest;
import com.squareup.square.types.GetSnippetResponse;
import com.squareup.square.types.GetSnippetsRequest;
import com.squareup.square.types.UpsertSnippetRequest;
import com.squareup.square.types.UpsertSnippetResponse;
import java.io.IOException;
import okhttp3.Headers;
import okhttp3.HttpUrl;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import okhttp3.ResponseBody;

public class RawSnippetsClient {
    protected final ClientOptions clientOptions;

    public RawSnippetsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
    }

    /**
     * Retrieves your snippet from a Square Online site. A site can contain snippets from multiple snippet applications, but you can retrieve only the snippet that was added by your application.
     * <p>You can call <a href="api-endpoint:Sites-ListSites">ListSites</a> to get the IDs of the sites that belong to a seller.</p>
     * <p><strong>Note:</strong> Square Online APIs are publicly available as part of an early access program. For more information, see <a href="https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis">Early access program for Square Online APIs</a>.</p>
     */
    public SquareClientHttpResponse<GetSnippetResponse> get(GetSnippetsRequest request) {
        return get(request, null);
    }

    /**
     * Retrieves your snippet from a Square Online site. A site can contain snippets from multiple snippet applications, but you can retrieve only the snippet that was added by your application.
     * <p>You can call <a href="api-endpoint:Sites-ListSites">ListSites</a> to get the IDs of the sites that belong to a seller.</p>
     * <p><strong>Note:</strong> Square Online APIs are publicly available as part of an early access program. For more information, see <a href="https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis">Early access program for Square Online APIs</a>.</p>
     */
    public SquareClientHttpResponse<GetSnippetResponse> get(GetSnippetsRequest request, RequestOptions requestOptions) {
        HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .addPathSegments("v2/sites")
                .addPathSegment(request.getSiteId())
                .addPathSegments("snippet")
                .build();
        Request.Builder _requestBuilder = new Request.Builder()
                .url(httpUrl)
                .method("GET", null)
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Accept", "application/json");
        Request okhttpRequest = _requestBuilder.build();
        OkHttpClient client = clientOptions.httpClient();
        if (requestOptions != null && requestOptions.getTimeout().isPresent()) {
            client = clientOptions.httpClientWithTimeout(requestOptions);
        }
        try (Response response = client.newCall(okhttpRequest).execute()) {
            ResponseBody responseBody = response.body();
            if (response.isSuccessful()) {
                return new SquareClientHttpResponse<>(
                        ObjectMappers.JSON_MAPPER.readValue(responseBody.string(), GetSnippetResponse.class), response);
            }
            String responseBodyString = responseBody != null ? responseBody.string() : "{}";
            throw new SquareApiException(
                    "Error with status code " + response.code(),
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(responseBodyString, Object.class),
                    response);
        } catch (IOException e) {
            throw new SquareException("Network error executing HTTP request", e);
        }
    }

    /**
     * Adds a snippet to a Square Online site or updates the existing snippet on the site.
     * The snippet code is appended to the end of the <code>head</code> element on every page of the site, except checkout pages. A snippet application can add one snippet to a given site.
     * <p>You can call <a href="api-endpoint:Sites-ListSites">ListSites</a> to get the IDs of the sites that belong to a seller.</p>
     * <p><strong>Note:</strong> Square Online APIs are publicly available as part of an early access program. For more information, see <a href="https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis">Early access program for Square Online APIs</a>.</p>
     */
    public SquareClientHttpResponse<UpsertSnippetResponse> upsert(UpsertSnippetRequest request) {
        return upsert(request, null);
    }

    /**
     * Adds a snippet to a Square Online site or updates the existing snippet on the site.
     * The snippet code is appended to the end of the <code>head</code> element on every page of the site, except checkout pages. A snippet application can add one snippet to a given site.
     * <p>You can call <a href="api-endpoint:Sites-ListSites">ListSites</a> to get the IDs of the sites that belong to a seller.</p>
     * <p><strong>Note:</strong> Square Online APIs are publicly available as part of an early access program. For more information, see <a href="https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis">Early access program for Square Online APIs</a>.</p>
     */
    public SquareClientHttpResponse<UpsertSnippetResponse> upsert(
            UpsertSnippetRequest request, RequestOptions requestOptions) {
        HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .addPathSegments("v2/sites")
                .addPathSegment(request.getSiteId())
                .addPathSegments("snippet")
                .build();
        RequestBody body;
        try {
            body = RequestBody.create(
                    ObjectMappers.JSON_MAPPER.writeValueAsBytes(request), MediaTypes.APPLICATION_JSON);
        } catch (JsonProcessingException e) {
            throw new SquareException("Failed to serialize request", e);
        }
        Request okhttpRequest = new Request.Builder()
                .url(httpUrl)
                .method("POST", body)
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Content-Type", "application/json")
                .addHeader("Accept", "application/json")
                .build();
        OkHttpClient client = clientOptions.httpClient();
        if (requestOptions != null && requestOptions.getTimeout().isPresent()) {
            client = clientOptions.httpClientWithTimeout(requestOptions);
        }
        try (Response response = client.newCall(okhttpRequest).execute()) {
            ResponseBody responseBody = response.body();
            if (response.isSuccessful()) {
                return new SquareClientHttpResponse<>(
                        ObjectMappers.JSON_MAPPER.readValue(responseBody.string(), UpsertSnippetResponse.class),
                        response);
            }
            String responseBodyString = responseBody != null ? responseBody.string() : "{}";
            throw new SquareApiException(
                    "Error with status code " + response.code(),
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(responseBodyString, Object.class),
                    response);
        } catch (IOException e) {
            throw new SquareException("Network error executing HTTP request", e);
        }
    }

    /**
     * Removes your snippet from a Square Online site.
     * <p>You can call <a href="api-endpoint:Sites-ListSites">ListSites</a> to get the IDs of the sites that belong to a seller.</p>
     * <p><strong>Note:</strong> Square Online APIs are publicly available as part of an early access program. For more information, see <a href="https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis">Early access program for Square Online APIs</a>.</p>
     */
    public SquareClientHttpResponse<DeleteSnippetResponse> delete(DeleteSnippetsRequest request) {
        return delete(request, null);
    }

    /**
     * Removes your snippet from a Square Online site.
     * <p>You can call <a href="api-endpoint:Sites-ListSites">ListSites</a> to get the IDs of the sites that belong to a seller.</p>
     * <p><strong>Note:</strong> Square Online APIs are publicly available as part of an early access program. For more information, see <a href="https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis">Early access program for Square Online APIs</a>.</p>
     */
    public SquareClientHttpResponse<DeleteSnippetResponse> delete(
            DeleteSnippetsRequest request, RequestOptions requestOptions) {
        HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .addPathSegments("v2/sites")
                .addPathSegment(request.getSiteId())
                .addPathSegments("snippet")
                .build();
        Request.Builder _requestBuilder = new Request.Builder()
                .url(httpUrl)
                .method("DELETE", null)
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Accept", "application/json");
        Request okhttpRequest = _requestBuilder.build();
        OkHttpClient client = clientOptions.httpClient();
        if (requestOptions != null && requestOptions.getTimeout().isPresent()) {
            client = clientOptions.httpClientWithTimeout(requestOptions);
        }
        try (Response response = client.newCall(okhttpRequest).execute()) {
            ResponseBody responseBody = response.body();
            if (response.isSuccessful()) {
                return new SquareClientHttpResponse<>(
                        ObjectMappers.JSON_MAPPER.readValue(responseBody.string(), DeleteSnippetResponse.class),
                        response);
            }
            String responseBodyString = responseBody != null ? responseBody.string() : "{}";
            throw new SquareApiException(
                    "Error with status code " + response.code(),
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(responseBodyString, Object.class),
                    response);
        } catch (IOException e) {
            throw new SquareException("Network error executing HTTP request", e);
        }
    }
}
