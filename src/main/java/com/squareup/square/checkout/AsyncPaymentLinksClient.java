/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.checkout;

import com.squareup.square.checkout.types.CreatePaymentLinkRequest;
import com.squareup.square.checkout.types.DeletePaymentLinksRequest;
import com.squareup.square.checkout.types.GetPaymentLinksRequest;
import com.squareup.square.checkout.types.ListPaymentLinksRequest;
import com.squareup.square.checkout.types.UpdatePaymentLinkRequest;
import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.SyncPagingIterable;
import com.squareup.square.types.CreatePaymentLinkResponse;
import com.squareup.square.types.DeletePaymentLinkResponse;
import com.squareup.square.types.GetPaymentLinkResponse;
import com.squareup.square.types.PaymentLink;
import com.squareup.square.types.UpdatePaymentLinkResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncPaymentLinksClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawPaymentLinksClient rawClient;

    public AsyncPaymentLinksClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawPaymentLinksClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawPaymentLinksClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Lists all payment links.
     */
    public CompletableFuture<SyncPagingIterable<PaymentLink>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Lists all payment links.
     */
    public CompletableFuture<SyncPagingIterable<PaymentLink>> list(ListPaymentLinksRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Lists all payment links.
     */
    public CompletableFuture<SyncPagingIterable<PaymentLink>> list(
            ListPaymentLinksRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates a Square-hosted checkout page. Applications can share the resulting payment link with their buyer to pay for goods and services.
     */
    public CompletableFuture<CreatePaymentLinkResponse> create() {
        return this.rawClient.create().thenApply(response -> response.body());
    }

    /**
     * Creates a Square-hosted checkout page. Applications can share the resulting payment link with their buyer to pay for goods and services.
     */
    public CompletableFuture<CreatePaymentLinkResponse> create(CreatePaymentLinkRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Creates a Square-hosted checkout page. Applications can share the resulting payment link with their buyer to pay for goods and services.
     */
    public CompletableFuture<CreatePaymentLinkResponse> create(
            CreatePaymentLinkRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a payment link.
     */
    public CompletableFuture<GetPaymentLinkResponse> get(GetPaymentLinksRequest request) {
        return this.rawClient.get(request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a payment link.
     */
    public CompletableFuture<GetPaymentLinkResponse> get(
            GetPaymentLinksRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates a payment link. You can update the <code>payment_link</code> fields such as
     * <code>description</code>, <code>checkout_options</code>, and  <code>pre_populated_data</code>.
     * You cannot update other fields such as the <code>order_id</code>, <code>version</code>, <code>URL</code>, or <code>timestamp</code> field.
     */
    public CompletableFuture<UpdatePaymentLinkResponse> update(UpdatePaymentLinkRequest request) {
        return this.rawClient.update(request).thenApply(response -> response.body());
    }

    /**
     * Updates a payment link. You can update the <code>payment_link</code> fields such as
     * <code>description</code>, <code>checkout_options</code>, and  <code>pre_populated_data</code>.
     * You cannot update other fields such as the <code>order_id</code>, <code>version</code>, <code>URL</code>, or <code>timestamp</code> field.
     */
    public CompletableFuture<UpdatePaymentLinkResponse> update(
            UpdatePaymentLinkRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Deletes a payment link.
     */
    public CompletableFuture<DeletePaymentLinkResponse> delete(DeletePaymentLinksRequest request) {
        return this.rawClient.delete(request).thenApply(response -> response.body());
    }

    /**
     * Deletes a payment link.
     */
    public CompletableFuture<DeletePaymentLinkResponse> delete(
            DeletePaymentLinksRequest request, RequestOptions requestOptions) {
        return this.rawClient.delete(request, requestOptions).thenApply(response -> response.body());
    }
}
