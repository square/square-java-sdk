/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.checkout;

import com.squareup.square.checkout.types.CreatePaymentLinkRequest;
import com.squareup.square.checkout.types.DeletePaymentLinksRequest;
import com.squareup.square.checkout.types.GetPaymentLinksRequest;
import com.squareup.square.checkout.types.ListPaymentLinksRequest;
import com.squareup.square.checkout.types.UpdatePaymentLinkRequest;
import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.SyncPagingIterable;
import com.squareup.square.types.CreatePaymentLinkResponse;
import com.squareup.square.types.DeletePaymentLinkResponse;
import com.squareup.square.types.GetPaymentLinkResponse;
import com.squareup.square.types.PaymentLink;
import com.squareup.square.types.UpdatePaymentLinkResponse;

public class PaymentLinksClient {
    protected final ClientOptions clientOptions;

    private final RawPaymentLinksClient rawClient;

    public PaymentLinksClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawPaymentLinksClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawPaymentLinksClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Lists all payment links.
     */
    public SyncPagingIterable<PaymentLink> list() {
        return this.rawClient.list().body();
    }

    /**
     * Lists all payment links.
     */
    public SyncPagingIterable<PaymentLink> list(ListPaymentLinksRequest request) {
        return this.rawClient.list(request).body();
    }

    /**
     * Lists all payment links.
     */
    public SyncPagingIterable<PaymentLink> list(ListPaymentLinksRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).body();
    }

    /**
     * Creates a Square-hosted checkout page. Applications can share the resulting payment link with their buyer to pay for goods and services.
     */
    public CreatePaymentLinkResponse create() {
        return this.rawClient.create().body();
    }

    /**
     * Creates a Square-hosted checkout page. Applications can share the resulting payment link with their buyer to pay for goods and services.
     */
    public CreatePaymentLinkResponse create(CreatePaymentLinkRequest request) {
        return this.rawClient.create(request).body();
    }

    /**
     * Creates a Square-hosted checkout page. Applications can share the resulting payment link with their buyer to pay for goods and services.
     */
    public CreatePaymentLinkResponse create(CreatePaymentLinkRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).body();
    }

    /**
     * Retrieves a payment link.
     */
    public GetPaymentLinkResponse get(GetPaymentLinksRequest request) {
        return this.rawClient.get(request).body();
    }

    /**
     * Retrieves a payment link.
     */
    public GetPaymentLinkResponse get(GetPaymentLinksRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).body();
    }

    /**
     * Updates a payment link. You can update the <code>payment_link</code> fields such as
     * <code>description</code>, <code>checkout_options</code>, and  <code>pre_populated_data</code>.
     * You cannot update other fields such as the <code>order_id</code>, <code>version</code>, <code>URL</code>, or <code>timestamp</code> field.
     */
    public UpdatePaymentLinkResponse update(UpdatePaymentLinkRequest request) {
        return this.rawClient.update(request).body();
    }

    /**
     * Updates a payment link. You can update the <code>payment_link</code> fields such as
     * <code>description</code>, <code>checkout_options</code>, and  <code>pre_populated_data</code>.
     * You cannot update other fields such as the <code>order_id</code>, <code>version</code>, <code>URL</code>, or <code>timestamp</code> field.
     */
    public UpdatePaymentLinkResponse update(UpdatePaymentLinkRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(request, requestOptions).body();
    }

    /**
     * Deletes a payment link.
     */
    public DeletePaymentLinkResponse delete(DeletePaymentLinksRequest request) {
        return this.rawClient.delete(request).body();
    }

    /**
     * Deletes a payment link.
     */
    public DeletePaymentLinkResponse delete(DeletePaymentLinksRequest request, RequestOptions requestOptions) {
        return this.rawClient.delete(request, requestOptions).body();
    }
}
