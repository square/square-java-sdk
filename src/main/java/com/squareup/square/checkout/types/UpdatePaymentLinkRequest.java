/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.checkout.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.PaymentLink;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdatePaymentLinkRequest.Builder.class)
public final class UpdatePaymentLinkRequest {
    private final String id;

    private final PaymentLink paymentLink;

    private final Map<String, Object> additionalProperties;

    private UpdatePaymentLinkRequest(String id, PaymentLink paymentLink, Map<String, Object> additionalProperties) {
        this.id = id;
        this.paymentLink = paymentLink;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the payment link to update.
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The <code>payment_link</code> object describing the updates to apply.
     * For more information, see <a href="https://developer.squareup.com/docs/checkout-api/manage-checkout#update-a-payment-link">Update a payment link</a>.
     */
    @JsonProperty("payment_link")
    public PaymentLink getPaymentLink() {
        return paymentLink;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdatePaymentLinkRequest && equalTo((UpdatePaymentLinkRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdatePaymentLinkRequest other) {
        return id.equals(other.id) && paymentLink.equals(other.paymentLink);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.paymentLink);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        PaymentLinkStage id(@NotNull String id);

        Builder from(UpdatePaymentLinkRequest other);
    }

    public interface PaymentLinkStage {
        _FinalStage paymentLink(@NotNull PaymentLink paymentLink);
    }

    public interface _FinalStage {
        UpdatePaymentLinkRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, PaymentLinkStage, _FinalStage {
        private String id;

        private PaymentLink paymentLink;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UpdatePaymentLinkRequest other) {
            id(other.getId());
            paymentLink(other.getPaymentLink());
            return this;
        }

        /**
         * <p>The ID of the payment link to update.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public PaymentLinkStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The <code>payment_link</code> object describing the updates to apply.
         * For more information, see <a href="https://developer.squareup.com/docs/checkout-api/manage-checkout#update-a-payment-link">Update a payment link</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("payment_link")
        public _FinalStage paymentLink(@NotNull PaymentLink paymentLink) {
            this.paymentLink = Objects.requireNonNull(paymentLink, "paymentLink must not be null");
            return this;
        }

        @java.lang.Override
        public UpdatePaymentLinkRequest build() {
            return new UpdatePaymentLinkRequest(id, paymentLink, additionalProperties);
        }
    }
}
