/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square;

import com.squareup.square.checkout.AsyncPaymentLinksClient;
import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.Suppliers;
import com.squareup.square.types.RetrieveLocationSettingsRequest;
import com.squareup.square.types.RetrieveLocationSettingsResponse;
import com.squareup.square.types.RetrieveMerchantSettingsResponse;
import com.squareup.square.types.UpdateLocationSettingsRequest;
import com.squareup.square.types.UpdateLocationSettingsResponse;
import com.squareup.square.types.UpdateMerchantSettingsRequest;
import com.squareup.square.types.UpdateMerchantSettingsResponse;
import java.util.concurrent.CompletableFuture;
import java.util.function.Supplier;

public class AsyncCheckoutClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawCheckoutClient rawClient;

    protected final Supplier<AsyncPaymentLinksClient> paymentLinksClient;

    public AsyncCheckoutClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawCheckoutClient(clientOptions);
        this.paymentLinksClient = Suppliers.memoize(() -> new AsyncPaymentLinksClient(clientOptions));
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawCheckoutClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Retrieves the location-level settings for a Square-hosted checkout page.
     */
    public CompletableFuture<RetrieveLocationSettingsResponse> retrieveLocationSettings(
            RetrieveLocationSettingsRequest request) {
        return this.rawClient.retrieveLocationSettings(request).thenApply(response -> response.body());
    }

    /**
     * Retrieves the location-level settings for a Square-hosted checkout page.
     */
    public CompletableFuture<RetrieveLocationSettingsResponse> retrieveLocationSettings(
            RetrieveLocationSettingsRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieveLocationSettings(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates the location-level settings for a Square-hosted checkout page.
     */
    public CompletableFuture<UpdateLocationSettingsResponse> updateLocationSettings(
            UpdateLocationSettingsRequest request) {
        return this.rawClient.updateLocationSettings(request).thenApply(response -> response.body());
    }

    /**
     * Updates the location-level settings for a Square-hosted checkout page.
     */
    public CompletableFuture<UpdateLocationSettingsResponse> updateLocationSettings(
            UpdateLocationSettingsRequest request, RequestOptions requestOptions) {
        return this.rawClient.updateLocationSettings(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves the merchant-level settings for a Square-hosted checkout page.
     */
    public CompletableFuture<RetrieveMerchantSettingsResponse> retrieveMerchantSettings() {
        return this.rawClient.retrieveMerchantSettings().thenApply(response -> response.body());
    }

    /**
     * Retrieves the merchant-level settings for a Square-hosted checkout page.
     */
    public CompletableFuture<RetrieveMerchantSettingsResponse> retrieveMerchantSettings(RequestOptions requestOptions) {
        return this.rawClient.retrieveMerchantSettings(requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates the merchant-level settings for a Square-hosted checkout page.
     */
    public CompletableFuture<UpdateMerchantSettingsResponse> updateMerchantSettings(
            UpdateMerchantSettingsRequest request) {
        return this.rawClient.updateMerchantSettings(request).thenApply(response -> response.body());
    }

    /**
     * Updates the merchant-level settings for a Square-hosted checkout page.
     */
    public CompletableFuture<UpdateMerchantSettingsResponse> updateMerchantSettings(
            UpdateMerchantSettingsRequest request, RequestOptions requestOptions) {
        return this.rawClient.updateMerchantSettings(request, requestOptions).thenApply(response -> response.body());
    }

    public AsyncPaymentLinksClient paymentLinks() {
        return this.paymentLinksClient.get();
    }
}
