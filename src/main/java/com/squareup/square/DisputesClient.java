/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.Suppliers;
import com.squareup.square.core.SyncPagingIterable;
import com.squareup.square.disputes.EvidenceClient;
import com.squareup.square.types.AcceptDisputeResponse;
import com.squareup.square.types.AcceptDisputesRequest;
import com.squareup.square.types.CreateDisputeEvidenceFileResponse;
import com.squareup.square.types.CreateDisputeEvidenceTextRequest;
import com.squareup.square.types.CreateDisputeEvidenceTextResponse;
import com.squareup.square.types.CreateEvidenceFileDisputesRequest;
import com.squareup.square.types.Dispute;
import com.squareup.square.types.GetDisputeResponse;
import com.squareup.square.types.GetDisputesRequest;
import com.squareup.square.types.ListDisputesRequest;
import com.squareup.square.types.SubmitEvidenceDisputesRequest;
import com.squareup.square.types.SubmitEvidenceResponse;
import java.util.function.Supplier;

public class DisputesClient {
    protected final ClientOptions clientOptions;

    private final RawDisputesClient rawClient;

    protected final Supplier<EvidenceClient> evidenceClient;

    public DisputesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawDisputesClient(clientOptions);
        this.evidenceClient = Suppliers.memoize(() -> new EvidenceClient(clientOptions));
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawDisputesClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of disputes associated with a particular account.
     */
    public SyncPagingIterable<Dispute> list() {
        return this.rawClient.list().body();
    }

    /**
     * Returns a list of disputes associated with a particular account.
     */
    public SyncPagingIterable<Dispute> list(ListDisputesRequest request) {
        return this.rawClient.list(request).body();
    }

    /**
     * Returns a list of disputes associated with a particular account.
     */
    public SyncPagingIterable<Dispute> list(ListDisputesRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).body();
    }

    /**
     * Returns details about a specific dispute.
     */
    public GetDisputeResponse get(GetDisputesRequest request) {
        return this.rawClient.get(request).body();
    }

    /**
     * Returns details about a specific dispute.
     */
    public GetDisputeResponse get(GetDisputesRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).body();
    }

    /**
     * Accepts the loss on a dispute. Square returns the disputed amount to the cardholder and
     * updates the dispute state to ACCEPTED.
     * <p>Square debits the disputed amount from the seller’s Square account. If the Square account
     * does not have sufficient funds, Square debits the associated bank account.</p>
     */
    public AcceptDisputeResponse accept(AcceptDisputesRequest request) {
        return this.rawClient.accept(request).body();
    }

    /**
     * Accepts the loss on a dispute. Square returns the disputed amount to the cardholder and
     * updates the dispute state to ACCEPTED.
     * <p>Square debits the disputed amount from the seller’s Square account. If the Square account
     * does not have sufficient funds, Square debits the associated bank account.</p>
     */
    public AcceptDisputeResponse accept(AcceptDisputesRequest request, RequestOptions requestOptions) {
        return this.rawClient.accept(request, requestOptions).body();
    }

    /**
     * Uploads a file to use as evidence in a dispute challenge. The endpoint accepts HTTP
     * multipart/form-data file uploads in HEIC, HEIF, JPEG, PDF, PNG, and TIFF formats.
     */
    public CreateDisputeEvidenceFileResponse createEvidenceFile(CreateEvidenceFileDisputesRequest request) {
        return this.rawClient.createEvidenceFile(request).body();
    }

    /**
     * Uploads a file to use as evidence in a dispute challenge. The endpoint accepts HTTP
     * multipart/form-data file uploads in HEIC, HEIF, JPEG, PDF, PNG, and TIFF formats.
     */
    public CreateDisputeEvidenceFileResponse createEvidenceFile(
            CreateEvidenceFileDisputesRequest request, RequestOptions requestOptions) {
        return this.rawClient.createEvidenceFile(request, requestOptions).body();
    }

    /**
     * Uploads text to use as evidence for a dispute challenge.
     */
    public CreateDisputeEvidenceTextResponse createEvidenceText(CreateDisputeEvidenceTextRequest request) {
        return this.rawClient.createEvidenceText(request).body();
    }

    /**
     * Uploads text to use as evidence for a dispute challenge.
     */
    public CreateDisputeEvidenceTextResponse createEvidenceText(
            CreateDisputeEvidenceTextRequest request, RequestOptions requestOptions) {
        return this.rawClient.createEvidenceText(request, requestOptions).body();
    }

    /**
     * Submits evidence to the cardholder's bank.
     * <p>The evidence submitted by this endpoint includes evidence uploaded
     * using the <a href="api-endpoint:Disputes-CreateDisputeEvidenceFile">CreateDisputeEvidenceFile</a> and
     * <a href="api-endpoint:Disputes-CreateDisputeEvidenceText">CreateDisputeEvidenceText</a> endpoints and
     * evidence automatically provided by Square, when available. Evidence cannot be removed from
     * a dispute after submission.</p>
     */
    public SubmitEvidenceResponse submitEvidence(SubmitEvidenceDisputesRequest request) {
        return this.rawClient.submitEvidence(request).body();
    }

    /**
     * Submits evidence to the cardholder's bank.
     * <p>The evidence submitted by this endpoint includes evidence uploaded
     * using the <a href="api-endpoint:Disputes-CreateDisputeEvidenceFile">CreateDisputeEvidenceFile</a> and
     * <a href="api-endpoint:Disputes-CreateDisputeEvidenceText">CreateDisputeEvidenceText</a> endpoints and
     * evidence automatically provided by Square, when available. Evidence cannot be removed from
     * a dispute after submission.</p>
     */
    public SubmitEvidenceResponse submitEvidence(SubmitEvidenceDisputesRequest request, RequestOptions requestOptions) {
        return this.rawClient.submitEvidence(request, requestOptions).body();
    }

    public EvidenceClient evidence() {
        return this.evidenceClient.get();
    }
}
