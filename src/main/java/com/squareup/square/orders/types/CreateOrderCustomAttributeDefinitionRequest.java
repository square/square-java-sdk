/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.orders.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.CustomAttributeDefinition;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateOrderCustomAttributeDefinitionRequest.Builder.class)
public final class CreateOrderCustomAttributeDefinitionRequest {
    private final CustomAttributeDefinition customAttributeDefinition;

    private final Optional<String> idempotencyKey;

    private final Map<String, Object> additionalProperties;

    private CreateOrderCustomAttributeDefinitionRequest(
            CustomAttributeDefinition customAttributeDefinition,
            Optional<String> idempotencyKey,
            Map<String, Object> additionalProperties) {
        this.customAttributeDefinition = customAttributeDefinition;
        this.idempotencyKey = idempotencyKey;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The custom attribute definition to create. Note the following:
     * <ul>
     * <li>With the exception of the <code>Selection</code> data type, the <code>schema</code> is specified as a simple URL to the JSON schema
     * definition hosted on the Square CDN. For more information, including supported values and constraints, see
     * <a href="https://developer.squareup.com/docs/customer-custom-attributes-api/custom-attribute-definitions#specify-schema">Specifying the schema</a>.</li>
     * <li>If provided, <code>name</code> must be unique (case-sensitive) across all visible customer-related custom attribute definitions for the seller.</li>
     * <li>All custom attributes are visible in exported customer data, including those set to <code>VISIBILITY_HIDDEN</code>.</li>
     * </ul>
     */
    @JsonProperty("custom_attribute_definition")
    public CustomAttributeDefinition getCustomAttributeDefinition() {
        return customAttributeDefinition;
    }

    /**
     * @return A unique identifier for this request, used to ensure idempotency.
     * For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.
     */
    @JsonProperty("idempotency_key")
    public Optional<String> getIdempotencyKey() {
        return idempotencyKey;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateOrderCustomAttributeDefinitionRequest
                && equalTo((CreateOrderCustomAttributeDefinitionRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateOrderCustomAttributeDefinitionRequest other) {
        return customAttributeDefinition.equals(other.customAttributeDefinition)
                && idempotencyKey.equals(other.idempotencyKey);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.customAttributeDefinition, this.idempotencyKey);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CustomAttributeDefinitionStage builder() {
        return new Builder();
    }

    public interface CustomAttributeDefinitionStage {
        /**
         * <p>The custom attribute definition to create. Note the following:</p>
         * <ul>
         * <li>With the exception of the <code>Selection</code> data type, the <code>schema</code> is specified as a simple URL to the JSON schema
         * definition hosted on the Square CDN. For more information, including supported values and constraints, see
         * <a href="https://developer.squareup.com/docs/customer-custom-attributes-api/custom-attribute-definitions#specify-schema">Specifying the schema</a>.</li>
         * <li>If provided, <code>name</code> must be unique (case-sensitive) across all visible customer-related custom attribute definitions for the seller.</li>
         * <li>All custom attributes are visible in exported customer data, including those set to <code>VISIBILITY_HIDDEN</code>.</li>
         * </ul>
         */
        _FinalStage customAttributeDefinition(@NotNull CustomAttributeDefinition customAttributeDefinition);

        Builder from(CreateOrderCustomAttributeDefinitionRequest other);
    }

    public interface _FinalStage {
        CreateOrderCustomAttributeDefinitionRequest build();

        /**
         * <p>A unique identifier for this request, used to ensure idempotency.
         * For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         */
        _FinalStage idempotencyKey(Optional<String> idempotencyKey);

        _FinalStage idempotencyKey(String idempotencyKey);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CustomAttributeDefinitionStage, _FinalStage {
        private CustomAttributeDefinition customAttributeDefinition;

        private Optional<String> idempotencyKey = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateOrderCustomAttributeDefinitionRequest other) {
            customAttributeDefinition(other.getCustomAttributeDefinition());
            idempotencyKey(other.getIdempotencyKey());
            return this;
        }

        /**
         * <p>The custom attribute definition to create. Note the following:</p>
         * <ul>
         * <li>With the exception of the <code>Selection</code> data type, the <code>schema</code> is specified as a simple URL to the JSON schema
         * definition hosted on the Square CDN. For more information, including supported values and constraints, see
         * <a href="https://developer.squareup.com/docs/customer-custom-attributes-api/custom-attribute-definitions#specify-schema">Specifying the schema</a>.</li>
         * <li>If provided, <code>name</code> must be unique (case-sensitive) across all visible customer-related custom attribute definitions for the seller.</li>
         * <li>All custom attributes are visible in exported customer data, including those set to <code>VISIBILITY_HIDDEN</code>.</li>
         * </ul>
         * <p>The custom attribute definition to create. Note the following:</p>
         * <ul>
         * <li>With the exception of the <code>Selection</code> data type, the <code>schema</code> is specified as a simple URL to the JSON schema
         * definition hosted on the Square CDN. For more information, including supported values and constraints, see
         * <a href="https://developer.squareup.com/docs/customer-custom-attributes-api/custom-attribute-definitions#specify-schema">Specifying the schema</a>.</li>
         * <li>If provided, <code>name</code> must be unique (case-sensitive) across all visible customer-related custom attribute definitions for the seller.</li>
         * <li>All custom attributes are visible in exported customer data, including those set to <code>VISIBILITY_HIDDEN</code>.</li>
         * </ul>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("custom_attribute_definition")
        public _FinalStage customAttributeDefinition(@NotNull CustomAttributeDefinition customAttributeDefinition) {
            this.customAttributeDefinition =
                    Objects.requireNonNull(customAttributeDefinition, "customAttributeDefinition must not be null");
            return this;
        }

        /**
         * <p>A unique identifier for this request, used to ensure idempotency.
         * For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage idempotencyKey(String idempotencyKey) {
            this.idempotencyKey = Optional.ofNullable(idempotencyKey);
            return this;
        }

        /**
         * <p>A unique identifier for this request, used to ensure idempotency.
         * For more information, see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "idempotency_key", nulls = Nulls.SKIP)
        public _FinalStage idempotencyKey(Optional<String> idempotencyKey) {
            this.idempotencyKey = idempotencyKey;
            return this;
        }

        @java.lang.Override
        public CreateOrderCustomAttributeDefinitionRequest build() {
            return new CreateOrderCustomAttributeDefinitionRequest(
                    customAttributeDefinition, idempotencyKey, additionalProperties);
        }
    }
}
