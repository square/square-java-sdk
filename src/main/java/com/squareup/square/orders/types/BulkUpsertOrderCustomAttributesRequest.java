/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.orders.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BulkUpsertOrderCustomAttributesRequest.Builder.class)
public final class BulkUpsertOrderCustomAttributesRequest {
    private final Map<String, BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute> values;

    private final Map<String, Object> additionalProperties;

    private BulkUpsertOrderCustomAttributesRequest(
            Map<String, BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute> values,
            Map<String, Object> additionalProperties) {
        this.values = values;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A map of requests that correspond to individual upsert operations for custom attributes.
     */
    @JsonProperty("values")
    public Map<String, BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute> getValues() {
        return values;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkUpsertOrderCustomAttributesRequest
                && equalTo((BulkUpsertOrderCustomAttributesRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkUpsertOrderCustomAttributesRequest other) {
        return values.equals(other.values);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.values);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Map<String, BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute> values = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BulkUpsertOrderCustomAttributesRequest other) {
            values(other.getValues());
            return this;
        }

        /**
         * <p>A map of requests that correspond to individual upsert operations for custom attributes.</p>
         */
        @JsonSetter(value = "values", nulls = Nulls.SKIP)
        public Builder values(Map<String, BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute> values) {
            this.values.clear();
            this.values.putAll(values);
            return this;
        }

        public Builder putAllValues(Map<String, BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute> values) {
            if (values != null) {
                this.values.putAll(values);
            }
            return this;
        }

        public Builder values(String key, BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute value) {
            this.values.put(key, value);
            return this;
        }

        public BulkUpsertOrderCustomAttributesRequest build() {
            return new BulkUpsertOrderCustomAttributesRequest(values, additionalProperties);
        }
    }
}
