/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.orders.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetCustomAttributesRequest.Builder.class)
public final class GetCustomAttributesRequest {
    private final String orderId;

    private final String customAttributeKey;

    private final Optional<Integer> version;

    private final Optional<Boolean> withDefinition;

    private final Map<String, Object> additionalProperties;

    private GetCustomAttributesRequest(
            String orderId,
            String customAttributeKey,
            Optional<Integer> version,
            Optional<Boolean> withDefinition,
            Map<String, Object> additionalProperties) {
        this.orderId = orderId;
        this.customAttributeKey = customAttributeKey;
        this.version = version;
        this.withDefinition = withDefinition;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the target <a href="entity:Order">order</a>.
     */
    @JsonProperty("order_id")
    public String getOrderId() {
        return orderId;
    }

    /**
     * @return The key of the custom attribute to retrieve.  This key must match the key of an
     * existing custom attribute definition.
     */
    @JsonProperty("custom_attribute_key")
    public String getCustomAttributeKey() {
        return customAttributeKey;
    }

    /**
     * @return To enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
     * control, include this optional field and specify the current version of the custom attribute.
     */
    @JsonIgnore
    public Optional<Integer> getVersion() {
        if (version == null) {
            return Optional.empty();
        }
        return version;
    }

    /**
     * @return Indicates whether to return the <a href="entity:CustomAttributeDefinition">custom attribute definition</a> in the <code>definition</code> field of each
     * custom attribute. Set this parameter to <code>true</code> to get the name and description of each custom attribute,
     * information about the data type, or other definition details. The default value is <code>false</code>.
     */
    @JsonIgnore
    public Optional<Boolean> getWithDefinition() {
        if (withDefinition == null) {
            return Optional.empty();
        }
        return withDefinition;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("version")
    private Optional<Integer> _getVersion() {
        return version;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("with_definition")
    private Optional<Boolean> _getWithDefinition() {
        return withDefinition;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetCustomAttributesRequest && equalTo((GetCustomAttributesRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetCustomAttributesRequest other) {
        return orderId.equals(other.orderId)
                && customAttributeKey.equals(other.customAttributeKey)
                && version.equals(other.version)
                && withDefinition.equals(other.withDefinition);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.orderId, this.customAttributeKey, this.version, this.withDefinition);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static OrderIdStage builder() {
        return new Builder();
    }

    public interface OrderIdStage {
        CustomAttributeKeyStage orderId(@NotNull String orderId);

        Builder from(GetCustomAttributesRequest other);
    }

    public interface CustomAttributeKeyStage {
        _FinalStage customAttributeKey(@NotNull String customAttributeKey);
    }

    public interface _FinalStage {
        GetCustomAttributesRequest build();

        _FinalStage version(Optional<Integer> version);

        _FinalStage version(Integer version);

        _FinalStage version(Nullable<Integer> version);

        _FinalStage withDefinition(Optional<Boolean> withDefinition);

        _FinalStage withDefinition(Boolean withDefinition);

        _FinalStage withDefinition(Nullable<Boolean> withDefinition);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements OrderIdStage, CustomAttributeKeyStage, _FinalStage {
        private String orderId;

        private String customAttributeKey;

        private Optional<Boolean> withDefinition = Optional.empty();

        private Optional<Integer> version = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetCustomAttributesRequest other) {
            orderId(other.getOrderId());
            customAttributeKey(other.getCustomAttributeKey());
            version(other.getVersion());
            withDefinition(other.getWithDefinition());
            return this;
        }

        /**
         * <p>The ID of the target <a href="entity:Order">order</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("order_id")
        public CustomAttributeKeyStage orderId(@NotNull String orderId) {
            this.orderId = Objects.requireNonNull(orderId, "orderId must not be null");
            return this;
        }

        /**
         * <p>The key of the custom attribute to retrieve.  This key must match the key of an
         * existing custom attribute definition.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("custom_attribute_key")
        public _FinalStage customAttributeKey(@NotNull String customAttributeKey) {
            this.customAttributeKey = Objects.requireNonNull(customAttributeKey, "customAttributeKey must not be null");
            return this;
        }

        /**
         * <p>Indicates whether to return the <a href="entity:CustomAttributeDefinition">custom attribute definition</a> in the <code>definition</code> field of each
         * custom attribute. Set this parameter to <code>true</code> to get the name and description of each custom attribute,
         * information about the data type, or other definition details. The default value is <code>false</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage withDefinition(Nullable<Boolean> withDefinition) {
            if (withDefinition.isNull()) {
                this.withDefinition = null;
            } else if (withDefinition.isEmpty()) {
                this.withDefinition = Optional.empty();
            } else {
                this.withDefinition = Optional.of(withDefinition.get());
            }
            return this;
        }

        /**
         * <p>Indicates whether to return the <a href="entity:CustomAttributeDefinition">custom attribute definition</a> in the <code>definition</code> field of each
         * custom attribute. Set this parameter to <code>true</code> to get the name and description of each custom attribute,
         * information about the data type, or other definition details. The default value is <code>false</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage withDefinition(Boolean withDefinition) {
            this.withDefinition = Optional.ofNullable(withDefinition);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "with_definition", nulls = Nulls.SKIP)
        public _FinalStage withDefinition(Optional<Boolean> withDefinition) {
            this.withDefinition = withDefinition;
            return this;
        }

        /**
         * <p>To enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
         * control, include this optional field and specify the current version of the custom attribute.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage version(Nullable<Integer> version) {
            if (version.isNull()) {
                this.version = null;
            } else if (version.isEmpty()) {
                this.version = Optional.empty();
            } else {
                this.version = Optional.of(version.get());
            }
            return this;
        }

        /**
         * <p>To enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
         * control, include this optional field and specify the current version of the custom attribute.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage version(Integer version) {
            this.version = Optional.ofNullable(version);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "version", nulls = Nulls.SKIP)
        public _FinalStage version(Optional<Integer> version) {
            this.version = version;
            return this;
        }

        @java.lang.Override
        public GetCustomAttributesRequest build() {
            return new GetCustomAttributesRequest(
                    orderId, customAttributeKey, version, withDefinition, additionalProperties);
        }
    }
}
