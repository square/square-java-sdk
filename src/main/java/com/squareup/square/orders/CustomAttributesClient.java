/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.orders;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.SyncPagingIterable;
import com.squareup.square.orders.types.BulkDeleteOrderCustomAttributesRequest;
import com.squareup.square.orders.types.BulkUpsertOrderCustomAttributesRequest;
import com.squareup.square.orders.types.DeleteCustomAttributesRequest;
import com.squareup.square.orders.types.GetCustomAttributesRequest;
import com.squareup.square.orders.types.ListCustomAttributesRequest;
import com.squareup.square.orders.types.UpsertOrderCustomAttributeRequest;
import com.squareup.square.types.BulkDeleteOrderCustomAttributesResponse;
import com.squareup.square.types.BulkUpsertOrderCustomAttributesResponse;
import com.squareup.square.types.CustomAttribute;
import com.squareup.square.types.DeleteOrderCustomAttributeResponse;
import com.squareup.square.types.RetrieveOrderCustomAttributeResponse;
import com.squareup.square.types.UpsertOrderCustomAttributeResponse;

public class CustomAttributesClient {
    protected final ClientOptions clientOptions;

    private final RawCustomAttributesClient rawClient;

    public CustomAttributesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawCustomAttributesClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawCustomAttributesClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Deletes order <a href="entity:CustomAttribute">custom attributes</a> as a bulk operation.
     * <p>Use this endpoint to delete one or more custom attributes from one or more orders.
     * A custom attribute is based on a custom attribute definition in a Square seller account.  (To create a
     * custom attribute definition, use the <a href="api-endpoint:OrderCustomAttributes-CreateOrderCustomAttributeDefinition">CreateOrderCustomAttributeDefinition</a> endpoint.)</p>
     * <p>This <code>BulkDeleteOrderCustomAttributes</code> endpoint accepts a map of 1 to 25 individual delete
     * requests and returns a map of individual delete responses. Each delete request has a unique ID
     * and provides an order ID and custom attribute. Each delete response is returned with the ID
     * of the corresponding request.</p>
     * <p>To delete a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public BulkDeleteOrderCustomAttributesResponse batchDelete(BulkDeleteOrderCustomAttributesRequest request) {
        return this.rawClient.batchDelete(request).body();
    }

    /**
     * Deletes order <a href="entity:CustomAttribute">custom attributes</a> as a bulk operation.
     * <p>Use this endpoint to delete one or more custom attributes from one or more orders.
     * A custom attribute is based on a custom attribute definition in a Square seller account.  (To create a
     * custom attribute definition, use the <a href="api-endpoint:OrderCustomAttributes-CreateOrderCustomAttributeDefinition">CreateOrderCustomAttributeDefinition</a> endpoint.)</p>
     * <p>This <code>BulkDeleteOrderCustomAttributes</code> endpoint accepts a map of 1 to 25 individual delete
     * requests and returns a map of individual delete responses. Each delete request has a unique ID
     * and provides an order ID and custom attribute. Each delete response is returned with the ID
     * of the corresponding request.</p>
     * <p>To delete a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public BulkDeleteOrderCustomAttributesResponse batchDelete(
            BulkDeleteOrderCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.batchDelete(request, requestOptions).body();
    }

    /**
     * Creates or updates order <a href="entity:CustomAttribute">custom attributes</a> as a bulk operation.
     * <p>Use this endpoint to delete one or more custom attributes from one or more orders.
     * A custom attribute is based on a custom attribute definition in a Square seller account.  (To create a
     * custom attribute definition, use the <a href="api-endpoint:OrderCustomAttributes-CreateOrderCustomAttributeDefinition">CreateOrderCustomAttributeDefinition</a> endpoint.)</p>
     * <p>This <code>BulkUpsertOrderCustomAttributes</code> endpoint accepts a map of 1 to 25 individual upsert
     * requests and returns a map of individual upsert responses. Each upsert request has a unique ID
     * and provides an order ID and custom attribute. Each upsert response is returned with the ID
     * of the corresponding request.</p>
     * <p>To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public BulkUpsertOrderCustomAttributesResponse batchUpsert(BulkUpsertOrderCustomAttributesRequest request) {
        return this.rawClient.batchUpsert(request).body();
    }

    /**
     * Creates or updates order <a href="entity:CustomAttribute">custom attributes</a> as a bulk operation.
     * <p>Use this endpoint to delete one or more custom attributes from one or more orders.
     * A custom attribute is based on a custom attribute definition in a Square seller account.  (To create a
     * custom attribute definition, use the <a href="api-endpoint:OrderCustomAttributes-CreateOrderCustomAttributeDefinition">CreateOrderCustomAttributeDefinition</a> endpoint.)</p>
     * <p>This <code>BulkUpsertOrderCustomAttributes</code> endpoint accepts a map of 1 to 25 individual upsert
     * requests and returns a map of individual upsert responses. Each upsert request has a unique ID
     * and provides an order ID and custom attribute. Each upsert response is returned with the ID
     * of the corresponding request.</p>
     * <p>To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public BulkUpsertOrderCustomAttributesResponse batchUpsert(
            BulkUpsertOrderCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.batchUpsert(request, requestOptions).body();
    }

    /**
     * Lists the <a href="entity:CustomAttribute">custom attributes</a> associated with an order.
     * <p>You can use the <code>with_definitions</code> query parameter to also retrieve custom attribute definitions
     * in the same call.</p>
     * <p>When all response pages are retrieved, the results include all custom attributes that are
     * visible to the requesting application, including those that are owned by other applications
     * and set to <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public SyncPagingIterable<CustomAttribute> list(ListCustomAttributesRequest request) {
        return this.rawClient.list(request).body();
    }

    /**
     * Lists the <a href="entity:CustomAttribute">custom attributes</a> associated with an order.
     * <p>You can use the <code>with_definitions</code> query parameter to also retrieve custom attribute definitions
     * in the same call.</p>
     * <p>When all response pages are retrieved, the results include all custom attributes that are
     * visible to the requesting application, including those that are owned by other applications
     * and set to <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public SyncPagingIterable<CustomAttribute> list(
            ListCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).body();
    }

    /**
     * Retrieves a <a href="entity:CustomAttribute">custom attribute</a> associated with an order.
     * <p>You can use the <code>with_definition</code> query parameter to also retrieve the custom attribute definition
     * in the same call.</p>
     * <p>To retrieve a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public RetrieveOrderCustomAttributeResponse get(GetCustomAttributesRequest request) {
        return this.rawClient.get(request).body();
    }

    /**
     * Retrieves a <a href="entity:CustomAttribute">custom attribute</a> associated with an order.
     * <p>You can use the <code>with_definition</code> query parameter to also retrieve the custom attribute definition
     * in the same call.</p>
     * <p>To retrieve a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_ONLY</code> or <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public RetrieveOrderCustomAttributeResponse get(GetCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).body();
    }

    /**
     * Creates or updates a <a href="entity:CustomAttribute">custom attribute</a> for an order.
     * <p>Use this endpoint to set the value of a custom attribute for a specific order.
     * A custom attribute is based on a custom attribute definition in a Square seller account. (To create a
     * custom attribute definition, use the <a href="api-endpoint:OrderCustomAttributes-CreateOrderCustomAttributeDefinition">CreateOrderCustomAttributeDefinition</a> endpoint.)</p>
     * <p>To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public UpsertOrderCustomAttributeResponse upsert(UpsertOrderCustomAttributeRequest request) {
        return this.rawClient.upsert(request).body();
    }

    /**
     * Creates or updates a <a href="entity:CustomAttribute">custom attribute</a> for an order.
     * <p>Use this endpoint to set the value of a custom attribute for a specific order.
     * A custom attribute is based on a custom attribute definition in a Square seller account. (To create a
     * custom attribute definition, use the <a href="api-endpoint:OrderCustomAttributes-CreateOrderCustomAttributeDefinition">CreateOrderCustomAttributeDefinition</a> endpoint.)</p>
     * <p>To create or update a custom attribute owned by another application, the <code>visibility</code> setting
     * must be <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public UpsertOrderCustomAttributeResponse upsert(
            UpsertOrderCustomAttributeRequest request, RequestOptions requestOptions) {
        return this.rawClient.upsert(request, requestOptions).body();
    }

    /**
     * Deletes a <a href="entity:CustomAttribute">custom attribute</a> associated with a customer profile.
     * <p>To delete a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public DeleteOrderCustomAttributeResponse delete(DeleteCustomAttributesRequest request) {
        return this.rawClient.delete(request).body();
    }

    /**
     * Deletes a <a href="entity:CustomAttribute">custom attribute</a> associated with a customer profile.
     * <p>To delete a custom attribute owned by another application, the <code>visibility</code> setting must be
     * <code>VISIBILITY_READ_WRITE_VALUES</code>. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to <code>VISIBILITY_READ_WRITE_VALUES</code>.</p>
     */
    public DeleteOrderCustomAttributeResponse delete(
            DeleteCustomAttributesRequest request, RequestOptions requestOptions) {
        return this.rawClient.delete(request, requestOptions).body();
    }
}
