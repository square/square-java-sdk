/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.types.BatchCreateVendorsRequest;
import com.squareup.square.types.BatchCreateVendorsResponse;
import com.squareup.square.types.BatchGetVendorsRequest;
import com.squareup.square.types.BatchGetVendorsResponse;
import com.squareup.square.types.BatchUpdateVendorsRequest;
import com.squareup.square.types.BatchUpdateVendorsResponse;
import com.squareup.square.types.CreateVendorRequest;
import com.squareup.square.types.CreateVendorResponse;
import com.squareup.square.types.GetVendorResponse;
import com.squareup.square.types.GetVendorsRequest;
import com.squareup.square.types.SearchVendorsRequest;
import com.squareup.square.types.SearchVendorsResponse;
import com.squareup.square.types.UpdateVendorResponse;
import com.squareup.square.types.UpdateVendorsRequest;

public class VendorsClient {
    protected final ClientOptions clientOptions;

    private final RawVendorsClient rawClient;

    public VendorsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawVendorsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawVendorsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Creates one or more <a href="entity:Vendor">Vendor</a> objects to represent suppliers to a seller.
     */
    public BatchCreateVendorsResponse batchCreate(BatchCreateVendorsRequest request) {
        return this.rawClient.batchCreate(request).body();
    }

    /**
     * Creates one or more <a href="entity:Vendor">Vendor</a> objects to represent suppliers to a seller.
     */
    public BatchCreateVendorsResponse batchCreate(BatchCreateVendorsRequest request, RequestOptions requestOptions) {
        return this.rawClient.batchCreate(request, requestOptions).body();
    }

    /**
     * Retrieves one or more vendors of specified <a href="entity:Vendor">Vendor</a> IDs.
     */
    public BatchGetVendorsResponse batchGet() {
        return this.rawClient.batchGet().body();
    }

    /**
     * Retrieves one or more vendors of specified <a href="entity:Vendor">Vendor</a> IDs.
     */
    public BatchGetVendorsResponse batchGet(BatchGetVendorsRequest request) {
        return this.rawClient.batchGet(request).body();
    }

    /**
     * Retrieves one or more vendors of specified <a href="entity:Vendor">Vendor</a> IDs.
     */
    public BatchGetVendorsResponse batchGet(BatchGetVendorsRequest request, RequestOptions requestOptions) {
        return this.rawClient.batchGet(request, requestOptions).body();
    }

    /**
     * Updates one or more of existing <a href="entity:Vendor">Vendor</a> objects as suppliers to a seller.
     */
    public BatchUpdateVendorsResponse batchUpdate(BatchUpdateVendorsRequest request) {
        return this.rawClient.batchUpdate(request).body();
    }

    /**
     * Updates one or more of existing <a href="entity:Vendor">Vendor</a> objects as suppliers to a seller.
     */
    public BatchUpdateVendorsResponse batchUpdate(BatchUpdateVendorsRequest request, RequestOptions requestOptions) {
        return this.rawClient.batchUpdate(request, requestOptions).body();
    }

    /**
     * Creates a single <a href="entity:Vendor">Vendor</a> object to represent a supplier to a seller.
     */
    public CreateVendorResponse create(CreateVendorRequest request) {
        return this.rawClient.create(request).body();
    }

    /**
     * Creates a single <a href="entity:Vendor">Vendor</a> object to represent a supplier to a seller.
     */
    public CreateVendorResponse create(CreateVendorRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).body();
    }

    /**
     * Searches for vendors using a filter against supported <a href="entity:Vendor">Vendor</a> properties and a supported sorter.
     */
    public SearchVendorsResponse search() {
        return this.rawClient.search().body();
    }

    /**
     * Searches for vendors using a filter against supported <a href="entity:Vendor">Vendor</a> properties and a supported sorter.
     */
    public SearchVendorsResponse search(SearchVendorsRequest request) {
        return this.rawClient.search(request).body();
    }

    /**
     * Searches for vendors using a filter against supported <a href="entity:Vendor">Vendor</a> properties and a supported sorter.
     */
    public SearchVendorsResponse search(SearchVendorsRequest request, RequestOptions requestOptions) {
        return this.rawClient.search(request, requestOptions).body();
    }

    /**
     * Retrieves the vendor of a specified <a href="entity:Vendor">Vendor</a> ID.
     */
    public GetVendorResponse get(GetVendorsRequest request) {
        return this.rawClient.get(request).body();
    }

    /**
     * Retrieves the vendor of a specified <a href="entity:Vendor">Vendor</a> ID.
     */
    public GetVendorResponse get(GetVendorsRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).body();
    }

    /**
     * Updates an existing <a href="entity:Vendor">Vendor</a> object as a supplier to a seller.
     */
    public UpdateVendorResponse update(UpdateVendorsRequest request) {
        return this.rawClient.update(request).body();
    }

    /**
     * Updates an existing <a href="entity:Vendor">Vendor</a> object as a supplier to a seller.
     */
    public UpdateVendorResponse update(UpdateVendorsRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(request, requestOptions).body();
    }
}
