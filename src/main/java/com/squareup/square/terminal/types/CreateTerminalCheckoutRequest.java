/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.terminal.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.TerminalCheckout;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateTerminalCheckoutRequest.Builder.class)
public final class CreateTerminalCheckoutRequest {
    private final String idempotencyKey;

    private final TerminalCheckout checkout;

    private final Map<String, Object> additionalProperties;

    private CreateTerminalCheckoutRequest(
            String idempotencyKey, TerminalCheckout checkout, Map<String, Object> additionalProperties) {
        this.idempotencyKey = idempotencyKey;
        this.checkout = checkout;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A unique string that identifies this <code>CreateCheckout</code> request. Keys can be any valid string but
     * must be unique for every <code>CreateCheckout</code> request.
     * <p>See <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency keys</a> for more information.</p>
     */
    @JsonProperty("idempotency_key")
    public String getIdempotencyKey() {
        return idempotencyKey;
    }

    /**
     * @return The checkout to create.
     */
    @JsonProperty("checkout")
    public TerminalCheckout getCheckout() {
        return checkout;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateTerminalCheckoutRequest && equalTo((CreateTerminalCheckoutRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateTerminalCheckoutRequest other) {
        return idempotencyKey.equals(other.idempotencyKey) && checkout.equals(other.checkout);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.idempotencyKey, this.checkout);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdempotencyKeyStage builder() {
        return new Builder();
    }

    public interface IdempotencyKeyStage {
        CheckoutStage idempotencyKey(@NotNull String idempotencyKey);

        Builder from(CreateTerminalCheckoutRequest other);
    }

    public interface CheckoutStage {
        _FinalStage checkout(@NotNull TerminalCheckout checkout);
    }

    public interface _FinalStage {
        CreateTerminalCheckoutRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdempotencyKeyStage, CheckoutStage, _FinalStage {
        private String idempotencyKey;

        private TerminalCheckout checkout;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateTerminalCheckoutRequest other) {
            idempotencyKey(other.getIdempotencyKey());
            checkout(other.getCheckout());
            return this;
        }

        /**
         * <p>A unique string that identifies this <code>CreateCheckout</code> request. Keys can be any valid string but
         * must be unique for every <code>CreateCheckout</code> request.</p>
         * <p>See <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency keys</a> for more information.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("idempotency_key")
        public CheckoutStage idempotencyKey(@NotNull String idempotencyKey) {
            this.idempotencyKey = Objects.requireNonNull(idempotencyKey, "idempotencyKey must not be null");
            return this;
        }

        /**
         * <p>The checkout to create.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("checkout")
        public _FinalStage checkout(@NotNull TerminalCheckout checkout) {
            this.checkout = Objects.requireNonNull(checkout, "checkout must not be null");
            return this;
        }

        @java.lang.Override
        public CreateTerminalCheckoutRequest build() {
            return new CreateTerminalCheckoutRequest(idempotencyKey, checkout, additionalProperties);
        }
    }
}
