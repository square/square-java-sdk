/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.terminal;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.terminal.types.CancelRefundsRequest;
import com.squareup.square.terminal.types.CreateTerminalRefundRequest;
import com.squareup.square.terminal.types.GetRefundsRequest;
import com.squareup.square.terminal.types.SearchTerminalRefundsRequest;
import com.squareup.square.types.CancelTerminalRefundResponse;
import com.squareup.square.types.CreateTerminalRefundResponse;
import com.squareup.square.types.GetTerminalRefundResponse;
import com.squareup.square.types.SearchTerminalRefundsResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncRefundsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawRefundsClient rawClient;

    public AsyncRefundsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawRefundsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawRefundsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Creates a request to refund an Interac payment completed on a Square Terminal. Refunds for Interac payments on a Square Terminal are supported only for Interac debit cards in Canada. Other refunds for Terminal payments should use the Refunds API. For more information, see <a href="api:Refunds">Refunds API</a>.
     */
    public CompletableFuture<CreateTerminalRefundResponse> create(CreateTerminalRefundRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Creates a request to refund an Interac payment completed on a Square Terminal. Refunds for Interac payments on a Square Terminal are supported only for Interac debit cards in Canada. Other refunds for Terminal payments should use the Refunds API. For more information, see <a href="api:Refunds">Refunds API</a>.
     */
    public CompletableFuture<CreateTerminalRefundResponse> create(
            CreateTerminalRefundRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request. Terminal refund requests are available for 30 days.
     */
    public CompletableFuture<SearchTerminalRefundsResponse> search() {
        return this.rawClient.search().thenApply(response -> response.body());
    }

    /**
     * Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request. Terminal refund requests are available for 30 days.
     */
    public CompletableFuture<SearchTerminalRefundsResponse> search(SearchTerminalRefundsRequest request) {
        return this.rawClient.search(request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request. Terminal refund requests are available for 30 days.
     */
    public CompletableFuture<SearchTerminalRefundsResponse> search(
            SearchTerminalRefundsRequest request, RequestOptions requestOptions) {
        return this.rawClient.search(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves an Interac Terminal refund object by ID. Terminal refund objects are available for 30 days.
     */
    public CompletableFuture<GetTerminalRefundResponse> get(GetRefundsRequest request) {
        return this.rawClient.get(request).thenApply(response -> response.body());
    }

    /**
     * Retrieves an Interac Terminal refund object by ID. Terminal refund objects are available for 30 days.
     */
    public CompletableFuture<GetTerminalRefundResponse> get(GetRefundsRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it.
     */
    public CompletableFuture<CancelTerminalRefundResponse> cancel(CancelRefundsRequest request) {
        return this.rawClient.cancel(request).thenApply(response -> response.body());
    }

    /**
     * Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it.
     */
    public CompletableFuture<CancelTerminalRefundResponse> cancel(
            CancelRefundsRequest request, RequestOptions requestOptions) {
        return this.rawClient.cancel(request, requestOptions).thenApply(response -> response.body());
    }
}
