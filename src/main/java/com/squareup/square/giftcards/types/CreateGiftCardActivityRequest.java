/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.giftcards.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.GiftCardActivity;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateGiftCardActivityRequest.Builder.class)
public final class CreateGiftCardActivityRequest {
    private final String idempotencyKey;

    private final GiftCardActivity giftCardActivity;

    private final Map<String, Object> additionalProperties;

    private CreateGiftCardActivityRequest(
            String idempotencyKey, GiftCardActivity giftCardActivity, Map<String, Object> additionalProperties) {
        this.idempotencyKey = idempotencyKey;
        this.giftCardActivity = giftCardActivity;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A unique string that identifies the <code>CreateGiftCardActivity</code> request.
     */
    @JsonProperty("idempotency_key")
    public String getIdempotencyKey() {
        return idempotencyKey;
    }

    /**
     * @return The activity to create for the gift card. This activity must specify <code>gift_card_id</code> or <code>gift_card_gan</code> for the target
     * gift card, the <code>location_id</code> where the activity occurred, and the activity <code>type</code> along with the corresponding activity details.
     */
    @JsonProperty("gift_card_activity")
    public GiftCardActivity getGiftCardActivity() {
        return giftCardActivity;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateGiftCardActivityRequest && equalTo((CreateGiftCardActivityRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateGiftCardActivityRequest other) {
        return idempotencyKey.equals(other.idempotencyKey) && giftCardActivity.equals(other.giftCardActivity);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.idempotencyKey, this.giftCardActivity);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdempotencyKeyStage builder() {
        return new Builder();
    }

    public interface IdempotencyKeyStage {
        GiftCardActivityStage idempotencyKey(@NotNull String idempotencyKey);

        Builder from(CreateGiftCardActivityRequest other);
    }

    public interface GiftCardActivityStage {
        _FinalStage giftCardActivity(@NotNull GiftCardActivity giftCardActivity);
    }

    public interface _FinalStage {
        CreateGiftCardActivityRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdempotencyKeyStage, GiftCardActivityStage, _FinalStage {
        private String idempotencyKey;

        private GiftCardActivity giftCardActivity;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateGiftCardActivityRequest other) {
            idempotencyKey(other.getIdempotencyKey());
            giftCardActivity(other.getGiftCardActivity());
            return this;
        }

        /**
         * <p>A unique string that identifies the <code>CreateGiftCardActivity</code> request.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("idempotency_key")
        public GiftCardActivityStage idempotencyKey(@NotNull String idempotencyKey) {
            this.idempotencyKey = Objects.requireNonNull(idempotencyKey, "idempotencyKey must not be null");
            return this;
        }

        /**
         * <p>The activity to create for the gift card. This activity must specify <code>gift_card_id</code> or <code>gift_card_gan</code> for the target
         * gift card, the <code>location_id</code> where the activity occurred, and the activity <code>type</code> along with the corresponding activity details.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("gift_card_activity")
        public _FinalStage giftCardActivity(@NotNull GiftCardActivity giftCardActivity) {
            this.giftCardActivity = Objects.requireNonNull(giftCardActivity, "giftCardActivity must not be null");
            return this;
        }

        @java.lang.Override
        public CreateGiftCardActivityRequest build() {
            return new CreateGiftCardActivityRequest(idempotencyKey, giftCardActivity, additionalProperties);
        }
    }
}
