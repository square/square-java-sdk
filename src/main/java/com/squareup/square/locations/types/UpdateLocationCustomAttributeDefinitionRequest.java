/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.locations.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.Nullable;
import com.squareup.square.core.NullableNonemptyFilter;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.CustomAttributeDefinition;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateLocationCustomAttributeDefinitionRequest.Builder.class)
public final class UpdateLocationCustomAttributeDefinitionRequest {
    private final String key;

    private final CustomAttributeDefinition customAttributeDefinition;

    private final Optional<String> idempotencyKey;

    private final Map<String, Object> additionalProperties;

    private UpdateLocationCustomAttributeDefinitionRequest(
            String key,
            CustomAttributeDefinition customAttributeDefinition,
            Optional<String> idempotencyKey,
            Map<String, Object> additionalProperties) {
        this.key = key;
        this.customAttributeDefinition = customAttributeDefinition;
        this.idempotencyKey = idempotencyKey;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The key of the custom attribute definition to update.
     */
    @JsonProperty("key")
    public String getKey() {
        return key;
    }

    /**
     * @return The custom attribute definition that contains the fields to update. This endpoint
     * supports sparse updates, so only new or changed fields need to be included in the request.
     * Only the following fields can be updated:
     * <ul>
     * <li><code>name</code></li>
     * <li><code>description</code></li>
     * <li><code>visibility</code></li>
     * <li><code>schema</code> for a <code>Selection</code> data type. Only changes to the named options or the maximum number of allowed
     * selections are supported.</li>
     * </ul>
     * <p>For more information, see
     * <a href="https://developer.squareup.com/docs/location-custom-attributes-api/custom-attribute-definitions#update-custom-attribute-definition">Update a location custom attribute definition</a>.
     * To enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
     * control, specify the current version of the custom attribute definition.
     * If this is not important for your application, <code>version</code> can be set to -1.</p>
     */
    @JsonProperty("custom_attribute_definition")
    public CustomAttributeDefinition getCustomAttributeDefinition() {
        return customAttributeDefinition;
    }

    /**
     * @return A unique identifier for this request, used to ensure idempotency. For more information,
     * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.
     */
    @JsonIgnore
    public Optional<String> getIdempotencyKey() {
        if (idempotencyKey == null) {
            return Optional.empty();
        }
        return idempotencyKey;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("idempotency_key")
    private Optional<String> _getIdempotencyKey() {
        return idempotencyKey;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateLocationCustomAttributeDefinitionRequest
                && equalTo((UpdateLocationCustomAttributeDefinitionRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateLocationCustomAttributeDefinitionRequest other) {
        return key.equals(other.key)
                && customAttributeDefinition.equals(other.customAttributeDefinition)
                && idempotencyKey.equals(other.idempotencyKey);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.key, this.customAttributeDefinition, this.idempotencyKey);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static KeyStage builder() {
        return new Builder();
    }

    public interface KeyStage {
        /**
         * <p>The key of the custom attribute definition to update.</p>
         */
        CustomAttributeDefinitionStage key(@NotNull String key);

        Builder from(UpdateLocationCustomAttributeDefinitionRequest other);
    }

    public interface CustomAttributeDefinitionStage {
        /**
         * <p>The custom attribute definition that contains the fields to update. This endpoint
         * supports sparse updates, so only new or changed fields need to be included in the request.
         * Only the following fields can be updated:</p>
         * <ul>
         * <li><code>name</code></li>
         * <li><code>description</code></li>
         * <li><code>visibility</code></li>
         * <li><code>schema</code> for a <code>Selection</code> data type. Only changes to the named options or the maximum number of allowed
         * selections are supported.</li>
         * </ul>
         * <p>For more information, see
         * <a href="https://developer.squareup.com/docs/location-custom-attributes-api/custom-attribute-definitions#update-custom-attribute-definition">Update a location custom attribute definition</a>.
         * To enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
         * control, specify the current version of the custom attribute definition.
         * If this is not important for your application, <code>version</code> can be set to -1.</p>
         */
        _FinalStage customAttributeDefinition(@NotNull CustomAttributeDefinition customAttributeDefinition);
    }

    public interface _FinalStage {
        UpdateLocationCustomAttributeDefinitionRequest build();

        /**
         * <p>A unique identifier for this request, used to ensure idempotency. For more information,
         * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         */
        _FinalStage idempotencyKey(Optional<String> idempotencyKey);

        _FinalStage idempotencyKey(String idempotencyKey);

        _FinalStage idempotencyKey(Nullable<String> idempotencyKey);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements KeyStage, CustomAttributeDefinitionStage, _FinalStage {
        private String key;

        private CustomAttributeDefinition customAttributeDefinition;

        private Optional<String> idempotencyKey = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UpdateLocationCustomAttributeDefinitionRequest other) {
            key(other.getKey());
            customAttributeDefinition(other.getCustomAttributeDefinition());
            idempotencyKey(other.getIdempotencyKey());
            return this;
        }

        /**
         * <p>The key of the custom attribute definition to update.</p>
         * <p>The key of the custom attribute definition to update.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("key")
        public CustomAttributeDefinitionStage key(@NotNull String key) {
            this.key = Objects.requireNonNull(key, "key must not be null");
            return this;
        }

        /**
         * <p>The custom attribute definition that contains the fields to update. This endpoint
         * supports sparse updates, so only new or changed fields need to be included in the request.
         * Only the following fields can be updated:</p>
         * <ul>
         * <li><code>name</code></li>
         * <li><code>description</code></li>
         * <li><code>visibility</code></li>
         * <li><code>schema</code> for a <code>Selection</code> data type. Only changes to the named options or the maximum number of allowed
         * selections are supported.</li>
         * </ul>
         * <p>For more information, see
         * <a href="https://developer.squareup.com/docs/location-custom-attributes-api/custom-attribute-definitions#update-custom-attribute-definition">Update a location custom attribute definition</a>.
         * To enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
         * control, specify the current version of the custom attribute definition.
         * If this is not important for your application, <code>version</code> can be set to -1.</p>
         * <p>The custom attribute definition that contains the fields to update. This endpoint
         * supports sparse updates, so only new or changed fields need to be included in the request.
         * Only the following fields can be updated:</p>
         * <ul>
         * <li><code>name</code></li>
         * <li><code>description</code></li>
         * <li><code>visibility</code></li>
         * <li><code>schema</code> for a <code>Selection</code> data type. Only changes to the named options or the maximum number of allowed
         * selections are supported.</li>
         * </ul>
         * <p>For more information, see
         * <a href="https://developer.squareup.com/docs/location-custom-attributes-api/custom-attribute-definitions#update-custom-attribute-definition">Update a location custom attribute definition</a>.
         * To enable <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency">optimistic concurrency</a>
         * control, specify the current version of the custom attribute definition.
         * If this is not important for your application, <code>version</code> can be set to -1.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("custom_attribute_definition")
        public _FinalStage customAttributeDefinition(@NotNull CustomAttributeDefinition customAttributeDefinition) {
            this.customAttributeDefinition =
                    Objects.requireNonNull(customAttributeDefinition, "customAttributeDefinition must not be null");
            return this;
        }

        /**
         * <p>A unique identifier for this request, used to ensure idempotency. For more information,
         * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage idempotencyKey(Nullable<String> idempotencyKey) {
            if (idempotencyKey.isNull()) {
                this.idempotencyKey = null;
            } else if (idempotencyKey.isEmpty()) {
                this.idempotencyKey = Optional.empty();
            } else {
                this.idempotencyKey = Optional.of(idempotencyKey.get());
            }
            return this;
        }

        /**
         * <p>A unique identifier for this request, used to ensure idempotency. For more information,
         * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage idempotencyKey(String idempotencyKey) {
            this.idempotencyKey = Optional.ofNullable(idempotencyKey);
            return this;
        }

        /**
         * <p>A unique identifier for this request, used to ensure idempotency. For more information,
         * see <a href="https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency">Idempotency</a>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "idempotency_key", nulls = Nulls.SKIP)
        public _FinalStage idempotencyKey(Optional<String> idempotencyKey) {
            this.idempotencyKey = idempotencyKey;
            return this;
        }

        @java.lang.Override
        public UpdateLocationCustomAttributeDefinitionRequest build() {
            return new UpdateLocationCustomAttributeDefinitionRequest(
                    key, customAttributeDefinition, idempotencyKey, additionalProperties);
        }
    }
}
