/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.labor.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squareup.square.core.ObjectMappers;
import com.squareup.square.types.WorkweekConfig;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateWorkweekConfigRequest.Builder.class)
public final class UpdateWorkweekConfigRequest {
    private final String id;

    private final WorkweekConfig workweekConfig;

    private final Map<String, Object> additionalProperties;

    private UpdateWorkweekConfigRequest(
            String id, WorkweekConfig workweekConfig, Map<String, Object> additionalProperties) {
        this.id = id;
        this.workweekConfig = workweekConfig;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The UUID for the <code>WorkweekConfig</code> object being updated.
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The updated <code>WorkweekConfig</code> object.
     */
    @JsonProperty("workweek_config")
    public WorkweekConfig getWorkweekConfig() {
        return workweekConfig;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateWorkweekConfigRequest && equalTo((UpdateWorkweekConfigRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateWorkweekConfigRequest other) {
        return id.equals(other.id) && workweekConfig.equals(other.workweekConfig);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.workweekConfig);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>The UUID for the <code>WorkweekConfig</code> object being updated.</p>
         */
        WorkweekConfigStage id(@NotNull String id);

        Builder from(UpdateWorkweekConfigRequest other);
    }

    public interface WorkweekConfigStage {
        /**
         * <p>The updated <code>WorkweekConfig</code> object.</p>
         */
        _FinalStage workweekConfig(@NotNull WorkweekConfig workweekConfig);
    }

    public interface _FinalStage {
        UpdateWorkweekConfigRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, WorkweekConfigStage, _FinalStage {
        private String id;

        private WorkweekConfig workweekConfig;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UpdateWorkweekConfigRequest other) {
            id(other.getId());
            workweekConfig(other.getWorkweekConfig());
            return this;
        }

        /**
         * <p>The UUID for the <code>WorkweekConfig</code> object being updated.</p>
         * <p>The UUID for the <code>WorkweekConfig</code> object being updated.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public WorkweekConfigStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>The updated <code>WorkweekConfig</code> object.</p>
         * <p>The updated <code>WorkweekConfig</code> object.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("workweek_config")
        public _FinalStage workweekConfig(@NotNull WorkweekConfig workweekConfig) {
            this.workweekConfig = Objects.requireNonNull(workweekConfig, "workweekConfig must not be null");
            return this;
        }

        @java.lang.Override
        public UpdateWorkweekConfigRequest build() {
            return new UpdateWorkweekConfigRequest(id, workweekConfig, additionalProperties);
        }
    }
}
