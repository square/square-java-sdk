/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square.labor;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.labor.types.CreateShiftRequest;
import com.squareup.square.labor.types.DeleteShiftsRequest;
import com.squareup.square.labor.types.GetShiftsRequest;
import com.squareup.square.labor.types.SearchShiftsRequest;
import com.squareup.square.labor.types.UpdateShiftRequest;
import com.squareup.square.types.CreateShiftResponse;
import com.squareup.square.types.DeleteShiftResponse;
import com.squareup.square.types.GetShiftResponse;
import com.squareup.square.types.SearchShiftsResponse;
import com.squareup.square.types.UpdateShiftResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncShiftsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawShiftsClient rawClient;

    public AsyncShiftsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawShiftsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawShiftsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Creates a new <code>Shift</code>.
     * <p>A <code>Shift</code> represents a complete workday for a single team member.
     * You must provide the following values in your request to this
     * endpoint:</p>
     * <ul>
     * <li><code>location_id</code></li>
     * <li><code>team_member_id</code></li>
     * <li><code>start_at</code></li>
     * </ul>
     * <p>An attempt to create a new <code>Shift</code> can result in a <code>BAD_REQUEST</code> error when:</p>
     * <ul>
     * <li>The <code>status</code> of the new <code>Shift</code> is <code>OPEN</code> and the team member has another
     * shift with an <code>OPEN</code> status.</li>
     * <li>The <code>start_at</code> date is in the future.</li>
     * <li>The <code>start_at</code> or <code>end_at</code> date overlaps another shift for the same team member.</li>
     * <li>The <code>Break</code> instances are set in the request and a break <code>start_at</code>
     * is before the <code>Shift.start_at</code>, a break <code>end_at</code> is after
     * the <code>Shift.end_at</code>, or both.</li>
     * </ul>
     */
    public CompletableFuture<CreateShiftResponse> create(CreateShiftRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Creates a new <code>Shift</code>.
     * <p>A <code>Shift</code> represents a complete workday for a single team member.
     * You must provide the following values in your request to this
     * endpoint:</p>
     * <ul>
     * <li><code>location_id</code></li>
     * <li><code>team_member_id</code></li>
     * <li><code>start_at</code></li>
     * </ul>
     * <p>An attempt to create a new <code>Shift</code> can result in a <code>BAD_REQUEST</code> error when:</p>
     * <ul>
     * <li>The <code>status</code> of the new <code>Shift</code> is <code>OPEN</code> and the team member has another
     * shift with an <code>OPEN</code> status.</li>
     * <li>The <code>start_at</code> date is in the future.</li>
     * <li>The <code>start_at</code> or <code>end_at</code> date overlaps another shift for the same team member.</li>
     * <li>The <code>Break</code> instances are set in the request and a break <code>start_at</code>
     * is before the <code>Shift.start_at</code>, a break <code>end_at</code> is after
     * the <code>Shift.end_at</code>, or both.</li>
     * </ul>
     */
    public CompletableFuture<CreateShiftResponse> create(CreateShiftRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a paginated list of <code>Shift</code> records for a business.
     * The list to be returned can be filtered by:
     * <ul>
     * <li>Location IDs</li>
     * <li>Team member IDs</li>
     * <li>Shift status (<code>OPEN</code> or <code>CLOSED</code>)</li>
     * <li>Shift start</li>
     * <li>Shift end</li>
     * <li>Workday details</li>
     * </ul>
     * <p>The list can be sorted by:</p>
     * <ul>
     * <li><code>START_AT</code></li>
     * <li><code>END_AT</code></li>
     * <li><code>CREATED_AT</code></li>
     * <li><code>UPDATED_AT</code></li>
     * </ul>
     */
    public CompletableFuture<SearchShiftsResponse> search() {
        return this.rawClient.search().thenApply(response -> response.body());
    }

    /**
     * Returns a paginated list of <code>Shift</code> records for a business.
     * The list to be returned can be filtered by:
     * <ul>
     * <li>Location IDs</li>
     * <li>Team member IDs</li>
     * <li>Shift status (<code>OPEN</code> or <code>CLOSED</code>)</li>
     * <li>Shift start</li>
     * <li>Shift end</li>
     * <li>Workday details</li>
     * </ul>
     * <p>The list can be sorted by:</p>
     * <ul>
     * <li><code>START_AT</code></li>
     * <li><code>END_AT</code></li>
     * <li><code>CREATED_AT</code></li>
     * <li><code>UPDATED_AT</code></li>
     * </ul>
     */
    public CompletableFuture<SearchShiftsResponse> search(SearchShiftsRequest request) {
        return this.rawClient.search(request).thenApply(response -> response.body());
    }

    /**
     * Returns a paginated list of <code>Shift</code> records for a business.
     * The list to be returned can be filtered by:
     * <ul>
     * <li>Location IDs</li>
     * <li>Team member IDs</li>
     * <li>Shift status (<code>OPEN</code> or <code>CLOSED</code>)</li>
     * <li>Shift start</li>
     * <li>Shift end</li>
     * <li>Workday details</li>
     * </ul>
     * <p>The list can be sorted by:</p>
     * <ul>
     * <li><code>START_AT</code></li>
     * <li><code>END_AT</code></li>
     * <li><code>CREATED_AT</code></li>
     * <li><code>UPDATED_AT</code></li>
     * </ul>
     */
    public CompletableFuture<SearchShiftsResponse> search(SearchShiftsRequest request, RequestOptions requestOptions) {
        return this.rawClient.search(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a single <code>Shift</code> specified by <code>id</code>.
     */
    public CompletableFuture<GetShiftResponse> get(GetShiftsRequest request) {
        return this.rawClient.get(request).thenApply(response -> response.body());
    }

    /**
     * Returns a single <code>Shift</code> specified by <code>id</code>.
     */
    public CompletableFuture<GetShiftResponse> get(GetShiftsRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates an existing <code>Shift</code>.
     * <p>When adding a <code>Break</code> to a <code>Shift</code>, any earlier <code>Break</code> instances in the <code>Shift</code> have
     * the <code>end_at</code> property set to a valid RFC-3339 datetime string.</p>
     * <p>When closing a <code>Shift</code>, all <code>Break</code> instances in the <code>Shift</code> must be complete with <code>end_at</code>
     * set on each <code>Break</code>.</p>
     */
    public CompletableFuture<UpdateShiftResponse> update(UpdateShiftRequest request) {
        return this.rawClient.update(request).thenApply(response -> response.body());
    }

    /**
     * Updates an existing <code>Shift</code>.
     * <p>When adding a <code>Break</code> to a <code>Shift</code>, any earlier <code>Break</code> instances in the <code>Shift</code> have
     * the <code>end_at</code> property set to a valid RFC-3339 datetime string.</p>
     * <p>When closing a <code>Shift</code>, all <code>Break</code> instances in the <code>Shift</code> must be complete with <code>end_at</code>
     * set on each <code>Break</code>.</p>
     */
    public CompletableFuture<UpdateShiftResponse> update(UpdateShiftRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Deletes a <code>Shift</code>.
     */
    public CompletableFuture<DeleteShiftResponse> delete(DeleteShiftsRequest request) {
        return this.rawClient.delete(request).thenApply(response -> response.body());
    }

    /**
     * Deletes a <code>Shift</code>.
     */
    public CompletableFuture<DeleteShiftResponse> delete(DeleteShiftsRequest request, RequestOptions requestOptions) {
        return this.rawClient.delete(request, requestOptions).thenApply(response -> response.body());
    }
}
