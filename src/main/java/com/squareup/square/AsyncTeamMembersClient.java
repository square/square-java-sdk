/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squareup.square;

import com.squareup.square.core.ClientOptions;
import com.squareup.square.core.RequestOptions;
import com.squareup.square.core.Suppliers;
import com.squareup.square.teammembers.AsyncWageSettingClient;
import com.squareup.square.types.BatchCreateTeamMembersRequest;
import com.squareup.square.types.BatchCreateTeamMembersResponse;
import com.squareup.square.types.BatchUpdateTeamMembersRequest;
import com.squareup.square.types.BatchUpdateTeamMembersResponse;
import com.squareup.square.types.CreateTeamMemberRequest;
import com.squareup.square.types.CreateTeamMemberResponse;
import com.squareup.square.types.GetTeamMemberResponse;
import com.squareup.square.types.GetTeamMembersRequest;
import com.squareup.square.types.SearchTeamMembersRequest;
import com.squareup.square.types.SearchTeamMembersResponse;
import com.squareup.square.types.UpdateTeamMemberResponse;
import com.squareup.square.types.UpdateTeamMembersRequest;
import java.util.concurrent.CompletableFuture;
import java.util.function.Supplier;

public class AsyncTeamMembersClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawTeamMembersClient rawClient;

    protected final Supplier<AsyncWageSettingClient> wageSettingClient;

    public AsyncTeamMembersClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawTeamMembersClient(clientOptions);
        this.wageSettingClient = Suppliers.memoize(() -> new AsyncWageSettingClient(clientOptions));
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawTeamMembersClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Creates a single <code>TeamMember</code> object. The <code>TeamMember</code> object is returned on successful creates.
     * You must provide the following values in your request to this endpoint:
     * <ul>
     * <li><code>given_name</code></li>
     * <li><code>family_name</code></li>
     * </ul>
     * <p>Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#createteammember">Troubleshooting the Team API</a>.</p>
     */
    public CompletableFuture<CreateTeamMemberResponse> create() {
        return this.rawClient.create().thenApply(response -> response.body());
    }

    /**
     * Creates a single <code>TeamMember</code> object. The <code>TeamMember</code> object is returned on successful creates.
     * You must provide the following values in your request to this endpoint:
     * <ul>
     * <li><code>given_name</code></li>
     * <li><code>family_name</code></li>
     * </ul>
     * <p>Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#createteammember">Troubleshooting the Team API</a>.</p>
     */
    public CompletableFuture<CreateTeamMemberResponse> create(CreateTeamMemberRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Creates a single <code>TeamMember</code> object. The <code>TeamMember</code> object is returned on successful creates.
     * You must provide the following values in your request to this endpoint:
     * <ul>
     * <li><code>given_name</code></li>
     * <li><code>family_name</code></li>
     * </ul>
     * <p>Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#createteammember">Troubleshooting the Team API</a>.</p>
     */
    public CompletableFuture<CreateTeamMemberResponse> create(
            CreateTeamMemberRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates multiple <code>TeamMember</code> objects. The created <code>TeamMember</code> objects are returned on successful creates.
     * This process is non-transactional and processes as much of the request as possible. If one of the creates in
     * the request cannot be successfully processed, the request is not marked as failed, but the body of the response
     * contains explicit error information for the failed create.
     * <p>Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#bulk-create-team-members">Troubleshooting the Team API</a>.</p>
     */
    public CompletableFuture<BatchCreateTeamMembersResponse> batchCreate(BatchCreateTeamMembersRequest request) {
        return this.rawClient.batchCreate(request).thenApply(response -> response.body());
    }

    /**
     * Creates multiple <code>TeamMember</code> objects. The created <code>TeamMember</code> objects are returned on successful creates.
     * This process is non-transactional and processes as much of the request as possible. If one of the creates in
     * the request cannot be successfully processed, the request is not marked as failed, but the body of the response
     * contains explicit error information for the failed create.
     * <p>Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#bulk-create-team-members">Troubleshooting the Team API</a>.</p>
     */
    public CompletableFuture<BatchCreateTeamMembersResponse> batchCreate(
            BatchCreateTeamMembersRequest request, RequestOptions requestOptions) {
        return this.rawClient.batchCreate(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates multiple <code>TeamMember</code> objects. The updated <code>TeamMember</code> objects are returned on successful updates.
     * This process is non-transactional and processes as much of the request as possible. If one of the updates in
     * the request cannot be successfully processed, the request is not marked as failed, but the body of the response
     * contains explicit error information for the failed update.
     * Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#bulk-update-team-members">Troubleshooting the Team API</a>.
     */
    public CompletableFuture<BatchUpdateTeamMembersResponse> batchUpdate(BatchUpdateTeamMembersRequest request) {
        return this.rawClient.batchUpdate(request).thenApply(response -> response.body());
    }

    /**
     * Updates multiple <code>TeamMember</code> objects. The updated <code>TeamMember</code> objects are returned on successful updates.
     * This process is non-transactional and processes as much of the request as possible. If one of the updates in
     * the request cannot be successfully processed, the request is not marked as failed, but the body of the response
     * contains explicit error information for the failed update.
     * Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#bulk-update-team-members">Troubleshooting the Team API</a>.
     */
    public CompletableFuture<BatchUpdateTeamMembersResponse> batchUpdate(
            BatchUpdateTeamMembersRequest request, RequestOptions requestOptions) {
        return this.rawClient.batchUpdate(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a paginated list of <code>TeamMember</code> objects for a business.
     * The list can be filtered by location IDs, <code>ACTIVE</code> or <code>INACTIVE</code> status, or whether
     * the team member is the Square account owner.
     */
    public CompletableFuture<SearchTeamMembersResponse> search() {
        return this.rawClient.search().thenApply(response -> response.body());
    }

    /**
     * Returns a paginated list of <code>TeamMember</code> objects for a business.
     * The list can be filtered by location IDs, <code>ACTIVE</code> or <code>INACTIVE</code> status, or whether
     * the team member is the Square account owner.
     */
    public CompletableFuture<SearchTeamMembersResponse> search(SearchTeamMembersRequest request) {
        return this.rawClient.search(request).thenApply(response -> response.body());
    }

    /**
     * Returns a paginated list of <code>TeamMember</code> objects for a business.
     * The list can be filtered by location IDs, <code>ACTIVE</code> or <code>INACTIVE</code> status, or whether
     * the team member is the Square account owner.
     */
    public CompletableFuture<SearchTeamMembersResponse> search(
            SearchTeamMembersRequest request, RequestOptions requestOptions) {
        return this.rawClient.search(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a <code>TeamMember</code> object for the given <code>TeamMember.id</code>.
     * Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#retrieve-a-team-member">Troubleshooting the Team API</a>.
     */
    public CompletableFuture<GetTeamMemberResponse> get(GetTeamMembersRequest request) {
        return this.rawClient.get(request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a <code>TeamMember</code> object for the given <code>TeamMember.id</code>.
     * Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#retrieve-a-team-member">Troubleshooting the Team API</a>.
     */
    public CompletableFuture<GetTeamMemberResponse> get(GetTeamMembersRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates a single <code>TeamMember</code> object. The <code>TeamMember</code> object is returned on successful updates.
     * Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#update-a-team-member">Troubleshooting the Team API</a>.
     */
    public CompletableFuture<UpdateTeamMemberResponse> update(UpdateTeamMembersRequest request) {
        return this.rawClient.update(request).thenApply(response -> response.body());
    }

    /**
     * Updates a single <code>TeamMember</code> object. The <code>TeamMember</code> object is returned on successful updates.
     * Learn about <a href="https://developer.squareup.com/docs/team/troubleshooting#update-a-team-member">Troubleshooting the Team API</a>.
     */
    public CompletableFuture<UpdateTeamMemberResponse> update(
            UpdateTeamMembersRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(request, requestOptions).thenApply(response -> response.body());
    }

    public AsyncWageSettingClient wageSetting() {
        return this.wageSettingClient.get();
    }
}
